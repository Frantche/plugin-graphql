{"version":3,"file":"vuex-orm-graphql.umd.js","sources":["../node_modules/graphql/jsutils/invariant.js","../node_modules/graphql/language/source.js","../node_modules/graphql/language/location.js","../node_modules/graphql/error/printError.js","../node_modules/graphql/error/GraphQLError.js","../node_modules/graphql/error/syntaxError.js","../node_modules/graphql/error/locatedError.js","../node_modules/graphql/error/formatError.js","../node_modules/graphql/error/index.js","../node_modules/graphql/language/blockStringValue.js","../node_modules/graphql/language/lexer.js","../node_modules/graphql/language/kinds.js","../node_modules/graphql/language/directiveLocation.js","../node_modules/graphql/language/parser.js","../node_modules/graphql/language/visitor.js","../node_modules/graphql/language/printer.js","../src/support/utils.ts","../src/common/logger.ts","../src/orm/model.ts","../node_modules/fast-json-stable-stringify/index.js","../node_modules/apollo-utilities/src/storeUtils.ts","../node_modules/apollo-utilities/src/directives.ts","../node_modules/apollo-utilities/src/fragments.ts","../node_modules/apollo-utilities/src/util/assign.ts","../node_modules/apollo-utilities/src/getFromAST.ts","../node_modules/fclone/dist/fclone.js","../node_modules/apollo-utilities/src/util/cloneDeep.ts","../node_modules/apollo-utilities/src/transform.ts","../node_modules/apollo-utilities/src/util/environment.ts","../node_modules/apollo-utilities/src/util/errorHandling.ts","../node_modules/apollo-utilities/src/util/isEqual.ts","../node_modules/apollo-utilities/src/util/warnOnce.ts","../node_modules/src/core/networkStatus.ts","../node_modules/zen-observable/lib/Observable.js","../node_modules/zen-observable/index.js","../node_modules/zen-observable-ts/src/zenObservable.ts","../node_modules/apollo-link/src/linkUtils.ts","../node_modules/apollo-link/src/link.ts","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/symbol-observable/es/index.js","../node_modules/src/util/Observable.ts","../node_modules/src/errors/ApolloError.ts","../node_modules/src/core/types.ts","../node_modules/src/core/ObservableQuery.ts","../node_modules/apollo-link-dedup/src/dedupLink.ts","../node_modules/src/scheduler/scheduler.ts","../node_modules/src/data/mutations.ts","../node_modules/src/data/queries.ts","../node_modules/src/core/QueryManager.ts","../node_modules/src/data/store.ts","../node_modules/apollo-client/version.js","../node_modules/src/ApolloClient.ts","../node_modules/apollo-cache/src/utils.ts","../node_modules/apollo-cache/src/cache.ts","../node_modules/apollo-cache-inmemory/src/fragmentMatcher.ts","../node_modules/apollo-cache-inmemory/src/objectCache.ts","../node_modules/apollo-cache-inmemory/src/writeToStore.ts","../node_modules/graphql-anywhere/src/graphql.ts","../node_modules/apollo-cache-inmemory/src/readFromStore.ts","../node_modules/apollo-cache-inmemory/src/recordingCache.ts","../node_modules/apollo-cache-inmemory/src/inMemoryCache.ts","../node_modules/apollo-link-http-common/src/index.ts","../node_modules/apollo-link-http/src/httpLink.ts","../src/graphql/transformer.ts","../node_modules/graphql-tag/src/index.js","../src/graphql/apollo.ts","../src/graphql/schema.ts","../src/common/context.ts","../src/graphql/query-builder.ts","../src/orm/store.ts","../src/graphql/name-generator.ts","../src/actions/action.ts","../src/actions/destroy.ts","../src/actions/fetch.ts","../src/actions/mutate.ts","../src/actions/persist.ts","../src/actions/push.ts","../src/actions/query.ts","../src/actions/simple-query.ts","../src/actions/simple-mutation.ts","../src/vuex-orm-graphql.ts"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = invariant;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction invariant(condition, message) {\n  /* istanbul ignore else */\n  if (!condition) {\n    throw new Error(message);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Source = undefined;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           * \n                                                                                                                                                           */\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nvar Source = exports.Source = function Source(body, name, locationOffset) {\n  _classCallCheck(this, Source);\n\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || { line: 1, column: 1 };\n  !(this.locationOffset.line > 0) ? (0, _invariant2.default)(0, 'line in locationOffset is 1-indexed and must be positive') : void 0;\n  !(this.locationOffset.column > 0) ? (0, _invariant2.default)(0, 'column in locationOffset is 1-indexed and must be positive') : void 0;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match = void 0;\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n  return { line: line, column: column };\n}\n\n/**\n * Represents a location in a Source.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printError = printError;\n\nvar _location = require('../language/location');\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\nfunction printError(error) {\n  var printedLocations = [];\n  if (error.nodes) {\n    error.nodes.forEach(function (node) {\n      if (node.loc) {\n        printedLocations.push(highlightSourceAtLocation(node.loc.source, (0, _location.getLocation)(node.loc.source, node.loc.start)));\n      }\n    });\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    error.locations.forEach(function (location) {\n      printedLocations.push(highlightSourceAtLocation(source, location));\n    });\n  }\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction highlightSourceAtLocation(source, location) {\n  var line = location.line;\n  var lineOffset = source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var contextLine = line + lineOffset;\n  var contextColumn = location.column + columnOffset;\n  var prevLineNum = (contextLine - 1).toString();\n  var lineNum = contextLine.toString();\n  var nextLineNum = (contextLine + 1).toString();\n  var padLen = nextLineNum.length;\n  var lines = source.body.split(/\\r\\n|[\\n\\r]/g);\n  lines[0] = whitespace(source.locationOffset.column - 1) + lines[0];\n  var outputLines = [source.name + ' (' + contextLine + ':' + contextColumn + ')', line >= 2 && lpad(padLen, prevLineNum) + ': ' + lines[line - 2], lpad(padLen, lineNum) + ': ' + lines[line - 1], whitespace(2 + padLen + contextColumn - 1) + '^', line < lines.length && lpad(padLen, nextLineNum) + ': ' + lines[line]];\n  return outputLines.filter(Boolean).join('\\n');\n}\n\nfunction getColumnOffset(source, location) {\n  return location.line === 1 ? source.locationOffset.column - 1 : 0;\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLError = GraphQLError;\n\nvar _printError = require('./printError');\n\nvar _location = require('../language/location');\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined;\n\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n      return list;\n    }, []);\n  }\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n  if (positions && source) {\n    var providedSource = source;\n    _locations = positions.map(function (pos) {\n      return (0, _location.getLocation)(providedSource, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push((0, _location.getLocation)(node.loc.source, node.loc.start));\n      }\n      return list;\n    }, []);\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      value: extensions || originalError && originalError.extensions\n    }\n  });\n\n  // Include (non-enumerable) stack trace.\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: { value: GraphQLError },\n  name: { value: 'GraphQLError' },\n  toString: {\n    value: function toString() {\n      return (0, _printError.printError)(this);\n    }\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require('./GraphQLError');\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError('Syntax Error: ' + description, undefined, source, [position]);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locatedError = locatedError;\n\nvar _GraphQLError = require('./GraphQLError');\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(originalError, nodes, path) {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  if (originalError && Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError && originalError.message, originalError && originalError.nodes || nodes, originalError && originalError.source, originalError && originalError.positions, path, originalError);\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**\n                                                                                                                                                                                                                                                                   * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * \n                                                                                                                                                                                                                                                                   */\n\nexports.formatError = formatError;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nfunction formatError(error) {\n  !error ? (0, _invariant2.default)(0, 'Received null or undefined error.') : void 0;\n  return _extends({}, error.extensions, {\n    message: error.message || 'An unknown error occurred.',\n    locations: error.locations,\n    path: error.path\n  });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _GraphQLError = require('./GraphQLError');\n\nObject.defineProperty(exports, 'GraphQLError', {\n  enumerable: true,\n  get: function get() {\n    return _GraphQLError.GraphQLError;\n  }\n});\n\nvar _syntaxError = require('./syntaxError');\n\nObject.defineProperty(exports, 'syntaxError', {\n  enumerable: true,\n  get: function get() {\n    return _syntaxError.syntaxError;\n  }\n});\n\nvar _locatedError = require('./locatedError');\n\nObject.defineProperty(exports, 'locatedError', {\n  enumerable: true,\n  get: function get() {\n    return _locatedError.locatedError;\n  }\n});\n\nvar _printError = require('./printError');\n\nObject.defineProperty(exports, 'printError', {\n  enumerable: true,\n  get: function get() {\n    return _printError.printError;\n  }\n});\n\nvar _formatError = require('./formatError');\n\nObject.defineProperty(exports, 'formatError', {\n  enumerable: true,\n  get: function get() {\n    return _formatError.formatError;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = blockStringValue;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nfunction blockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n\n  // Remove common indentation from all lines but first.\n  var commonIndent = null;\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n    if (indent < line.length && (commonIndent === null || indent < commonIndent)) {\n      commonIndent = indent;\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  if (commonIndent) {\n    for (var _i = 1; _i < lines.length; _i++) {\n      lines[_i] = lines[_i].slice(commonIndent);\n    }\n  }\n\n  // Remove leading and trailing blank lines.\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  }\n\n  // Return a string of the lines joined with U+000A.\n  return lines.join('\\n');\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenKind = undefined;\nexports.createLexer = createLexer;\nexports.getTokenDesc = getTokenDesc;\n\nvar _error = require('../error');\n\nvar _blockStringValue = require('./blockStringValue');\n\nvar _blockStringValue2 = _interopRequireDefault(_blockStringValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction createLexer(source, options) {\n  var startOfFileToken = new Tok(SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n  if (token.kind !== EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === COMMENT);\n  }\n  return token;\n}\n\n/**\n * The return type of createLexer.\n */\n\n\n// Each kind of token.\nvar SOF = '<SOF>';\nvar EOF = '<EOF>';\nvar BANG = '!';\nvar DOLLAR = '$';\nvar PAREN_L = '(';\nvar PAREN_R = ')';\nvar SPREAD = '...';\nvar COLON = ':';\nvar EQUALS = '=';\nvar AT = '@';\nvar BRACKET_L = '[';\nvar BRACKET_R = ']';\nvar BRACE_L = '{';\nvar PIPE = '|';\nvar BRACE_R = '}';\nvar NAME = 'Name';\nvar INT = 'Int';\nvar FLOAT = 'Float';\nvar STRING = 'String';\nvar BLOCK_STRING = 'BlockString';\nvar COMMENT = 'Comment';\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = exports.TokenKind = {\n  SOF: SOF,\n  EOF: EOF,\n  BANG: BANG,\n  DOLLAR: DOLLAR,\n  PAREN_L: PAREN_L,\n  PAREN_R: PAREN_R,\n  SPREAD: SPREAD,\n  COLON: COLON,\n  EQUALS: EQUALS,\n  AT: AT,\n  BRACKET_L: BRACKET_L,\n  BRACKET_R: BRACKET_R,\n  BRACE_L: BRACE_L,\n  PIPE: PIPE,\n  BRACE_R: BRACE_R,\n  NAME: NAME,\n  INT: INT,\n  FLOAT: FLOAT,\n  STRING: STRING,\n  BLOCK_STRING: BLOCK_STRING,\n  COMMENT: COMMENT\n};\n\n/**\n * A helper function to describe a token as a string for debugging\n */\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? token.kind + ' \"' + value + '\"' : token.kind;\n}\n\nvar charCodeAt = String.prototype.charCodeAt;\nvar slice = String.prototype.slice;\n\n/**\n * Helper function for constructing the Token object.\n */\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nTok.prototype.toJSON = Tok.prototype.inspect = function toJSON() {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n};\n\nfunction printCharCode(code) {\n  return (\n    // NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    '\"\\\\u' + ('00' + code.toString(16).toUpperCase()).slice(-4) + '\"'\n  );\n}\n\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace and comments until it finds the next lexable\n * token, then lexes punctuators immediately or calls the appropriate helper\n * function for more complicated tokens.\n */\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n\n  var position = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + position - lexer.lineStart;\n\n  if (position >= bodyLength) {\n    return new Tok(EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = charCodeAt.call(body, position);\n\n  // SourceCharacter\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    throw (0, _error.syntaxError)(source, position, 'Cannot contain the invalid character ' + printCharCode(code) + '.');\n  }\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(BANG, position, position + 1, line, col, prev);\n    // #\n    case 35:\n      return readComment(source, position, line, col, prev);\n    // $\n    case 36:\n      return new Tok(DOLLAR, position, position + 1, line, col, prev);\n    // (\n    case 40:\n      return new Tok(PAREN_L, position, position + 1, line, col, prev);\n    // )\n    case 41:\n      return new Tok(PAREN_R, position, position + 1, line, col, prev);\n    // .\n    case 46:\n      if (charCodeAt.call(body, position + 1) === 46 && charCodeAt.call(body, position + 2) === 46) {\n        return new Tok(SPREAD, position, position + 3, line, col, prev);\n      }\n      break;\n    // :\n    case 58:\n      return new Tok(COLON, position, position + 1, line, col, prev);\n    // =\n    case 61:\n      return new Tok(EQUALS, position, position + 1, line, col, prev);\n    // @\n    case 64:\n      return new Tok(AT, position, position + 1, line, col, prev);\n    // [\n    case 91:\n      return new Tok(BRACKET_L, position, position + 1, line, col, prev);\n    // ]\n    case 93:\n      return new Tok(BRACKET_R, position, position + 1, line, col, prev);\n    // {\n    case 123:\n      return new Tok(BRACE_L, position, position + 1, line, col, prev);\n    // |\n    case 124:\n      return new Tok(PIPE, position, position + 1, line, col, prev);\n    // }\n    case 125:\n      return new Tok(BRACE_R, position, position + 1, line, col, prev);\n    // A-Z _ a-z\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, position, line, col, prev);\n    // - 0-9\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, position, code, line, col, prev);\n    // \"\n    case 34:\n      if (charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n        return readBlockString(source, position, line, col, prev);\n      }\n      return readString(source, position, line, col, prev);\n  }\n\n  throw (0, _error.syntaxError)(source, position, unexpectedCharacterMessage(code));\n}\n\n/**\n * Report a message that an unexpected character was encountered.\n */\nfunction unexpectedCharacterMessage(code) {\n  if (code === 39) {\n    // '\n    return \"Unexpected single quote character ('), did you mean to use \" + 'a double quote (\")?';\n  }\n\n  return 'Cannot parse the unexpected character ' + printCharCode(code) + '.';\n}\n\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * or commented character, then returns the position of that character for\n * lexing.\n */\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n  while (position < bodyLength) {\n    var code = charCodeAt.call(body, position);\n    // tab | space | comma | BOM\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n  return position;\n}\n\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code = void 0;\n  var position = start;\n\n  do {\n    code = charCodeAt.call(body, ++position);\n  } while (code !== null && (\n  // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(COMMENT, start, position, line, col, prev, slice.call(body, start + 1, position));\n}\n\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = charCodeAt.call(body, ++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = charCodeAt.call(body, ++position);\n    if (code >= 48 && code <= 57) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid number, unexpected digit after 0: ' + printCharCode(code) + '.');\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    if (code === 43 || code === 45) {\n      // + -\n      code = charCodeAt.call(body, ++position);\n    }\n    position = readDigits(source, position, code);\n  }\n\n  return new Tok(isFloat ? FLOAT : INT, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n/**\n * Returns the new position in the source after reading digits.\n */\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = charCodeAt.call(body, ++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n    return position;\n  }\n  throw (0, _error.syntaxError)(source, position, 'Invalid number, expected digit but got: ' + printCharCode(code) + '.');\n}\n\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null &&\n  // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += slice.call(body, chunkStart, position);\n      return new Tok(STRING, start, position + 1, line, col, prev, value);\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    ++position;\n    if (code === 92) {\n      // \\\n      value += slice.call(body, chunkStart, position - 1);\n      code = charCodeAt.call(body, position);\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n        case 47:\n          value += '/';\n          break;\n        case 92:\n          value += '\\\\';\n          break;\n        case 98:\n          value += '\\b';\n          break;\n        case 102:\n          value += '\\f';\n          break;\n        case 110:\n          value += '\\n';\n          break;\n        case 114:\n          value += '\\r';\n          break;\n        case 116:\n          value += '\\t';\n          break;\n        case 117:\n          // u\n          var charCode = uniCharCode(charCodeAt.call(body, position + 1), charCodeAt.call(body, position + 2), charCodeAt.call(body, position + 3), charCodeAt.call(body, position + 4));\n          if (charCode < 0) {\n            throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: ' + ('\\\\u' + body.slice(position + 1, position + 5) + '.'));\n          }\n          value += String.fromCharCode(charCode);\n          position += 4;\n          break;\n        default:\n          throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: \\\\' + String.fromCharCode(code) + '.');\n      }\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n}\n\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\nfunction readBlockString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n      rawValue += slice.call(body, chunkStart, position);\n      return new Tok(BLOCK_STRING, start, position + 3, line, col, prev, (0, _blockStringValue2.default)(rawValue));\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    // Escape Triple-Quote (\\\"\"\")\n    if (code === 92 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34 && charCodeAt.call(body, position + 3) === 34) {\n      rawValue += slice.call(body, chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n}\n\n/**\n * Converts four hexidecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\nfunction readName(source, position, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var end = position + 1;\n  var code = 0;\n  while (end !== bodyLength && (code = charCodeAt.call(body, end)) !== null && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++end;\n  }\n  return new Tok(NAME, position, end, line, col, prev, slice.call(body, position, end));\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n// Name\n\nvar NAME = exports.NAME = 'Name';\n\n// Document\n\nvar DOCUMENT = exports.DOCUMENT = 'Document';\nvar OPERATION_DEFINITION = exports.OPERATION_DEFINITION = 'OperationDefinition';\nvar VARIABLE_DEFINITION = exports.VARIABLE_DEFINITION = 'VariableDefinition';\nvar VARIABLE = exports.VARIABLE = 'Variable';\nvar SELECTION_SET = exports.SELECTION_SET = 'SelectionSet';\nvar FIELD = exports.FIELD = 'Field';\nvar ARGUMENT = exports.ARGUMENT = 'Argument';\n\n// Fragments\n\nvar FRAGMENT_SPREAD = exports.FRAGMENT_SPREAD = 'FragmentSpread';\nvar INLINE_FRAGMENT = exports.INLINE_FRAGMENT = 'InlineFragment';\nvar FRAGMENT_DEFINITION = exports.FRAGMENT_DEFINITION = 'FragmentDefinition';\n\n// Values\n\nvar INT = exports.INT = 'IntValue';\nvar FLOAT = exports.FLOAT = 'FloatValue';\nvar STRING = exports.STRING = 'StringValue';\nvar BOOLEAN = exports.BOOLEAN = 'BooleanValue';\nvar NULL = exports.NULL = 'NullValue';\nvar ENUM = exports.ENUM = 'EnumValue';\nvar LIST = exports.LIST = 'ListValue';\nvar OBJECT = exports.OBJECT = 'ObjectValue';\nvar OBJECT_FIELD = exports.OBJECT_FIELD = 'ObjectField';\n\n// Directives\n\nvar DIRECTIVE = exports.DIRECTIVE = 'Directive';\n\n// Types\n\nvar NAMED_TYPE = exports.NAMED_TYPE = 'NamedType';\nvar LIST_TYPE = exports.LIST_TYPE = 'ListType';\nvar NON_NULL_TYPE = exports.NON_NULL_TYPE = 'NonNullType';\n\n// Type System Definitions\n\nvar SCHEMA_DEFINITION = exports.SCHEMA_DEFINITION = 'SchemaDefinition';\nvar OPERATION_TYPE_DEFINITION = exports.OPERATION_TYPE_DEFINITION = 'OperationTypeDefinition';\n\n// Type Definitions\n\nvar SCALAR_TYPE_DEFINITION = exports.SCALAR_TYPE_DEFINITION = 'ScalarTypeDefinition';\nvar OBJECT_TYPE_DEFINITION = exports.OBJECT_TYPE_DEFINITION = 'ObjectTypeDefinition';\nvar FIELD_DEFINITION = exports.FIELD_DEFINITION = 'FieldDefinition';\nvar INPUT_VALUE_DEFINITION = exports.INPUT_VALUE_DEFINITION = 'InputValueDefinition';\nvar INTERFACE_TYPE_DEFINITION = exports.INTERFACE_TYPE_DEFINITION = 'InterfaceTypeDefinition';\nvar UNION_TYPE_DEFINITION = exports.UNION_TYPE_DEFINITION = 'UnionTypeDefinition';\nvar ENUM_TYPE_DEFINITION = exports.ENUM_TYPE_DEFINITION = 'EnumTypeDefinition';\nvar ENUM_VALUE_DEFINITION = exports.ENUM_VALUE_DEFINITION = 'EnumValueDefinition';\nvar INPUT_OBJECT_TYPE_DEFINITION = exports.INPUT_OBJECT_TYPE_DEFINITION = 'InputObjectTypeDefinition';\n\n// Type Extensions\n\nvar SCALAR_TYPE_EXTENSION = exports.SCALAR_TYPE_EXTENSION = 'ScalarTypeExtension';\nvar OBJECT_TYPE_EXTENSION = exports.OBJECT_TYPE_EXTENSION = 'ObjectTypeExtension';\nvar INTERFACE_TYPE_EXTENSION = exports.INTERFACE_TYPE_EXTENSION = 'InterfaceTypeExtension';\nvar UNION_TYPE_EXTENSION = exports.UNION_TYPE_EXTENSION = 'UnionTypeExtension';\nvar ENUM_TYPE_EXTENSION = exports.ENUM_TYPE_EXTENSION = 'EnumTypeExtension';\nvar INPUT_OBJECT_TYPE_EXTENSION = exports.INPUT_OBJECT_TYPE_EXTENSION = 'InputObjectTypeExtension';\n\n// Directive Definitions\n\nvar DIRECTIVE_DEFINITION = exports.DIRECTIVE_DEFINITION = 'DirectiveDefinition';","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation = exports.DirectiveLocation = {\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n};\n\n/**\n * The enum type representing the directive location values.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.parseValue = parseValue;\nexports.parseType = parseType;\nexports.parseConstValue = parseConstValue;\nexports.parseTypeReference = parseTypeReference;\nexports.parseNamedType = parseNamedType;\n\nvar _source = require('./source');\n\nvar _error = require('../error');\n\nvar _lexer = require('./lexer');\n\nvar _kinds = require('./kinds');\n\nvar _directiveLocation = require('./directiveLocation');\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\n\n\n/**\n * Configuration options to control parser behavior\n */\nfunction parse(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  if (!(sourceObj instanceof _source.Source)) {\n    throw new TypeError('Must provide Source. Received: ' + String(sourceObj));\n  }\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  return parseDocument(lexer);\n}\n\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction parseValue(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  expect(lexer, _lexer.TokenKind.SOF);\n  var value = parseValueLiteral(lexer, false);\n  expect(lexer, _lexer.TokenKind.EOF);\n  return value;\n}\n\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\nfunction parseType(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  expect(lexer, _lexer.TokenKind.SOF);\n  var type = parseTypeReference(lexer);\n  expect(lexer, _lexer.TokenKind.EOF);\n  return type;\n}\n\n/**\n * Converts a name lex token into a name parse node.\n */\nfunction parseName(lexer) {\n  var token = expect(lexer, _lexer.TokenKind.NAME);\n  return {\n    kind: _kinds.NAME,\n    value: token.value,\n    loc: loc(lexer, token)\n  };\n}\n\n// Implements the parsing rules in the Document section.\n\n/**\n * Document : Definition+\n */\nfunction parseDocument(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.SOF);\n  var definitions = [];\n  do {\n    definitions.push(parseDefinition(lexer));\n  } while (!skip(lexer, _lexer.TokenKind.EOF));\n\n  return {\n    kind: _kinds.DOCUMENT,\n    definitions: definitions,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Definition :\n *   - ExecutableDefinition\n *   - TypeSystemDefinition\n */\nfunction parseDefinition(lexer) {\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n      case 'fragment':\n        return parseExecutableDefinition(lexer);\n      case 'schema':\n      case 'scalar':\n      case 'type':\n      case 'interface':\n      case 'union':\n      case 'enum':\n      case 'input':\n      case 'extend':\n      case 'directive':\n        // Note: The schema definition language is an experimental addition.\n        return parseTypeSystemDefinition(lexer);\n    }\n  } else if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return parseExecutableDefinition(lexer);\n  } else if (peekDescription(lexer)) {\n    // Note: The schema definition language is an experimental addition.\n    return parseTypeSystemDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n/**\n * ExecutableDefinition :\n *   - OperationDefinition\n *   - FragmentDefinition\n */\nfunction parseExecutableDefinition(lexer) {\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n        return parseOperationDefinition(lexer);\n\n      case 'fragment':\n        return parseFragmentDefinition(lexer);\n    }\n  } else if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return parseOperationDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n// Implements the parsing rules in the Operations section.\n\n/**\n * OperationDefinition :\n *  - SelectionSet\n *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n */\nfunction parseOperationDefinition(lexer) {\n  var start = lexer.token;\n  if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return {\n      kind: _kinds.OPERATION_DEFINITION,\n      operation: 'query',\n      name: undefined,\n      variableDefinitions: [],\n      directives: [],\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  var operation = parseOperationType(lexer);\n  var name = void 0;\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    name = parseName(lexer);\n  }\n  return {\n    kind: _kinds.OPERATION_DEFINITION,\n    operation: operation,\n    name: name,\n    variableDefinitions: parseVariableDefinitions(lexer),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationType : one of query mutation subscription\n */\nfunction parseOperationType(lexer) {\n  var operationToken = expect(lexer, _lexer.TokenKind.NAME);\n  switch (operationToken.value) {\n    case 'query':\n      return 'query';\n    case 'mutation':\n      return 'mutation';\n    case 'subscription':\n      return 'subscription';\n  }\n\n  throw unexpected(lexer, operationToken);\n}\n\n/**\n * VariableDefinitions : ( VariableDefinition+ )\n */\nfunction parseVariableDefinitions(lexer) {\n  return peek(lexer, _lexer.TokenKind.PAREN_L) ? many(lexer, _lexer.TokenKind.PAREN_L, parseVariableDefinition, _lexer.TokenKind.PAREN_R) : [];\n}\n\n/**\n * VariableDefinition : Variable : Type DefaultValue?\n */\nfunction parseVariableDefinition(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.VARIABLE_DEFINITION,\n    variable: parseVariable(lexer),\n    type: (expect(lexer, _lexer.TokenKind.COLON), parseTypeReference(lexer)),\n    defaultValue: skip(lexer, _lexer.TokenKind.EQUALS) ? parseValueLiteral(lexer, true) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Variable : $ Name\n */\nfunction parseVariable(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.DOLLAR);\n  return {\n    kind: _kinds.VARIABLE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * SelectionSet : { Selection+ }\n */\nfunction parseSelectionSet(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.SELECTION_SET,\n    selections: many(lexer, _lexer.TokenKind.BRACE_L, parseSelection, _lexer.TokenKind.BRACE_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Selection :\n *   - Field\n *   - FragmentSpread\n *   - InlineFragment\n */\nfunction parseSelection(lexer) {\n  return peek(lexer, _lexer.TokenKind.SPREAD) ? parseFragment(lexer) : parseField(lexer);\n}\n\n/**\n * Field : Alias? Name Arguments? Directives? SelectionSet?\n *\n * Alias : Name :\n */\nfunction parseField(lexer) {\n  var start = lexer.token;\n\n  var nameOrAlias = parseName(lexer);\n  var alias = void 0;\n  var name = void 0;\n  if (skip(lexer, _lexer.TokenKind.COLON)) {\n    alias = nameOrAlias;\n    name = parseName(lexer);\n  } else {\n    name = nameOrAlias;\n  }\n\n  return {\n    kind: _kinds.FIELD,\n    alias: alias,\n    name: name,\n    arguments: parseArguments(lexer, false),\n    directives: parseDirectives(lexer, false),\n    selectionSet: peek(lexer, _lexer.TokenKind.BRACE_L) ? parseSelectionSet(lexer) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Arguments[Const] : ( Argument[?Const]+ )\n */\nfunction parseArguments(lexer, isConst) {\n  var item = isConst ? parseConstArgument : parseArgument;\n  return peek(lexer, _lexer.TokenKind.PAREN_L) ? many(lexer, _lexer.TokenKind.PAREN_L, item, _lexer.TokenKind.PAREN_R) : [];\n}\n\n/**\n * Argument[Const] : Name : Value[?Const]\n */\nfunction parseArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseValueLiteral(lexer, false)),\n    loc: loc(lexer, start)\n  };\n}\n\nfunction parseConstArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseConstValue(lexer)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Fragments section.\n\n/**\n * Corresponds to both FragmentSpread and InlineFragment in the spec.\n *\n * FragmentSpread : ... FragmentName Directives?\n *\n * InlineFragment : ... TypeCondition? Directives? SelectionSet\n */\nfunction parseFragment(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.SPREAD);\n  if (peek(lexer, _lexer.TokenKind.NAME) && lexer.token.value !== 'on') {\n    return {\n      kind: _kinds.FRAGMENT_SPREAD,\n      name: parseFragmentName(lexer),\n      directives: parseDirectives(lexer, false),\n      loc: loc(lexer, start)\n    };\n  }\n  var typeCondition = void 0;\n  if (lexer.token.value === 'on') {\n    lexer.advance();\n    typeCondition = parseNamedType(lexer);\n  }\n  return {\n    kind: _kinds.INLINE_FRAGMENT,\n    typeCondition: typeCondition,\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentDefinition :\n *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n *\n * TypeCondition : NamedType\n */\nfunction parseFragmentDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'fragment');\n  // Experimental support for defining variables within fragments changes\n  // the grammar of FragmentDefinition:\n  //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n  if (lexer.options.experimentalFragmentVariables) {\n    return {\n      kind: _kinds.FRAGMENT_DEFINITION,\n      name: parseFragmentName(lexer),\n      variableDefinitions: parseVariableDefinitions(lexer),\n      typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n      directives: parseDirectives(lexer, false),\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  return {\n    kind: _kinds.FRAGMENT_DEFINITION,\n    name: parseFragmentName(lexer),\n    typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentName : Name but not `on`\n */\nfunction parseFragmentName(lexer) {\n  if (lexer.token.value === 'on') {\n    throw unexpected(lexer);\n  }\n  return parseName(lexer);\n}\n\n// Implements the parsing rules in the Values section.\n\n/**\n * Value[Const] :\n *   - [~Const] Variable\n *   - IntValue\n *   - FloatValue\n *   - StringValue\n *   - BooleanValue\n *   - NullValue\n *   - EnumValue\n *   - ListValue[?Const]\n *   - ObjectValue[?Const]\n *\n * BooleanValue : one of `true` `false`\n *\n * NullValue : `null`\n *\n * EnumValue : Name but not `true`, `false` or `null`\n */\nfunction parseValueLiteral(lexer, isConst) {\n  var token = lexer.token;\n  switch (token.kind) {\n    case _lexer.TokenKind.BRACKET_L:\n      return parseList(lexer, isConst);\n    case _lexer.TokenKind.BRACE_L:\n      return parseObject(lexer, isConst);\n    case _lexer.TokenKind.INT:\n      lexer.advance();\n      return {\n        kind: _kinds.INT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.FLOAT:\n      lexer.advance();\n      return {\n        kind: _kinds.FLOAT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.STRING:\n    case _lexer.TokenKind.BLOCK_STRING:\n      return parseStringLiteral(lexer);\n    case _lexer.TokenKind.NAME:\n      if (token.value === 'true' || token.value === 'false') {\n        lexer.advance();\n        return {\n          kind: _kinds.BOOLEAN,\n          value: token.value === 'true',\n          loc: loc(lexer, token)\n        };\n      } else if (token.value === 'null') {\n        lexer.advance();\n        return {\n          kind: _kinds.NULL,\n          loc: loc(lexer, token)\n        };\n      }\n      lexer.advance();\n      return {\n        kind: _kinds.ENUM,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.DOLLAR:\n      if (!isConst) {\n        return parseVariable(lexer);\n      }\n      break;\n  }\n  throw unexpected(lexer);\n}\n\nfunction parseStringLiteral(lexer) {\n  var token = lexer.token;\n  lexer.advance();\n  return {\n    kind: _kinds.STRING,\n    value: token.value,\n    block: token.kind === _lexer.TokenKind.BLOCK_STRING,\n    loc: loc(lexer, token)\n  };\n}\n\nfunction parseConstValue(lexer) {\n  return parseValueLiteral(lexer, true);\n}\n\nfunction parseValueValue(lexer) {\n  return parseValueLiteral(lexer, false);\n}\n\n/**\n * ListValue[Const] :\n *   - [ ]\n *   - [ Value[?Const]+ ]\n */\nfunction parseList(lexer, isConst) {\n  var start = lexer.token;\n  var item = isConst ? parseConstValue : parseValueValue;\n  return {\n    kind: _kinds.LIST,\n    values: any(lexer, _lexer.TokenKind.BRACKET_L, item, _lexer.TokenKind.BRACKET_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectValue[Const] :\n *   - { }\n *   - { ObjectField[?Const]+ }\n */\nfunction parseObject(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.BRACE_L);\n  var fields = [];\n  while (!skip(lexer, _lexer.TokenKind.BRACE_R)) {\n    fields.push(parseObjectField(lexer, isConst));\n  }\n  return {\n    kind: _kinds.OBJECT,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectField[Const] : Name : Value[?Const]\n */\nfunction parseObjectField(lexer, isConst) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.OBJECT_FIELD,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseValueLiteral(lexer, isConst)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Directives section.\n\n/**\n * Directives[Const] : Directive[?Const]+\n */\nfunction parseDirectives(lexer, isConst) {\n  var directives = [];\n  while (peek(lexer, _lexer.TokenKind.AT)) {\n    directives.push(parseDirective(lexer, isConst));\n  }\n  return directives;\n}\n\n/**\n * Directive[Const] : @ Name Arguments[?Const]?\n */\nfunction parseDirective(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.AT);\n  return {\n    kind: _kinds.DIRECTIVE,\n    name: parseName(lexer),\n    arguments: parseArguments(lexer, isConst),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Types section.\n\n/**\n * Type :\n *   - NamedType\n *   - ListType\n *   - NonNullType\n */\nfunction parseTypeReference(lexer) {\n  var start = lexer.token;\n  var type = void 0;\n  if (skip(lexer, _lexer.TokenKind.BRACKET_L)) {\n    type = parseTypeReference(lexer);\n    expect(lexer, _lexer.TokenKind.BRACKET_R);\n    type = {\n      kind: _kinds.LIST_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  } else {\n    type = parseNamedType(lexer);\n  }\n  if (skip(lexer, _lexer.TokenKind.BANG)) {\n    return {\n      kind: _kinds.NON_NULL_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  }\n  return type;\n}\n\n/**\n * NamedType : Name\n */\nfunction parseNamedType(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.NAMED_TYPE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Type Definition section.\n\n/**\n * TypeSystemDefinition :\n *   - SchemaDefinition\n *   - TypeDefinition\n *   - TypeExtension\n *   - DirectiveDefinition\n *\n * TypeDefinition :\n *   - ScalarTypeDefinition\n *   - ObjectTypeDefinition\n *   - InterfaceTypeDefinition\n *   - UnionTypeDefinition\n *   - EnumTypeDefinition\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeSystemDefinition(lexer) {\n  // Many definitions begin with a description and require a lookahead.\n  var keywordToken = peekDescription(lexer) ? lexer.lookahead() : lexer.token;\n\n  if (keywordToken.kind === _lexer.TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'schema':\n        return parseSchemaDefinition(lexer);\n      case 'scalar':\n        return parseScalarTypeDefinition(lexer);\n      case 'type':\n        return parseObjectTypeDefinition(lexer);\n      case 'interface':\n        return parseInterfaceTypeDefinition(lexer);\n      case 'union':\n        return parseUnionTypeDefinition(lexer);\n      case 'enum':\n        return parseEnumTypeDefinition(lexer);\n      case 'input':\n        return parseInputObjectTypeDefinition(lexer);\n      case 'extend':\n        return parseTypeExtension(lexer);\n      case 'directive':\n        return parseDirectiveDefinition(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\nfunction peekDescription(lexer) {\n  return peek(lexer, _lexer.TokenKind.STRING) || peek(lexer, _lexer.TokenKind.BLOCK_STRING);\n}\n\n/**\n * Description : StringValue\n */\nfunction parseDescription(lexer) {\n  if (peekDescription(lexer)) {\n    return parseStringLiteral(lexer);\n  }\n}\n\n/**\n * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n */\nfunction parseSchemaDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'schema');\n  var directives = parseDirectives(lexer, true);\n  var operationTypes = many(lexer, _lexer.TokenKind.BRACE_L, parseOperationTypeDefinition, _lexer.TokenKind.BRACE_R);\n  return {\n    kind: _kinds.SCHEMA_DEFINITION,\n    directives: directives,\n    operationTypes: operationTypes,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationTypeDefinition : OperationType : NamedType\n */\nfunction parseOperationTypeDefinition(lexer) {\n  var start = lexer.token;\n  var operation = parseOperationType(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseNamedType(lexer);\n  return {\n    kind: _kinds.OPERATION_TYPE_DEFINITION,\n    operation: operation,\n    type: type,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n */\nfunction parseScalarTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.SCALAR_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeDefinition :\n *   Description?\n *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n */\nfunction parseObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: _kinds.OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ImplementsInterfaces : implements NamedType+\n */\nfunction parseImplementsInterfaces(lexer) {\n  var types = [];\n  if (lexer.token.value === 'implements') {\n    lexer.advance();\n    do {\n      types.push(parseNamedType(lexer));\n    } while (peek(lexer, _lexer.TokenKind.NAME));\n  }\n  return types;\n}\n\n/**\n * FieldsDefinition : { FieldDefinition+ }\n */\nfunction parseFieldsDefinition(lexer) {\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseFieldDefinition, _lexer.TokenKind.BRACE_R) : [];\n}\n\n/**\n * FieldDefinition :\n *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n */\nfunction parseFieldDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.FIELD_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    type: type,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ArgumentsDefinition : ( InputValueDefinition+ )\n */\nfunction parseArgumentDefs(lexer) {\n  if (!peek(lexer, _lexer.TokenKind.PAREN_L)) {\n    return [];\n  }\n  return many(lexer, _lexer.TokenKind.PAREN_L, parseInputValueDef, _lexer.TokenKind.PAREN_R);\n}\n\n/**\n * InputValueDefinition :\n *   - Description? Name : Type DefaultValue? Directives[Const]?\n */\nfunction parseInputValueDef(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var defaultValue = void 0;\n  if (skip(lexer, _lexer.TokenKind.EQUALS)) {\n    defaultValue = parseConstValue(lexer);\n  }\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.INPUT_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    type: type,\n    defaultValue: defaultValue,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeDefinition :\n *   - Description? interface Name Directives[Const]? FieldsDefinition?\n */\nfunction parseInterfaceTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: _kinds.INTERFACE_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeDefinition :\n *   - Description? union Name Directives[Const]? MemberTypesDefinition?\n */\nfunction parseUnionTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseMemberTypesDefinition(lexer);\n  return {\n    kind: _kinds.UNION_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * MemberTypesDefinition : = MemberTypes\n *\n * MemberTypes :\n *   - `|`? NamedType\n *   - MemberTypes | NamedType\n */\nfunction parseMemberTypesDefinition(lexer) {\n  var types = [];\n  if (skip(lexer, _lexer.TokenKind.EQUALS)) {\n    // Optional leading pipe\n    skip(lexer, _lexer.TokenKind.PIPE);\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, _lexer.TokenKind.PIPE));\n  }\n  return types;\n}\n\n/**\n * EnumTypeDefinition :\n *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n */\nfunction parseEnumTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  return {\n    kind: _kinds.ENUM_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumValuesDefinition : { EnumValueDefinition+ }\n */\nfunction parseEnumValuesDefinition(lexer) {\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseEnumValueDefinition, _lexer.TokenKind.BRACE_R) : [];\n}\n\n/**\n * EnumValueDefinition : Description? EnumValue Directives[Const]?\n *\n * EnumValue : Name\n */\nfunction parseEnumValueDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.ENUM_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeDefinition :\n *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n */\nfunction parseInputObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  return {\n    kind: _kinds.INPUT_OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputFieldsDefinition : { InputValueDefinition+ }\n */\nfunction parseInputFieldsDefinition(lexer) {\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseInputValueDef, _lexer.TokenKind.BRACE_R) : [];\n}\n\n/**\n * TypeExtension :\n *   - ScalarTypeExtension\n *   - ObjectTypeExtension\n *   - InterfaceTypeExtension\n *   - UnionTypeExtension\n *   - EnumTypeExtension\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeExtension(lexer) {\n  var keywordToken = lexer.lookahead();\n\n  if (keywordToken.kind === _lexer.TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'scalar':\n        return parseScalarTypeExtension(lexer);\n      case 'type':\n        return parseObjectTypeExtension(lexer);\n      case 'interface':\n        return parseInterfaceTypeExtension(lexer);\n      case 'union':\n        return parseUnionTypeExtension(lexer);\n      case 'enum':\n        return parseEnumTypeExtension(lexer);\n      case 'input':\n        return parseInputObjectTypeExtension(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\n/**\n * ScalarTypeExtension :\n *   - extend scalar Name Directives[Const]\n */\nfunction parseScalarTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  if (directives.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.SCALAR_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeExtension :\n *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n *  - extend type Name ImplementsInterfaces? Directives[Const]\n *  - extend type Name ImplementsInterfaces\n */\nfunction parseObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.OBJECT_TYPE_EXTENSION,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeExtension :\n *   - extend interface Name Directives[Const]? FieldsDefinition\n *   - extend interface Name Directives[Const]\n */\nfunction parseInterfaceTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.INTERFACE_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeExtension :\n *   - extend union Name Directives[Const]? MemberTypesDefinition\n *   - extend union Name Directives[Const]\n */\nfunction parseUnionTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseMemberTypesDefinition(lexer);\n  if (directives.length === 0 && types.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.UNION_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumTypeExtension :\n *   - extend enum Name Directives[Const]? EnumValuesDefinition\n *   - extend enum Name Directives[Const]\n */\nfunction parseEnumTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  if (directives.length === 0 && values.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.ENUM_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeExtension :\n *   - extend input Name Directives[Const]? InputFieldsDefinition\n *   - extend input Name Directives[Const]\n */\nfunction parseInputObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.INPUT_OBJECT_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveDefinition :\n *   - Description? directive @ Name ArgumentsDefinition? on DirectiveLocations\n */\nfunction parseDirectiveDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'directive');\n  expect(lexer, _lexer.TokenKind.AT);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expectKeyword(lexer, 'on');\n  var locations = parseDirectiveLocations(lexer);\n  return {\n    kind: _kinds.DIRECTIVE_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    locations: locations,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveLocations :\n *   - `|`? DirectiveLocation\n *   - DirectiveLocations | DirectiveLocation\n */\nfunction parseDirectiveLocations(lexer) {\n  // Optional leading pipe\n  skip(lexer, _lexer.TokenKind.PIPE);\n  var locations = [];\n  do {\n    locations.push(parseDirectiveLocation(lexer));\n  } while (skip(lexer, _lexer.TokenKind.PIPE));\n  return locations;\n}\n\n/*\n * DirectiveLocation :\n *   - ExecutableDirectiveLocation\n *   - TypeSystemDirectiveLocation\n *\n * ExecutableDirectiveLocation : one of\n *   `QUERY`\n *   `MUTATION`\n *   `SUBSCRIPTION`\n *   `FIELD`\n *   `FRAGMENT_DEFINITION`\n *   `FRAGMENT_SPREAD`\n *   `INLINE_FRAGMENT`\n *\n * TypeSystemDirectiveLocation : one of\n *   `SCHEMA`\n *   `SCALAR`\n *   `OBJECT`\n *   `FIELD_DEFINITION`\n *   `ARGUMENT_DEFINITION`\n *   `INTERFACE`\n *   `UNION`\n *   `ENUM`\n *   `ENUM_VALUE`\n *   `INPUT_OBJECT`\n *   `INPUT_FIELD_DEFINITION`\n */\nfunction parseDirectiveLocation(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n  if (_directiveLocation.DirectiveLocation.hasOwnProperty(name.value)) {\n    return name;\n  }\n  throw unexpected(lexer, start);\n}\n\n// Core parsing utility functions\n\n/**\n * Returns a location object, used to identify the place in\n * the source that created a given parsed object.\n */\nfunction loc(lexer, startToken) {\n  if (!lexer.options.noLocation) {\n    return new Loc(startToken, lexer.lastToken, lexer.source);\n  }\n}\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nLoc.prototype.toJSON = Loc.prototype.inspect = function toJSON() {\n  return { start: this.start, end: this.end };\n};\n\n/**\n * Determines if the next token is of a given kind\n */\nfunction peek(lexer, kind) {\n  return lexer.token.kind === kind;\n}\n\n/**\n * If the next token is of the given kind, return true after advancing\n * the lexer. Otherwise, do not change the parser state and return false.\n */\nfunction skip(lexer, kind) {\n  var match = lexer.token.kind === kind;\n  if (match) {\n    lexer.advance();\n  }\n  return match;\n}\n\n/**\n * If the next token is of the given kind, return that token after advancing\n * the lexer. Otherwise, do not change the parser state and throw an error.\n */\nfunction expect(lexer, kind) {\n  var token = lexer.token;\n  if (token.kind === kind) {\n    lexer.advance();\n    return token;\n  }\n  throw (0, _error.syntaxError)(lexer.source, token.start, 'Expected ' + kind + ', found ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * If the next token is a keyword with the given value, return that token after\n * advancing the lexer. Otherwise, do not change the parser state and return\n * false.\n */\nfunction expectKeyword(lexer, value) {\n  var token = lexer.token;\n  if (token.kind === _lexer.TokenKind.NAME && token.value === value) {\n    lexer.advance();\n    return token;\n  }\n  throw (0, _error.syntaxError)(lexer.source, token.start, 'Expected \"' + value + '\", found ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * Helper function for creating an error when an unexpected lexed token\n * is encountered.\n */\nfunction unexpected(lexer, atToken) {\n  var token = atToken || lexer.token;\n  return (0, _error.syntaxError)(lexer.source, token.start, 'Unexpected ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * Returns a possibly empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction any(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}\n\n/**\n * Returns a non-empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction many(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [parseFn(lexer)];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.visitWithTypeInfo = visitWithTypeInfo;\nexports.getVisitFn = getVisitFn;\n\n\n/**\n * A visitor is comprised of visit functions, which are called on each node\n * during the visitor's traversal.\n */\n\n\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar QueryDocumentKeys = exports.QueryDocumentKeys = {\n  Name: [],\n\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name',\n  // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n\n  Directive: ['name', 'arguments'],\n\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations']\n};\n\n/**\n * A KeyMap describes each the traversable properties of each kind of node.\n */\nvar BREAK = exports.BREAK = {};\n\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n          for (var k in node) {\n            if (node.hasOwnProperty(k)) {\n              clone[k] = node[k];\n            }\n          }\n          node = clone;\n        }\n        var editOffset = 0;\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n          if (inArray) {\n            editKey -= editOffset;\n          }\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n      if (node === null || node === undefined) {\n        continue;\n      }\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + JSON.stringify(node));\n      }\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = { inArray: inArray, index: index, keys: keys, edits: edits, prev: stack };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */false);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */true);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */false);\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n        if (result !== undefined) {\n          typeInfo.leave(node);\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */true);\n      var result = void 0;\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n      var specificKindVisitor = specificVisitor[kind];\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require('./visitor');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, { leave: printDocASTReducer });\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n\n  // Document\n\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet;\n    // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n\n\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n\n  // Fragments\n\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (\n      // Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      'fragment ' + name + wrap('(', join(variableDefinitions, ', '), ')') + ' ' + ('on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n\n  // Value\n\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return JSON.stringify(value);\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n\n  // Directive\n\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n\n  // Type\n\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n\n  // Type System Definitions\n\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n\n  ScalarTypeDefinition: function ScalarTypeDefinition(_ref22) {\n    var description = _ref22.description,\n        name = _ref22.name,\n        directives = _ref22.directives;\n    return join([description, join(['scalar', name, join(directives, ' ')], ' ')], '\\n');\n  },\n\n  ObjectTypeDefinition: function ObjectTypeDefinition(_ref23) {\n    var description = _ref23.description,\n        name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join([description, join(['type', name, wrap('implements ', join(interfaces, ', ')), join(directives, ' '), block(fields)], ' ')], '\\n');\n  },\n\n  FieldDefinition: function FieldDefinition(_ref24) {\n    var description = _ref24.description,\n        name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return join([description, name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '))], '\\n');\n  },\n\n  InputValueDefinition: function InputValueDefinition(_ref25) {\n    var description = _ref25.description,\n        name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([description, join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ')], '\\n');\n  },\n\n  InterfaceTypeDefinition: function InterfaceTypeDefinition(_ref26) {\n    var description = _ref26.description,\n        name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join([description, join(['interface', name, join(directives, ' '), block(fields)], ' ')], '\\n');\n  },\n\n  UnionTypeDefinition: function UnionTypeDefinition(_ref27) {\n    var description = _ref27.description,\n        name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join([description, join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ')], '\\n');\n  },\n\n  EnumTypeDefinition: function EnumTypeDefinition(_ref28) {\n    var description = _ref28.description,\n        name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join([description, join(['enum', name, join(directives, ' '), block(values)], ' ')], '\\n');\n  },\n\n  EnumValueDefinition: function EnumValueDefinition(_ref29) {\n    var description = _ref29.description,\n        name = _ref29.name,\n        directives = _ref29.directives;\n    return join([description, join([name, join(directives, ' ')], ' ')], '\\n');\n  },\n\n  InputObjectTypeDefinition: function InputObjectTypeDefinition(_ref30) {\n    var description = _ref30.description,\n        name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join([description, join(['input', name, join(directives, ' '), block(fields)], ' ')], '\\n');\n  },\n\n  ScalarTypeExtension: function ScalarTypeExtension(_ref31) {\n    var name = _ref31.name,\n        directives = _ref31.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n\n  ObjectTypeExtension: function ObjectTypeExtension(_ref32) {\n    var name = _ref32.name,\n        interfaces = _ref32.interfaces,\n        directives = _ref32.directives,\n        fields = _ref32.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ', ')), join(directives, ' '), block(fields)], ' ');\n  },\n\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives,\n        fields = _ref33.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  UnionTypeExtension: function UnionTypeExtension(_ref34) {\n    var name = _ref34.name,\n        directives = _ref34.directives,\n        types = _ref34.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n\n  EnumTypeExtension: function EnumTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        values = _ref35.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        fields = _ref36.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  DirectiveDefinition: function DirectiveDefinition(_ref37) {\n    var description = _ref37.description,\n        name = _ref37.name,\n        args = _ref37.arguments,\n        locations = _ref37.locations;\n    return join([description, 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ')], '\\n');\n  }\n};\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n  return array && array.length !== 0 ? indent('{\\n' + join(array, '\\n')) + '\\n}' : '';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && maybeString.replace(/\\n/g, '\\n  ');\n}\n\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription) {\n  return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1 ? '\"\"\"' + value.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"' : isDescription ? '\"\"\"\\n' + value.replace(/\"\"\"/g, '\\\\\"\"\"') + '\\n\"\"\"' : indent('\"\"\"\\n' + value.replace(/\"\"\"/g, '\\\\\"\"\"')) + '\\n\"\"\"';\n}","import { parse } from 'graphql/language/parser';\nimport { print } from 'graphql/language/printer';\n\n/**\n * Capitalizes the first letter of the given string.\n *\n * @param {string} input\n * @returns {string}\n */\nexport function upcaseFirstLetter (input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1);\n}\n\n/**\n * Down cases the first letter of the given string.\n *\n * @param {string} input\n * @returns {string}\n */\nexport function downcaseFirstLetter (input: string) {\n  return input.charAt(0).toLowerCase() + input.slice(1);\n}\n\n/**\n * Takes a string with a graphql query and formats it. Useful for debug output and the tests.\n * @param {string} query\n * @returns {string}\n */\nexport function prettify (query: string): string {\n  return print(parse(query));\n}\n\n/**\n * Tells if a object is just a simple object.\n *\n * @param {any} value - Value to check.\n */\nexport function isPlainObject(value: any): boolean {\n  if (!(typeof value === 'object' && value !== null) || value.toString() !== '[object Object]') {\n    return false;\n  }\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n  let proto = value;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(value) === proto;\n}\n\n\n/**\n * Creates an object composed of the picked `object` properties.\n * @param {object} object - Object.\n * @param {array} props - Properties to pick.\n */\nexport function pick(object: any, props: Array<string>) {\n  if (!object) {\n    return {};\n  }\n\n  let index = -1;\n  const length = props.length;\n  const result = {};\n\n  while (++index < length) {\n    const prop = props[index];\n    result[prop] = object[prop];\n  }\n\n  return result;\n}\n\n\nexport function isEqual(a: object, b: object) {\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\n\nexport function clone(input: any): any {\n  JSON.parse(JSON.stringify(input));\n}\n\nexport function takeWhile(array: Array<any>, predicate: (x: any, idx: number, array: Array<any>) => any) {\n  let index = -1;\n\n  while (++index < array.length && predicate(array[index], index, array)) {\n    // just increase index\n  }\n\n  return array.slice(0, index);\n}\n\nexport function matches(source: any) {\n  source = clone(source);\n\n  return (object: any) => isEqual(object, source);\n}\n","import { DocumentNode } from \"graphql\";\nimport { Arguments } from \"../support/interfaces\";\nimport { FetchPolicy } from \"apollo-client\";\nimport { isPlainObject, prettify } from \"../support/utils\";\n\n/**\n * Vuex-ORM-Apollo Debug Logger.\n * Wraps console and only logs if enabled.\n *\n * Also contains some methods to format graphql queries for the output\n */\nexport default class Logger {\n  /**\n   * Tells if any logging should happen\n   * @type {boolean}\n   */\n  private readonly enabled: boolean;\n\n  /**\n   * Fancy Vuex-ORM-Apollo prefix for all log messages.\n   * @type {string[]}\n   */\n  private readonly PREFIX = [\n    \"%c Vuex-ORM: GraphQL Plugin %c\",\n    \"background: #35495e; padding: 1px 0; border-radius: 3px; color: #eee;\",\n    \"background: transparent;\"\n  ];\n\n  /**\n   * @constructor\n   * @param {boolean} enabled Tells if any logging should happen\n   */\n  public constructor(enabled: boolean) {\n    this.enabled = enabled;\n    this.log(\"Logging is enabled.\");\n  }\n\n  /**\n   * Wraps console.group. In TEST env console.log is used instead because console.group doesn't work on CLI.\n   * If available console.groupCollapsed will be used instead.\n   * @param {Array<any>} messages\n   */\n  public group(...messages: Array<any>): void {\n    if (this.enabled) {\n      if (console.groupCollapsed) {\n        console.groupCollapsed(...this.PREFIX, ...messages);\n      } else {\n        console.log(...this.PREFIX, ...messages);\n      }\n    }\n  }\n\n  /**\n   * Wrapper for console.groupEnd. In TEST env nothing happens because console.groupEnd doesn't work on CLI.\n   */\n  public groupEnd(): void {\n    if (this.enabled && console.groupEnd) console.groupEnd();\n  }\n\n  /**\n   * Wrapper for console.log.\n   * @param {Array<any>} messages\n   */\n  public log(...messages: Array<any>): void {\n    if (this.enabled) {\n      console.log(...this.PREFIX, ...messages);\n    }\n  }\n\n  /**\n   * Wrapper for console.warn.\n   * @param {Array<any>} messages\n   */\n  public warn(...messages: Array<any>): void {\n    if (this.enabled) {\n      console.warn(...this.PREFIX, ...messages);\n    }\n  }\n\n  /**\n   * Logs a graphql query in a readable format and with all information like fetch policy and variables.\n   * @param {string | DocumentNode} query\n   * @param {Arguments} variables\n   * @param {FetchPolicy} fetchPolicy\n   */\n  public logQuery(query: string | DocumentNode, variables?: Arguments, fetchPolicy?: FetchPolicy) {\n    if (this.enabled) {\n      try {\n        let prettified = \"\";\n        if (isPlainObject(query) && (query as DocumentNode).loc) {\n          prettified = prettify((query as DocumentNode).loc!.source.body);\n        } else {\n          prettified = prettify(query as string);\n        }\n\n        this.group(\n          \"Sending query:\",\n          prettified\n            .split(\"\\n\")[1]\n            .replace(\"{\", \"\")\n            .trim()\n        );\n        console.log(prettified);\n\n        if (variables) console.log(\"VARIABLES:\", variables);\n        if (fetchPolicy) console.log(\"FETCH POLICY:\", fetchPolicy);\n\n        this.groupEnd();\n      } catch (e) {\n        console.error(\"[Vuex-ORM-Apollo] There is a syntax error in the query!\", e, query);\n      }\n    }\n  }\n}\n","import { Model as ORMModel } from \"@vuex-orm/core\";\nimport { Field } from \"../support/interfaces\";\nimport Context from \"../common/context\";\nimport { Mock, MockOptions } from \"../test-utils\";\nimport { pick, isEqual } from \"../support/utils\";\nconst inflection = require(\"inflection\");\n\n/**\n * Wrapper around a Vuex-ORM model with some useful methods.\n *\n * Also provides a mock system, to define mocking responses for actions.\n */\nexport default class Model {\n  /**\n   * The singular name of a model like `blogPost`\n   * @type {string}\n   */\n  public readonly singularName: string;\n\n  /**\n   * The plural name of a model like `blogPosts`\n   * @type {string}\n   */\n  public readonly pluralName: string;\n\n  /**\n   * The original Vuex-ORM model\n   */\n  public readonly baseModel: ORMModel;\n\n  /**\n   * The fields of the model\n   * @type {Map<string, Field>}\n   */\n  public readonly fields: Map<string, Field> = new Map<string, Field>();\n\n  /**\n   * Container for the mocks.\n   * @type {Object}\n   */\n  private mocks: { [key: string]: Array<Mock> } = {};\n\n  /**\n   * @constructor\n   * @param {Model} baseModel The original Vuex-ORM model\n   */\n  public constructor(baseModel: ORMModel) {\n    this.baseModel = baseModel;\n\n    // Generate name variants\n    this.singularName = inflection.singularize(this.baseModel.entity);\n    this.pluralName = inflection.pluralize(this.baseModel.entity);\n\n    // Cache the fields of the model in this.fields\n    const fields = this.baseModel.fields();\n    Object.keys(fields).forEach((name: string) => {\n      this.fields.set(name, fields[name]);\n    });\n  }\n\n  /**\n   * Tells if a field is a numeric field.\n   *\n   * @param {Field | undefined} field\n   * @returns {boolean}\n   */\n  public static isFieldNumber(field: Field | undefined): boolean {\n    if (!field) return false;\n\n    const context = Context.getInstance();\n    return (\n      field instanceof context.components.Number || field instanceof context.components.Increment\n    );\n  }\n\n  /**\n   * Tells if a field is a attribute (and thus not a relation)\n   * @param {Field} field\n   * @returns {boolean}\n   */\n  public static isFieldAttribute(field: Field): boolean {\n    const context = Context.getInstance();\n\n    return (\n      field instanceof context.components.Increment ||\n      field instanceof context.components.Attr ||\n      field instanceof context.components.String ||\n      field instanceof context.components.Number ||\n      field instanceof context.components.Boolean\n    );\n  }\n\n  /**\n   * Tells if a field which represents a relation is a connection (multiple).\n   * @param {Field} field\n   * @returns {boolean}\n   */\n  public static isConnection(field: Field): boolean {\n    const context = Context.getInstance();\n\n    return !(\n      field instanceof context.components.BelongsTo ||\n      field instanceof context.components.HasOne ||\n      field instanceof context.components.MorphTo ||\n      field instanceof context.components.MorphOne\n    );\n  }\n\n  /**\n   * Adds $isPersisted and other meta fields to the model by overwriting the fields() method.\n   * @todo is this a good way to add fields?\n   * @param {Model} model\n   */\n  public static augment(model: Model) {\n    const originalFieldGenerator = model.baseModel.fields.bind(model.baseModel);\n\n    model.baseModel.fields = () => {\n      const originalFields = originalFieldGenerator();\n\n      originalFields[\"$isPersisted\"] = model.baseModel.boolean(false);\n\n      return originalFields;\n    };\n  }\n\n  /**\n   * Returns all fields which should be included in a graphql query: All attributes which are not included in the\n   * skipFields array or start with $.\n   * @returns {Array<string>} field names which should be queried\n   */\n  public getQueryFields(): Array<string> {\n    const fields: Array<string> = [];\n\n    this.fields.forEach((field: Field, name: string) => {\n      if (Model.isFieldAttribute(field) && !this.skipField(name)) {\n        fields.push(name);\n      }\n    });\n\n    return fields;\n  }\n\n  /**\n   * Tells if a field should be ignored. This is true for fields that start with a `$` or is it is within the skipField\n   * property or is the foreignKey of a belongsTo/hasOne relation.\n   *\n   * @param {string} field\n   * @returns {boolean}\n   */\n  public skipField(field: string) {\n    if (field.startsWith(\"$\")) return true;\n    if (this.baseModel.skipFields && this.baseModel.skipFields.indexOf(field) >= 0) return true;\n\n    const context = Context.getInstance();\n\n    let shouldSkipField: boolean = false;\n\n    this.getRelations().forEach((relation: Field) => {\n      if (\n        (relation instanceof context.components.BelongsTo ||\n          relation instanceof context.components.HasOne) &&\n        relation.foreignKey === field\n      ) {\n        shouldSkipField = true;\n        return false;\n      }\n      return true;\n    });\n\n    return shouldSkipField;\n  }\n\n  /**\n   * @returns {Map<string, Field>} all relations of the model which should be included in a graphql query\n   */\n  public getRelations(): Map<string, Field> {\n    const relations = new Map<string, Field>();\n\n    this.fields.forEach((field: Field, name: string) => {\n      if (!Model.isFieldAttribute(field)) {\n        relations.set(name, field);\n      }\n    });\n\n    return relations;\n  }\n\n  /**\n   * This accepts a field like `subjectType` and checks if this is just randomly named `...Type` or it is part\n   * of a polymorphic relation.\n   * @param {string} name\n   * @returns {boolean}\n   */\n  public isTypeFieldOfPolymorphicRelation(name: string): boolean {\n    const context = Context.getInstance();\n    let found: boolean = false;\n\n    context.models.forEach(model => {\n      if (found) return false;\n\n      model.getRelations().forEach(relation => {\n        if (\n          relation instanceof context.components.MorphMany ||\n          relation instanceof context.components.MorphedByMany ||\n          relation instanceof context.components.MorphOne ||\n          relation instanceof context.components.MorphTo ||\n          relation instanceof context.components.MorphToMany\n        ) {\n          if (\n            relation.type === name &&\n            relation.related &&\n            relation.related.entity === this.baseModel.entity\n          ) {\n            found = true;\n            return false;\n          }\n        }\n\n        return true;\n      });\n\n      return true;\n    });\n\n    return found;\n  }\n\n  /**\n   * Returns a record of this model with the given ID.\n   * @param {number} id\n   * @returns {any}\n   */\n  public getRecordWithId(id: number) {\n    return this.baseModel\n      .query()\n      .withAllRecursive()\n      .where(\"id\", id)\n      .first();\n  }\n\n  /**\n   * Determines if we should eager load (means: add as a field in the graphql query) a related entity. belongsTo or\n   * hasOne related entities are always eager loaded. Others can be added to the `eagerLoad` array of the model.\n   *\n   * @param {string} fieldName Name of the field\n   * @param {Field} field Relation field\n   * @param {Model} relatedModel Related model\n   * @returns {boolean}\n   */\n  public shouldEagerLoadRelation(fieldName: string, field: Field, relatedModel: Model): boolean {\n    const context = Context.getInstance();\n\n    if (\n      field instanceof context.components.HasOne ||\n      field instanceof context.components.BelongsTo ||\n      field instanceof context.components.MorphOne\n    ) {\n      return true;\n    }\n\n    const eagerLoadList: Array<String> = this.baseModel.eagerLoad || [];\n    return (\n      eagerLoadList.find(n => {\n        return n === relatedModel.singularName || n === relatedModel.pluralName || n === fieldName;\n      }) !== undefined\n    );\n  }\n\n  /**\n   * Adds a mock.\n   *\n   * @param {Mock} mock - Mock config.\n   * @returns {boolean}\n   */\n  public $addMock(mock: Mock): boolean {\n    if (this.$findMock(mock.action, mock.options)) return false;\n    if (!this.mocks[mock.action]) this.mocks[mock.action] = [];\n\n    this.mocks[mock.action].push(mock);\n    return true;\n  }\n\n  /**\n   * Finds a mock for the given action and options.\n   *\n   * @param {string} action - Name of the action like 'fetch'.\n   * @param {MockOptions} options - MockOptions like { variables: { id: 42 } }.\n   * @returns {Mock | null} null when no mock was found.\n   */\n  public $findMock(action: string, options: MockOptions | undefined): Mock | null {\n    if (this.mocks[action]) {\n      return (\n        this.mocks[action].find(m => {\n          if (!m.options || !options) return true;\n\n          const relevantOptions = pick(options, Object.keys(m.options));\n          return isEqual(relevantOptions, m.options || {});\n        }) || null\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Hook to be called by all actions in order to get the mock returnValue.\n   *\n   * @param {string} action - Name of the action like 'fetch'.\n   * @param {MockOptions} options - MockOptions.\n   * @returns {any} null when no mock was found.\n   */\n  public $mockHook(action: string, options: MockOptions): any {\n    let returnValue: null | { [key: string]: any } = null;\n    const mock = this.$findMock(action, options);\n\n    if (mock) {\n      if (mock.returnValue instanceof Function) {\n        returnValue = mock.returnValue();\n      } else {\n        returnValue = mock.returnValue || null;\n      }\n    }\n\n    if (returnValue) {\n      if (returnValue instanceof Array) {\n        returnValue.forEach(r => (r.$isPersisted = true));\n      } else {\n        returnValue.$isPersisted = true;\n      }\n\n      return { [this.pluralName]: returnValue };\n    }\n\n    return null;\n  }\n}\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","import {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n} from 'graphql';\n\nimport stringify from 'fast-json-stable-stringify';\n\nexport interface IdValue {\n  type: 'id';\n  id: string;\n  generated: boolean;\n  typename: string | undefined;\n}\n\nexport interface JsonValue {\n  type: 'json';\n  json: any;\n}\n\nexport type ListValue = Array<null | IdValue>;\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | IdValue\n  | ListValue\n  | JsonValue\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport type ScalarValue = StringValueNode | BooleanValueNode | EnumValueNode;\n\nexport function isScalarValue(value: ValueNode): value is ScalarValue {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nexport type NumberValue = IntValueNode | FloatValueNode;\n\nexport function isNumberValue(value: ValueNode): value is NumberValue {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new Error(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport function getStoreKeyName(\n  fieldName: string,\n  args?: Object,\n  directives?: Directives,\n): string {\n  if (\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const queryArgs = args as { [key: string]: any };\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = queryArgs[key];\n      });\n\n      return `${directives['connection']['key']}(${JSON.stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${JSON.stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables: Object,\n): Object {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport function isIdValue(idObject: StoreValue): idObject is IdValue {\n  return idObject && (idObject as IdValue | JsonValue).type === 'id';\n}\n\nexport type IdConfig = {\n  id: string;\n  typename: string | undefined;\n};\n\nexport function toIdValue(\n  idConfig: string | IdConfig,\n  generated = false,\n): IdValue {\n  return {\n    type: 'id',\n    generated,\n    ...(typeof idConfig === 'string'\n      ? { id: idConfig, typename: undefined }\n      : idConfig),\n  };\n}\n\nexport function isJsonValue(jsonObject: StoreValue): jsonObject is JsonValue {\n  return (\n    jsonObject != null &&\n    typeof jsonObject === 'object' &&\n    (jsonObject as IdValue | JsonValue).type === 'json'\n  );\n}\n\nfunction defaultValueFromVariable(node: VariableNode) {\n  throw new Error(`Variable nodes are not supported by valueFromNode`);\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(\n  node: ValueNode,\n  onVariable: VariableValue = defaultValueFromVariable,\n): any {\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n    case 'NullValue':\n      return null;\n    case 'IntValue':\n      return parseInt(node.value, 10);\n    case 'FloatValue':\n      return parseFloat(node.value);\n    case 'ListValue':\n      return node.values.map(v => valueFromNode(v, onVariable));\n    case 'ObjectValue': {\n      const value: { [key: string]: any } = {};\n      for (const field of node.fields) {\n        value[field.name.value] = valueFromNode(field.value, onVariable);\n      }\n      return value;\n    }\n    default:\n      return node.value;\n  }\n}\n","// Provides the methods that allow QueryManager to handle\r\n// the `skip` and `include` directives within GraphQL.\r\nimport {\r\n  FieldNode,\r\n  OperationDefinitionNode,\r\n  SelectionNode,\r\n  VariableNode,\r\n  BooleanValueNode,\r\n  DirectiveNode,\r\n  DocumentNode,\r\n} from 'graphql';\r\n\r\nimport { argumentsObjectFromField } from './storeUtils';\r\n\r\nexport type DirectiveInfo = {\r\n  [fieldName: string]: { [argName: string]: any };\r\n};\r\n\r\nexport function getDirectiveInfoFromField(\r\n  field: FieldNode,\r\n  variables: Object,\r\n): DirectiveInfo {\r\n  if (field.directives && field.directives.length) {\r\n    const directiveObj: DirectiveInfo = {};\r\n    field.directives.forEach((directive: DirectiveNode) => {\r\n      directiveObj[directive.name.value] = argumentsObjectFromField(\r\n        directive,\r\n        variables,\r\n      );\r\n    });\r\n    return directiveObj;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function shouldInclude(\r\n  selection: SelectionNode,\r\n  variables: { [name: string]: any } = {},\r\n): boolean {\r\n  if (!selection.directives) {\r\n    return true;\r\n  }\r\n\r\n  let res: boolean = true;\r\n  selection.directives.forEach(directive => {\r\n    // TODO should move this validation to GraphQL validation once that's implemented.\r\n    if (directive.name.value !== 'skip' && directive.name.value !== 'include') {\r\n      // Just don't worry about directives we don't understand\r\n      return;\r\n    }\r\n\r\n    //evaluate the \"if\" argument and skip (i.e. return undefined) if it evaluates to true.\r\n    const directiveArguments = directive.arguments || [];\r\n    const directiveName = directive.name.value;\r\n    if (directiveArguments.length !== 1) {\r\n      throw new Error(\r\n        `Incorrect number of arguments for the @${directiveName} directive.`,\r\n      );\r\n    }\r\n\r\n    const ifArgument = directiveArguments[0];\r\n    if (!ifArgument.name || ifArgument.name.value !== 'if') {\r\n      throw new Error(`Invalid argument for the @${directiveName} directive.`);\r\n    }\r\n\r\n    const ifValue = directiveArguments[0].value;\r\n    let evaledValue: boolean = false;\r\n    if (!ifValue || ifValue.kind !== 'BooleanValue') {\r\n      // means it has to be a variable value if this is a valid @skip or @include directive\r\n      if (ifValue.kind !== 'Variable') {\r\n        throw new Error(\r\n          `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\r\n        );\r\n      } else {\r\n        evaledValue = variables[(ifValue as VariableNode).name.value];\r\n        if (evaledValue === undefined) {\r\n          throw new Error(\r\n            `Invalid variable referenced in @${directiveName} directive.`,\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      evaledValue = (ifValue as BooleanValueNode).value;\r\n    }\r\n\r\n    if (directiveName === 'skip') {\r\n      evaledValue = !evaledValue;\r\n    }\r\n\r\n    if (!evaledValue) {\r\n      res = false;\r\n    }\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nexport function flattenSelections(selection: SelectionNode): SelectionNode[] {\r\n  if (\r\n    !(selection as FieldNode).selectionSet ||\r\n    !((selection as FieldNode).selectionSet.selections.length > 0)\r\n  )\r\n    return [selection];\r\n\r\n  return [selection].concat(\r\n    (selection as FieldNode).selectionSet.selections\r\n      .map(selectionNode =>\r\n        [selectionNode].concat(flattenSelections(selectionNode)),\r\n      )\r\n      .reduce((selections, selected) => selections.concat(selected), []),\r\n  );\r\n}\r\n\r\nexport function getDirectiveNames(doc: DocumentNode) {\r\n  // operation => [names of directives];\r\n  const directiveNames = doc.definitions\r\n    .filter(\r\n      (definition: OperationDefinitionNode) =>\r\n        definition.selectionSet && definition.selectionSet.selections,\r\n    )\r\n    // operation => [[Selection]]\r\n    .map(x => flattenSelections(x as any))\r\n    // [[Selection]] => [Selection]\r\n    .reduce((selections, selected) => selections.concat(selected), [])\r\n    // [Selection] => [Selection with Directives]\r\n    .filter(\r\n      (selection: SelectionNode) =>\r\n        selection.directives && selection.directives.length > 0,\r\n    )\r\n    // [Selection with Directives] => [[Directives]]\r\n    .map((selection: SelectionNode) => selection.directives)\r\n    // [[Directives]] => [Directives]\r\n    .reduce((directives, directive) => directives.concat(directive), [])\r\n    // [Directives] => [Name]\r\n    .map((directive: DirectiveNode) => directive.name.value);\r\n  return directiveNames;\r\n}\r\n\r\nexport function hasDirectives(names: string[], doc: DocumentNode) {\r\n  return getDirectiveNames(doc).some(\r\n    (name: string) => names.indexOf(name) > -1,\r\n  );\r\n}\r\n","import { DocumentNode, FragmentDefinitionNode } from 'graphql';\r\n\r\n/**\r\n * Returns a query document which adds a single query operation that only\r\n * spreads the target fragment inside of it.\r\n *\r\n * So for example a document of:\r\n *\r\n * ```graphql\r\n * fragment foo on Foo { a b c }\r\n * ```\r\n *\r\n * Turns into:\r\n *\r\n * ```graphql\r\n * { ...foo }\r\n *\r\n * fragment foo on Foo { a b c }\r\n * ```\r\n *\r\n * The target fragment will either be the only fragment in the document, or a\r\n * fragment specified by the provided `fragmentName`. If there is more then one\r\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\r\n */\r\nexport function getFragmentQueryDocument(\r\n  document: DocumentNode,\r\n  fragmentName?: string,\r\n): DocumentNode {\r\n  let actualFragmentName = fragmentName;\r\n\r\n  // Build an array of all our fragment definitions that will be used for\r\n  // validations. We also do some validations on the other definitions in the\r\n  // document while building this list.\r\n  const fragments: Array<FragmentDefinitionNode> = [];\r\n  document.definitions.forEach(definition => {\r\n    // Throw an error if we encounter an operation definition because we will\r\n    // define our own operation definition later on.\r\n    if (definition.kind === 'OperationDefinition') {\r\n      throw new Error(\r\n        `Found a ${definition.operation} operation${\r\n          definition.name ? ` named '${definition.name.value}'` : ''\r\n        }. ` +\r\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\r\n      );\r\n    }\r\n    // Add our definition to the fragments array if it is a fragment\r\n    // definition.\r\n    if (definition.kind === 'FragmentDefinition') {\r\n      fragments.push(definition);\r\n    }\r\n  });\r\n\r\n  // If the user did not give us a fragment name then let us try to get a\r\n  // name from a single fragment in the definition.\r\n  if (typeof actualFragmentName === 'undefined') {\r\n    if (fragments.length !== 1) {\r\n      throw new Error(\r\n        `Found ${\r\n          fragments.length\r\n        } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\r\n      );\r\n    }\r\n    actualFragmentName = fragments[0].name.value;\r\n  }\r\n\r\n  // Generate a query document with an operation that simply spreads the\r\n  // fragment inside of it.\r\n  const query: DocumentNode = {\r\n    ...document,\r\n    definitions: [\r\n      {\r\n        kind: 'OperationDefinition',\r\n        operation: 'query',\r\n        selectionSet: {\r\n          kind: 'SelectionSet',\r\n          selections: [\r\n            {\r\n              kind: 'FragmentSpread',\r\n              name: {\r\n                kind: 'Name',\r\n                value: actualFragmentName,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      ...document.definitions,\r\n    ],\r\n  };\r\n\r\n  return query;\r\n}\r\n","/**\r\n * Adds the properties of one or more source objects to a target object. Works exactly like\r\n * `Object.assign`, but as a utility to maintain support for IE 11.\r\n *\r\n * @see https://github.com/apollostack/apollo-client/pull/1009\r\n */\r\nexport function assign<A, B>(a: A, b: B): A & B;\r\nexport function assign<A, B, C>(a: A, b: B, c: C): A & B & C;\r\nexport function assign<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;\r\nexport function assign<A, B, C, D, E>(\r\n  a: A,\r\n  b: B,\r\n  c: C,\r\n  d: D,\r\n  e: E,\r\n): A & B & C & D & E;\r\nexport function assign(target: any, ...sources: Array<any>): any;\r\nexport function assign(\r\n  target: { [key: string]: any },\r\n  ...sources: Array<{ [key: string]: any }>\r\n): { [key: string]: any } {\r\n  sources.forEach(source => {\r\n    if (typeof source === 'undefined' || source === null) {\r\n      return;\r\n    }\r\n    Object.keys(source).forEach(key => {\r\n      target[key] = source[key];\r\n    });\r\n  });\r\n  return target;\r\n}\r\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\nimport { assign } from './util/assign';\n\nimport { valueToObjectRepresentation, JsonValue } from './storeUtils';\n\nexport function getMutationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode {\n  checkDocument(doc);\n\n  let mutationDef: OperationDefinitionNode | null = doc.definitions.filter(\n    definition =>\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'mutation',\n  )[0] as OperationDefinitionNode;\n\n  if (!mutationDef) {\n    throw new Error('Must contain a mutation definition.');\n  }\n\n  return mutationDef;\n}\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  if (doc.kind !== 'Document') {\n    throw new Error(`Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`);\n  }\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new Error(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  if (operations.length > 1) {\n    throw new Error(\n      `Ambiguous GraphQL document: contains ${operations.length} operations`,\n    );\n  }\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationDefinitionOrDie(\n  document: DocumentNode,\n): OperationDefinitionNode {\n  const def = getOperationDefinition(document);\n  if (!def) {\n    throw new Error(`GraphQL document is missing an operation`);\n  }\n  return def;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  if (!queryDef || queryDef.operation !== 'query') {\n    throw new Error('Must contain a query definition.');\n  }\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  if (doc.kind !== 'Document') {\n    throw new Error(`Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`);\n  }\n\n  if (doc.definitions.length > 1) {\n    throw new Error('Fragment must have exactly one definition.');\n  }\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  if (fragmentDef.kind !== 'FragmentDefinition') {\n    throw new Error('Must be a fragment definition.');\n  }\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new Error(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n\n  return symTable;\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): { [key: string]: JsonValue } {\n  if (\n    definition &&\n    definition.variableDefinitions &&\n    definition.variableDefinitions.length\n  ) {\n    const defaultValues = definition.variableDefinitions\n      .filter(({ defaultValue }) => defaultValue)\n      .map(\n        ({ variable, defaultValue }): { [key: string]: JsonValue } => {\n          const defaultValueObj: { [key: string]: JsonValue } = {};\n          valueToObjectRepresentation(\n            defaultValueObj,\n            variable.name,\n            defaultValue as ValueNode,\n          );\n\n          return defaultValueObj;\n        },\n      );\n\n    return assign({}, ...defaultValues);\n  }\n\n  return {};\n}\n\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(\n  operation: OperationDefinitionNode,\n): Set<string> {\n  const names = new Set<string>();\n  if (operation.variableDefinitions) {\n    for (const definition of operation.variableDefinitions) {\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define('fclone', [], factory);\n    } else if (typeof module === 'object' && module.exports) {\n\t\t\t  //node\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.fclone = factory();\n    }\n}(this, function () {\n  'use strict';\n\n// see if it looks and smells like an iterable object, and do accept length === 0\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) return true;\n\n  var len = item && item.length;\n  return typeof len === 'number' && (len === 0 || len - 1 in item) && typeof item.indexOf === 'function';\n}\n\nfunction fclone(obj, refs) {\n  if (!obj || \"object\" !== (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) return obj;\n\n  if (obj instanceof Date) {\n    return new Date(obj);\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(obj)) {\n    return new Buffer(obj);\n  }\n\n  // typed array Int32Array etc.\n  if (typeof obj.subarray === 'function' && /[A-Z][A-Za-z\\d]+Array/.test(Object.prototype.toString.call(obj))) {\n    return obj.subarray(0);\n  }\n\n  if (!refs) {\n    refs = [];\n  }\n\n  if (isArrayLike(obj)) {\n    refs[refs.length] = obj;\n    var _l = obj.length;\n    var i = -1;\n    var _copy = [];\n\n    while (_l > ++i) {\n      _copy[i] = ~refs.indexOf(obj[i]) ? '[Circular]' : fclone(obj[i], refs);\n    }\n\n    refs.length && refs.length--;\n    return _copy;\n  }\n\n  refs[refs.length] = obj;\n  var copy = {};\n\n  if (obj instanceof Error) {\n    copy.name = obj.name;\n    copy.message = obj.message;\n    copy.stack = obj.stack;\n  }\n\n  var keys = Object.keys(obj);\n  var l = keys.length;\n\n  while (l--) {\n    var k = keys[l];\n    copy[k] = ~refs.indexOf(obj[k]) ? '[Circular]' : fclone(obj[k], refs);\n  }\n\n  refs.length && refs.length--;\n  return copy;\n}\n\nfclone.default = fclone;\n  return fclone\n}));","import fclone from 'fclone';\r\n\r\n/**\r\n * Deeply clones a value to create a new instance.\r\n */\r\nexport function cloneDeep<T>(value: T): T {\r\n  return fclone(value);\r\n}\r\n","import {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  DefinitionNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nimport { cloneDeep } from './util/cloneDeep';\n\nimport {\n  checkDocument,\n  getOperationDefinitionOrDie,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n} from './getFromAST';\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename',\n  },\n};\n\nfunction isNotEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): Boolean {\n  // keep selections that are still valid\n  return (\n    op.selectionSet.selections.filter(\n      selectionSet =>\n        // anything that doesn't match the compound filter is okay\n        !// not an empty array\n        (\n          selectionSet &&\n          // look into fragments to verify they should stay\n          selectionSet.kind === 'FragmentSpread' &&\n          // see if the fragment in the map is valid (recursively)\n          !isNotEmpty(fragments[selectionSet.name.value], fragments)\n        ),\n    ).length > 0\n  );\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode): Boolean {\n    return directives.some(\n      (dir: RemoveDirectiveConfig | GetDirectiveConfig) => {\n        if (dir.name && dir.name === directive.name.value) return true;\n        if (dir.test && dir.test(directive)) return true;\n        return false;\n      },\n    );\n  };\n}\n\nfunction addTypenameToSelectionSet(\n  selectionSet: SelectionSetNode,\n  isRoot = false,\n) {\n  if (selectionSet.selections) {\n    if (!isRoot) {\n      const alreadyHasThisField = selectionSet.selections.some(selection => {\n        return (\n          selection.kind === 'Field' &&\n          (selection as FieldNode).name.value === '__typename'\n        );\n      });\n\n      if (!alreadyHasThisField) {\n        selectionSet.selections.push(TYPENAME_FIELD);\n      }\n    }\n\n    selectionSet.selections.forEach(selection => {\n      // Must not add __typename if we're inside an introspection query\n      if (selection.kind === 'Field') {\n        if (\n          selection.name.value.lastIndexOf('__', 0) !== 0 &&\n          selection.selectionSet\n        ) {\n          addTypenameToSelectionSet(selection.selectionSet);\n        }\n      } else if (selection.kind === 'InlineFragment') {\n        if (selection.selectionSet) {\n          addTypenameToSelectionSet(selection.selectionSet);\n        }\n      }\n    });\n  }\n}\n\nexport type RemoveDirectiveConfig = {\n  name?: string;\n  test?: (directive: DirectiveNode) => boolean;\n  remove?: boolean;\n};\n\nfunction removeDirectivesFromSelectionSet(\n  directives: RemoveDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n): SelectionSetNode {\n  if (!selectionSet.selections) return selectionSet;\n  // if any of the directives are set to remove this selectionSet, remove it\n  const agressiveRemove = directives.some(\n    (dir: RemoveDirectiveConfig) => dir.remove,\n  );\n\n  selectionSet.selections = selectionSet.selections\n    .map(selection => {\n      if (\n        selection.kind !== 'Field' ||\n        !(selection as FieldNode) ||\n        !selection.directives\n      )\n        return selection;\n      const directiveMatcher = getDirectiveMatcher(directives);\n      let remove: boolean;\n      selection.directives = selection.directives.filter(directive => {\n        const shouldKeep = !directiveMatcher(directive);\n\n        if (!remove && !shouldKeep && agressiveRemove) remove = true;\n\n        return shouldKeep;\n      });\n\n      return remove ? null : selection;\n    })\n    .filter(x => !!x);\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n      selection.selectionSet\n    ) {\n      removeDirectivesFromSelectionSet(directives, selection.selectionSet);\n    }\n  });\n\n  return selectionSet;\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const docClone = cloneDeep(doc);\n\n  docClone.definitions.forEach((definition: DefinitionNode) => {\n    removeDirectivesFromSelectionSet(\n      directives,\n      (definition as OperationDefinitionNode).selectionSet,\n    );\n  });\n  const operation = getOperationDefinitionOrDie(docClone);\n  const fragments = createFragmentMap(getFragmentDefinitions(docClone));\n  return isNotEmpty(operation, fragments) ? docClone : null;\n}\n\nexport function addTypenameToDocument(doc: DocumentNode) {\n  checkDocument(doc);\n  const docClone = cloneDeep(doc);\n\n  docClone.definitions.forEach((definition: DefinitionNode) => {\n    const isRoot = definition.kind === 'OperationDefinition';\n    addTypenameToSelectionSet(\n      (definition as OperationDefinitionNode).selectionSet,\n      isRoot,\n    );\n  });\n  return docClone;\n}\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        console.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  checkDocument(doc);\n  return removeDirectivesFromDocument([connectionRemoveConfig], doc);\n}\n\nexport type GetDirectiveConfig = {\n  name?: string;\n  test?: (directive: DirectiveNode) => boolean;\n};\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n  nestedCheck = true,\n): boolean {\n  if (!(selectionSet && selectionSet.selections)) {\n    return false;\n  }\n  const matchedSelections = selectionSet.selections.filter(selection => {\n    return hasDirectivesInSelection(directives, selection, nestedCheck);\n  });\n  return matchedSelections.length > 0;\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (selection.kind !== 'Field' || !(selection as FieldNode)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n  const directiveMatcher = getDirectiveMatcher(directives);\n  const matchedDirectives = selection.directives.filter(directiveMatcher);\n  return (\n    matchedDirectives.length > 0 ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nfunction getDirectivesFromSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n) {\n  selectionSet.selections = selectionSet.selections\n    .filter(selection => {\n      return hasDirectivesInSelection(directives, selection, true);\n    })\n    .map(selection => {\n      if (hasDirectivesInSelection(directives, selection, false)) {\n        return selection;\n      }\n      if (\n        (selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n        selection.selectionSet\n      ) {\n        selection.selectionSet = getDirectivesFromSelectionSet(\n          directives,\n          selection.selectionSet,\n        );\n      }\n      return selection;\n    });\n  return selectionSet;\n}\n\nexport function getDirectivesFromDocument(\n  directives: GetDirectiveConfig[],\n  doc: DocumentNode,\n  includeAllFragments = false,\n): DocumentNode | null {\n  checkDocument(doc);\n  const docClone = cloneDeep(doc);\n  docClone.definitions = docClone.definitions.map(definition => {\n    if (\n      (definition.kind === 'OperationDefinition' ||\n        (definition.kind === 'FragmentDefinition' && !includeAllFragments)) &&\n      definition.selectionSet\n    ) {\n      definition.selectionSet = getDirectivesFromSelectionSet(\n        directives,\n        definition.selectionSet,\n      );\n    }\n    return definition;\n  });\n\n  const operation = getOperationDefinitionOrDie(docClone);\n  const fragments = createFragmentMap(getFragmentDefinitions(docClone));\n  return isNotEmpty(operation, fragments) ? docClone : null;\n}\n","export function getEnv(): string | undefined {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  // default environment\n  return 'development';\n}\n\nexport function isEnv(env: string): boolean {\n  return getEnv() === env;\n}\n\nexport function isProduction(): boolean {\n  return isEnv('production') === true;\n}\n\nexport function isDevelopment(): boolean {\n  return isEnv('development') === true;\n}\n\nexport function isTest(): boolean {\n  return isEnv('test') === true;\n}\n","import { ExecutionResult } from 'graphql';\n\nexport function tryFunctionOrLogError(f: Function) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nexport function graphQLResultHasError(result: ExecutionResult) {\n  return result.errors && result.errors.length;\n}\n","/**\n * Performs a deep equality check on two JavaScript values.\n */\nexport function isEqual(a: any, b: any): boolean {\n  // If the two values are strictly equal, we are good.\n  if (a === b) {\n    return true;\n  }\n  // Dates are equivalent if their time values are equal.\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  // If a and b are both objects, we will compare their properties. This will compare arrays as\n  // well.\n  if (\n    a != null &&\n    typeof a === 'object' &&\n    b != null &&\n    typeof b === 'object'\n  ) {\n    // Compare all of the keys in `a`. If one of the keys has a different value, or that key does\n    // not exist in `b` return false immediately.\n    for (const key in a) {\n      if (Object.prototype.hasOwnProperty.call(a, key)) {\n        if (!Object.prototype.hasOwnProperty.call(b, key)) {\n          return false;\n        }\n        if (!isEqual(a[key], b[key])) {\n          return false;\n        }\n      }\n    }\n    // Look through all the keys in `b`. If `b` has a key that `a` does not, return false.\n    for (const key in b) {\n      if (!Object.prototype.hasOwnProperty.call(a, key)) {\n        return false;\n      }\n    }\n    // If we made it this far the objects are equal!\n    return true;\n  }\n  // Otherwise the values are not equal.\n  return false;\n}\n","import { isProduction, isTest } from './environment';\n\nconst haveWarned = Object.create({});\n\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nexport function warnOnceInDevelopment(msg: string, type = 'warn') {\n  if (isProduction()) {\n    return;\n  }\n  if (!haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n    switch (type) {\n      case 'error':\n        console.error(msg);\n        break;\n      default:\n        console.warn(msg);\n    }\n  }\n}\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/core/networkStatus.ts"},"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[getSymbol('species')];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (sources.length === 0) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources.shift()));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: getSymbol('observable'),\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, getSymbol('observable'));\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, getSymbol('iterator'));\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: getSymbol('species'),\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: getSymbol('observable'),\n      hostReportError: hostReportError\n    },\n    configurabe: true\n  });\n}","module.exports = require('./lib/Observable.js').Observable;\n","/* tslint:disable */\n\nimport zenObservable from 'zen-observable';\n\nnamespace Observable {\n\n}\n\nimport { ZenObservable } from './types';\n\nexport { ZenObservable };\n\nexport type Observer<T> = ZenObservable.Observer<T>;\nexport type Subscriber<T> = ZenObservable.Subscriber<T>;\nexport type ObservableLike<T> = ZenObservable.ObservableLike<T>;\n\nexport const Observable: {\n  new <T>(subscriber: Subscriber<T>): Observable<T>;\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n} = <any>zenObservable;\n\nexport interface Observable<T> {\n  subscribe(\n    observerOrNext: ((value: T) => void) | ZenObservable.Observer<T>,\n    error?: (error: any) => void,\n    complete?: () => void,\n  ): ZenObservable.Subscription;\n\n  forEach(fn: (value: T) => void): Promise<void>;\n\n  map<R>(fn: (value: T) => R): Observable<R>;\n\n  filter(fn: (value: T) => boolean): Observable<T>;\n\n  reduce<R = T>(\n    fn: (previousValue: R | T, currentValue: T) => R | T,\n    initialValue?: R | T,\n  ): Observable<R | T>;\n\n  flatMap<R>(fn: (value: T) => ZenObservable.ObservableLike<R>): Observable<R>;\n\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n}\n","import { getOperationName } from 'apollo-utilities';\nimport Observable from 'zen-observable-ts';\nimport { print } from 'graphql/language/printer';\n\nimport { GraphQLRequest, Operation } from './types';\nimport { ApolloLink } from './link';\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new Error(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n\nexport class LinkError extends Error {\n  public link: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport function isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          console.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n\n// backwards compat\nexport const makePromise = toPromise;\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query)\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = next => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: () => getKey(operation),\n  });\n\n  return operation as Operation;\n}\n\nexport function getKey(operation: GraphQLRequest) {\n  // XXX we're assuming here that variables will be serialized in the same order.\n  // that might not always be true\n  return `${print(operation.query)}|${JSON.stringify(operation.variables)}|${\n    operation.operationName\n  }`;\n}\n","import Observable from 'zen-observable-ts';\n\nimport {\n  GraphQLRequest,\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n} from './types';\n\nimport {\n  validateOperation,\n  isTerminating,\n  LinkError,\n  transformOperation,\n  createOperation,\n} from './linkUtils';\n\nconst passthrough = (op, forward) => (forward ? forward(op) : Observable.of());\n\nconst toLink = (handler: RequestHandler | ApolloLink) =>\n  typeof handler === 'function' ? new ApolloLink(handler) : handler;\n\nexport const empty = (): ApolloLink =>\n  new ApolloLink((op, forward) => Observable.of());\n\nexport const from = (links: ApolloLink[]): ApolloLink => {\n  if (links.length === 0) return empty();\n\n  return links.map(toLink).reduce((x, y) => x.concat(y));\n};\n\nexport const split = (\n  test: (op: Operation) => boolean,\n  left: ApolloLink | RequestHandler,\n  right: ApolloLink | RequestHandler = new ApolloLink(passthrough),\n): ApolloLink => {\n  const leftLink = toLink(left);\n  const rightLink = toLink(right);\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(operation => {\n      return test(operation)\n        ? leftLink.request(operation) || Observable.of()\n        : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return test(operation)\n        ? leftLink.request(operation, forward) || Observable.of()\n        : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n};\n\n// join two Links together\nexport const concat = (\n  first: ApolloLink | RequestHandler,\n  second: ApolloLink | RequestHandler,\n) => {\n  const firstLink = toLink(first);\n  if (isTerminating(firstLink)) {\n    console.warn(\n      new LinkError(\n        `You are calling concat on a terminating link, which will have no effect`,\n        firstLink,\n      ),\n    );\n    return firstLink;\n  }\n  const nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(\n      operation =>\n        firstLink.request(\n          operation,\n          op => nextLink.request(op) || Observable.of(),\n        ) || Observable.of(),\n    );\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return (\n        firstLink.request(operation, op => {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of()\n      );\n    });\n  }\n};\n\nexport class ApolloLink {\n  public static empty = empty;\n  public static from = from;\n  public static split = split;\n  public static execute = execute;\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right: ApolloLink | RequestHandler = new ApolloLink(passthrough),\n  ): ApolloLink {\n    return this.concat(split(test, left, right));\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new Error('request is not implemented');\n  }\n}\n\nexport function execute(\n  link: ApolloLink,\n  operation: GraphQLRequest,\n): Observable<FetchResult> {\n  return (\n    link.request(\n      createOperation(\n        operation.context,\n        transformOperation(validateOperation(operation)),\n      ),\n    ) || Observable.of()\n  );\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/util/Observable.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/errors/ApolloError.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/core/types.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/core/ObservableQuery.ts"},"import {\n  ApolloLink,\n  Operation,\n  NextLink,\n  FetchResult,\n  Observable,\n} from 'apollo-link';\n\n/*\n * Expects context to contain the forceFetch field if no dedup\n */\nexport class DedupLink extends ApolloLink {\n  private inFlightRequestObservables: Map<\n    string,\n    Observable<FetchResult>\n  > = new Map();\n  private subscribers: Map<string, any> = new Map();\n\n  public request(\n    operation: Operation,\n    forward: NextLink,\n  ): Observable<FetchResult> {\n    // sometimes we might not want to deduplicate a request, for example when we want to force fetch it.\n    if (operation.getContext().forceFetch) {\n      return forward(operation);\n    }\n\n    const key = operation.toKey();\n\n    const cleanup = operationKey => {\n      this.inFlightRequestObservables.delete(operationKey);\n      const prev = this.subscribers.get(operationKey);\n      return prev;\n    };\n\n    if (!this.inFlightRequestObservables.get(key)) {\n      // this is a new request, i.e. we haven't deduplicated it yet\n      // call the next link\n      const singleObserver = forward(operation);\n      let subscription;\n\n      const sharedObserver = new Observable(observer => {\n        // this will still be called by each subscriber regardless of\n        // deduplication status\n        let prev = this.subscribers.get(key);\n        if (!prev) prev = { next: [], error: [], complete: [] };\n\n        this.subscribers.set(key, {\n          next: prev.next.concat([observer.next.bind(observer)]),\n          error: prev.error.concat([observer.error.bind(observer)]),\n          complete: prev.complete.concat([observer.complete.bind(observer)]),\n        });\n\n        if (!subscription) {\n          subscription = singleObserver.subscribe({\n            next: result => {\n              const previous = cleanup(key);\n              this.subscribers.delete(key);\n              if (previous) {\n                previous.next.forEach(next => next(result));\n                previous.complete.forEach(complete => complete());\n              }\n            },\n            error: error => {\n              const previous = cleanup(key);\n              this.subscribers.delete(key);\n              if (previous) previous.error.forEach(err => err(error));\n            },\n          });\n        }\n\n        return () => {\n          if (subscription) subscription.unsubscribe();\n          this.inFlightRequestObservables.delete(key);\n        };\n      });\n\n      this.inFlightRequestObservables.set(key, sharedObserver);\n    }\n\n    // return shared Observable\n    return this.inFlightRequestObservables.get(key);\n  }\n}\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/scheduler/scheduler.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/data/mutations.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/data/queries.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/core/QueryManager.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/data/store.ts"},"exports.version = \"2.4.2\"",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/ApolloClient.ts"},"import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nexport function queryFromPojo(obj: any): DocumentNode {\n  const op: OperationDefinitionNode = {\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [op],\n  };\n\n  return out;\n}\n\nexport function fragmentFromPojo(obj: any, typename?: string): DocumentNode {\n  const frag: FragmentDefinitionNode = {\n    kind: 'FragmentDefinition',\n    typeCondition: {\n      kind: 'NamedType',\n      name: {\n        kind: 'Name',\n        value: typename || '__FakeType',\n      },\n    },\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [frag],\n  };\n\n  return out;\n}\n\nfunction selectionSetFromObj(obj: any): SelectionSetNode {\n  if (\n    typeof obj === 'number' ||\n    typeof obj === 'boolean' ||\n    typeof obj === 'string' ||\n    typeof obj === 'undefined' ||\n    obj === null\n  ) {\n    // No selection set here\n    return null;\n  }\n\n  if (Array.isArray(obj)) {\n    // GraphQL queries don't include arrays\n    return selectionSetFromObj(obj[0]);\n  }\n\n  // Now we know it's an object\n  const selections: FieldNode[] = [];\n\n  Object.keys(obj).forEach(key => {\n    const field: FieldNode = {\n      kind: 'Field',\n      name: {\n        kind: 'Name',\n        value: key,\n      },\n    };\n\n    // Recurse\n    const nestedSelSet: SelectionSetNode = selectionSetFromObj(obj[key]);\n\n    if (nestedSelSet) {\n      field.selectionSet = nestedSelSet;\n    }\n\n    selections.push(field);\n  });\n\n  const selectionSet: SelectionSetNode = {\n    kind: 'SelectionSet',\n    selections,\n  };\n\n  return selectionSet;\n}\n\nexport const justTypenameQuery: DocumentNode = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: null,\n      variableDefinitions: null,\n      directives: [],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            alias: null,\n            name: {\n              kind: 'Name',\n              value: '__typename',\n            },\n            arguments: [],\n            directives: [],\n            selectionSet: null,\n          },\n        ],\n      },\n    },\n  ],\n};\n","import { DocumentNode } from 'graphql';\nimport { getFragmentQueryDocument } from 'apollo-utilities';\n\nimport { DataProxy, Cache } from './types';\nimport { justTypenameQuery, queryFromPojo, fragmentFromPojo } from './utils';\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  // required to implement\n  // core API\n  public abstract read<T, TVariables = any>(\n    query: Cache.ReadOptions<TVariables>,\n  ): T | null;\n  public abstract write<TResult = any, TVariables = any>(\n    write: Cache.WriteOptions<TResult, TVariables>,\n  ): void;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch(watch: Cache.WatchOptions): () => void;\n  public abstract evict<TVariables = any>(\n    query: Cache.EvictOptions<TVariables>,\n  ): Cache.EvictionResult;\n  public abstract reset(): Promise<void>;\n\n  // intializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized,\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // optimistic API\n  public abstract removeOptimistic(id: string): void;\n\n  // transactional API\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n  ): void;\n  public abstract recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    id: string,\n  ): void;\n\n  // optional API\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n  // experimental\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // DataProxy API\n  /**\n   *\n   * @param options\n   * @param optimistic\n   */\n  public readQuery<QueryType, TVariables = any>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): QueryType | null {\n    return this.read({\n      query: options.query,\n      variables: options.variables,\n      optimistic,\n    });\n  }\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): FragmentType | null {\n    return this.read({\n      query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n      variables: options.variables,\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>(\n    options: Cache.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: 'ROOT_QUERY',\n      result: options.data,\n      query: options.query,\n      variables: options.variables,\n    });\n  }\n\n  public writeFragment<TData = any, TVariables = any>(\n    options: Cache.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: options.id,\n      result: options.data,\n      variables: options.variables,\n      query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n    });\n  }\n\n  public writeData<TData = any>({\n    id,\n    data,\n  }: Cache.WriteDataOptions<TData>): void {\n    if (typeof id !== 'undefined') {\n      let typenameResult = null;\n      // Since we can't use fragments without having a typename in the store,\n      // we need to make sure we have one.\n      // To avoid overwriting an existing typename, we need to read it out first\n      // and generate a fake one if none exists.\n      try {\n        typenameResult = this.read({\n          rootId: id,\n          optimistic: false,\n          query: justTypenameQuery,\n        });\n      } catch (e) {\n        // Do nothing, since an error just means no typename exists\n      }\n\n      // tslint:disable-next-line\n      const __typename =\n        (typenameResult && typenameResult.__typename) || '__ClientData';\n\n      // Add a type here to satisfy the inmemory cache\n      const dataToWrite = Object.assign({ __typename }, data);\n\n      this.writeFragment({\n        id,\n        fragment: fragmentFromPojo(dataToWrite, __typename),\n        data: dataToWrite,\n      });\n    } else {\n      this.writeQuery({ query: queryFromPojo(data), data });\n    }\n  }\n}\n","import { isTest, warnOnceInDevelopment, IdValue } from 'apollo-utilities';\n\nimport {\n  ReadStoreContext,\n  FragmentMatcherInterface,\n  PossibleTypesMap,\n  IntrospectionResultData,\n} from './types';\n\nlet haveWarned = false;\n\n/**\n * This fragment matcher is very basic and unable to match union or interface type conditions\n */\nexport class HeuristicFragmentMatcher implements FragmentMatcherInterface {\n  constructor() {\n    // do nothing\n  }\n\n  public ensureReady() {\n    return Promise.resolve();\n  }\n\n  public canBypassInit() {\n    return true; // we don't need to initialize this fragment matcher.\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ): boolean {\n    const obj = context.store.get(idValue.id);\n\n    if (!obj && idValue.id === 'ROOT_QUERY') {\n      return true;\n    }\n\n    if (!obj) {\n      return false;\n    }\n\n    if (!obj.__typename) {\n      if (!haveWarned) {\n        console.warn(`You're using fragments in your queries, but either don't have the addTypename:\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\n   can accurately match fragments.`);\n        console.warn(\n          'Could not find __typename on Fragment ',\n          typeCondition,\n          obj,\n        );\n        console.warn(\n          `DEPRECATION WARNING: using fragments without __typename is unsupported behavior ` +\n            `and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.`,\n        );\n\n        /* istanbul ignore if */\n        if (!isTest()) {\n          // When running tests, we want to print the warning every time\n          haveWarned = true;\n        }\n      }\n\n      context.returnPartialData = true;\n      return true;\n    }\n\n    if (obj.__typename === typeCondition) {\n      return true;\n    }\n\n    // XXX here we reach an issue - we don't know if this fragment should match or not. It's either:\n    // 1. A fragment on a non-matching concrete type or interface or union\n    // 2. A fragment on a matching interface or union\n    // If it's 1, we don't want to return anything, if it's 2 we want to match. We can't tell the\n    // difference, so we warn the user, but still try to match it (backcompat).\n    warnOnceInDevelopment(\n      'You are using the simple (heuristic) fragment matcher, but your ' +\n        'queries contain union or interface types. Apollo Client will not be ' +\n        'able to accurately map fragments. To make this error go away, use ' +\n        'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n        'https://www.apollographql.com/docs/react/recipes/fragment-matching.html',\n      'error',\n    );\n\n    context.returnPartialData = true;\n    return true;\n  }\n}\n\nexport class IntrospectionFragmentMatcher implements FragmentMatcherInterface {\n  private isReady: boolean;\n  private possibleTypesMap: PossibleTypesMap;\n\n  constructor(options?: {\n    introspectionQueryResultData?: IntrospectionResultData;\n  }) {\n    if (options && options.introspectionQueryResultData) {\n      this.possibleTypesMap = this.parseIntrospectionResult(\n        options.introspectionQueryResultData,\n      );\n      this.isReady = true;\n    } else {\n      this.isReady = false;\n    }\n\n    this.match = this.match.bind(this);\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ) {\n    if (!this.isReady) {\n      // this should basically never happen in proper use.\n      throw new Error(\n        'FragmentMatcher.match() was called before FragmentMatcher.init()',\n      );\n    }\n\n    const obj = context.store.get(idValue.id);\n\n    if (!obj) {\n      return false;\n    }\n\n    if (!obj.__typename) {\n      throw new Error(\n        `Cannot match fragment because __typename property is missing: ${JSON.stringify(\n          obj,\n        )}`,\n      );\n    }\n\n    if (obj.__typename === typeCondition) {\n      return true;\n    }\n\n    const implementingTypes = this.possibleTypesMap[typeCondition];\n    if (implementingTypes && implementingTypes.indexOf(obj.__typename) > -1) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private parseIntrospectionResult(\n    introspectionResultData: IntrospectionResultData,\n  ): PossibleTypesMap {\n    const typeMap: PossibleTypesMap = {};\n    introspectionResultData.__schema.types.forEach(type => {\n      if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n        typeMap[type.name] = type.possibleTypes.map(\n          implementingType => implementingType.name,\n        );\n      }\n    });\n    return typeMap;\n  }\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\n\nexport class ObjectCache implements NormalizedCache {\n  constructor(private data: NormalizedCacheObject = Object.create(null)) {}\n  public toObject(): NormalizedCacheObject {\n    return this.data;\n  }\n  public get(dataId: string): StoreObject {\n    return this.data[dataId];\n  }\n  public set(dataId: string, value: StoreObject) {\n    this.data[dataId] = value;\n  }\n  public delete(dataId: string): void {\n    this.data[dataId] = undefined;\n  }\n  public clear(): void {\n    this.data = Object.create(null);\n  }\n  public replace(newData: NormalizedCacheObject): void {\n    this.data = newData || Object.create(null);\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new ObjectCache(seed);\n}\n","import {\n  SelectionSetNode,\n  FieldNode,\n  DocumentNode,\n  InlineFragmentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n} from 'graphql';\nimport { print } from 'graphql/language/printer';\nimport { FragmentMatcher } from 'graphql-anywhere';\n\nimport {\n  assign,\n  createFragmentMap,\n  FragmentMap,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getOperationDefinition,\n  IdValue,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isProduction,\n  resultKeyNameFromField,\n  shouldInclude,\n  storeKeyNameFromField,\n  getQueryDefinition,\n  StoreValue,\n  toIdValue,\n} from 'apollo-utilities';\n\nimport { defaultNormalizedCacheFactory, ObjectCache } from './objectCache';\n\nimport {\n  IdGetter,\n  NormalizedCache,\n  NormalizedCacheFactory,\n  ReadStoreContext,\n  StoreObject,\n} from './types';\n\nexport class WriteError extends Error {\n  public type = 'WriteError';\n}\n\nexport function enhanceErrorWithDocument(error: Error, document: DocumentNode) {\n  // XXX A bit hacky maybe ...\n  const enhancedError = new WriteError(\n    `Error writing result to store for query:\\n ${print(document)}`,\n  );\n  enhancedError.message += '\\n' + error.message;\n  enhancedError.stack = error.stack;\n  return enhancedError;\n}\n\n/**\n * Writes the result of a query to the store.\n *\n * @param result The result object returned for the query document.\n *\n * @param query The query document whose result we are writing to the store.\n *\n * @param store The {@link NormalizedCache} used by Apollo for the `data` portion of the store.\n *\n * @param variables A map from the name of a variable to its value. These variables can be\n * referenced by the query document.\n *\n * @param dataIdFromObject A function that returns an object identifier given a particular result\n * object. See the store documentation for details and an example of this function.\n *\n * @param fragmentMap A map from the name of a fragment to its fragment definition. These fragments\n * can be referenced within the query document.\n *\n * @param fragmentMatcherFunction A function to use for matching fragment conditions in GraphQL documents\n */\nexport function writeQueryToStore({\n  result,\n  query,\n  storeFactory = defaultNormalizedCacheFactory,\n  store = storeFactory(),\n  variables,\n  dataIdFromObject,\n  fragmentMap = {} as FragmentMap,\n  fragmentMatcherFunction,\n}: {\n  result: Object;\n  query: DocumentNode;\n  store?: NormalizedCache;\n  storeFactory?: NormalizedCacheFactory;\n  variables?: Object;\n  dataIdFromObject?: IdGetter;\n  fragmentMap?: FragmentMap;\n  fragmentMatcherFunction?: FragmentMatcher;\n}): NormalizedCache {\n  const queryDefinition: OperationDefinitionNode = getQueryDefinition(query);\n\n  variables = assign({}, getDefaultValues(queryDefinition), variables);\n\n  try {\n    return writeSelectionSetToStore({\n      dataId: 'ROOT_QUERY',\n      result,\n      selectionSet: queryDefinition.selectionSet,\n      context: {\n        store,\n        storeFactory,\n        processedData: {},\n        variables,\n        dataIdFromObject,\n        fragmentMap,\n        fragmentMatcherFunction,\n      },\n    });\n  } catch (e) {\n    throw enhanceErrorWithDocument(e, query);\n  }\n}\n\nexport type WriteContext = {\n  store: NormalizedCache;\n  storeFactory: NormalizedCacheFactory;\n  processedData?: { [x: string]: FieldNode[] };\n  variables?: any;\n  dataIdFromObject?: IdGetter;\n  fragmentMap?: FragmentMap;\n  fragmentMatcherFunction?: FragmentMatcher;\n};\n\nexport function writeResultToStore({\n  dataId,\n  result,\n  document,\n  storeFactory = defaultNormalizedCacheFactory,\n  store = storeFactory(),\n  variables,\n  dataIdFromObject,\n  fragmentMatcherFunction,\n}: {\n  dataId: string;\n  result: any;\n  document: DocumentNode;\n  store?: NormalizedCache;\n  storeFactory?: NormalizedCacheFactory;\n  variables?: Object;\n  dataIdFromObject?: IdGetter;\n  fragmentMatcherFunction?: FragmentMatcher;\n}): NormalizedCache {\n  // XXX TODO REFACTOR: this is a temporary workaround until query normalization is made to work with documents.\n  const operationDefinition = getOperationDefinition(document);\n  const selectionSet = operationDefinition.selectionSet;\n  const fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n\n  variables = assign({}, getDefaultValues(operationDefinition), variables);\n\n  try {\n    return writeSelectionSetToStore({\n      result,\n      dataId,\n      selectionSet,\n      context: {\n        store,\n        storeFactory,\n        processedData: {},\n        variables,\n        dataIdFromObject,\n        fragmentMap,\n        fragmentMatcherFunction,\n      },\n    });\n  } catch (e) {\n    throw enhanceErrorWithDocument(e, document);\n  }\n}\n\nexport function writeSelectionSetToStore({\n  result,\n  dataId,\n  selectionSet,\n  context,\n}: {\n  dataId: string;\n  result: any;\n  selectionSet: SelectionSetNode;\n  context: WriteContext;\n}): NormalizedCache {\n  const { variables, store, fragmentMap } = context;\n\n  selectionSet.selections.forEach(selection => {\n    const included = shouldInclude(selection, variables);\n\n    if (isField(selection)) {\n      const resultFieldKey: string = resultKeyNameFromField(selection);\n      const value: any = result[resultFieldKey];\n\n      if (included) {\n        if (typeof value !== 'undefined') {\n          writeFieldToStore({\n            dataId,\n            value,\n            field: selection,\n            context,\n          });\n        } else {\n          // if this is a defered field we don't need to throw / warn\n          const isDefered =\n            selection.directives &&\n            selection.directives.length &&\n            selection.directives.some(\n              directive => directive.name && directive.name.value === 'defer',\n            );\n\n          if (!isDefered && context.fragmentMatcherFunction) {\n            // XXX We'd like to throw an error, but for backwards compatibility's sake\n            // we just print a warning for the time being.\n            //throw new WriteError(`Missing field ${resultFieldKey} in ${JSON.stringify(result, null, 2).substring(0, 100)}`);\n            if (!isProduction()) {\n              console.warn(\n                `Missing field ${resultFieldKey} in ${JSON.stringify(\n                  result,\n                  null,\n                  2,\n                ).substring(0, 100)}`,\n              );\n            }\n          }\n        }\n      }\n    } else {\n      // This is not a field, so it must be a fragment, either inline or named\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // Named fragment\n        fragment = (fragmentMap || {})[selection.name.value];\n\n        if (!fragment) {\n          throw new Error(`No fragment named ${selection.name.value}.`);\n        }\n      }\n\n      let matches = true;\n      if (context.fragmentMatcherFunction && fragment.typeCondition) {\n        // TODO we need to rewrite the fragment matchers for this to work properly and efficiently\n        // Right now we have to pretend that we're passing in an idValue and that there's a store\n        // on the context.\n        const idValue = toIdValue({ id: 'self', typename: undefined });\n        const fakeContext: ReadStoreContext = {\n          // NOTE: fakeContext always uses ObjectCache\n          // since this is only to ensure the return value of 'matches'\n          store: new ObjectCache({ self: result }),\n          returnPartialData: false,\n          hasMissingField: false,\n          cacheRedirects: {},\n        };\n        matches = context.fragmentMatcherFunction(\n          idValue,\n          fragment.typeCondition.name.value,\n          fakeContext,\n        );\n        if (!isProduction() && fakeContext.returnPartialData) {\n          console.error('WARNING: heuristic fragment matching going on!');\n        }\n      }\n\n      if (included && matches) {\n        writeSelectionSetToStore({\n          result,\n          selectionSet: fragment.selectionSet,\n          dataId,\n          context,\n        });\n      }\n    }\n  });\n\n  return store;\n}\n\n// Checks if the id given is an id that was generated by Apollo\n// rather than by dataIdFromObject.\nfunction isGeneratedId(id: string): boolean {\n  return id[0] === '$';\n}\n\nfunction mergeWithGenerated(\n  generatedKey: string,\n  realKey: string,\n  cache: NormalizedCache,\n) {\n  const generated = cache.get(generatedKey);\n  const real = cache.get(realKey);\n\n  Object.keys(generated).forEach(key => {\n    const value = generated[key];\n    const realValue = real[key];\n    if (isIdValue(value) && isGeneratedId(value.id) && isIdValue(realValue)) {\n      mergeWithGenerated(value.id, realValue.id, cache);\n    }\n    cache.delete(generatedKey);\n    cache.set(realKey, { ...generated, ...real } as StoreObject);\n  });\n}\n\nfunction isDataProcessed(\n  dataId: string,\n  field: FieldNode | SelectionSetNode,\n  processedData?: { [x: string]: (FieldNode | SelectionSetNode)[] },\n): boolean {\n  if (!processedData) {\n    return false;\n  }\n\n  if (processedData[dataId]) {\n    if (processedData[dataId].indexOf(field) >= 0) {\n      return true;\n    } else {\n      processedData[dataId].push(field);\n    }\n  } else {\n    processedData[dataId] = [field];\n  }\n\n  return false;\n}\n\nfunction writeFieldToStore({\n  field,\n  value,\n  dataId,\n  context,\n}: {\n  field: FieldNode;\n  value: any;\n  dataId: string;\n  context: WriteContext;\n}) {\n  const { variables, dataIdFromObject, store } = context;\n\n  let storeValue: StoreValue;\n  let storeObject: StoreObject;\n\n  const storeFieldName: string = storeKeyNameFromField(field, variables);\n  // specifies if we need to merge existing keys in the store\n  let shouldMerge = false;\n  // If we merge, this will be the generatedKey\n  let generatedKey: string = '';\n\n  // If this is a scalar value...\n  if (!field.selectionSet || value === null) {\n    storeValue =\n      value != null && typeof value === 'object'\n        ? // If the scalar value is a JSON blob, we have to \"escape\" it so it can’t pretend to be\n          // an id.\n          { type: 'json', json: value }\n        : // Otherwise, just store the scalar directly in the store.\n          value;\n  } else if (Array.isArray(value)) {\n    const generatedId = `${dataId}.${storeFieldName}`;\n\n    storeValue = processArrayValue(\n      value,\n      generatedId,\n      field.selectionSet,\n      context,\n    );\n  } else {\n    // It's an object\n    let valueDataId = `${dataId}.${storeFieldName}`;\n    let generated = true;\n\n    // We only prepend the '$' if the valueDataId isn't already a generated\n    // id.\n    if (!isGeneratedId(valueDataId)) {\n      valueDataId = '$' + valueDataId;\n    }\n\n    if (dataIdFromObject) {\n      const semanticId = dataIdFromObject(value);\n\n      // We throw an error if the first character of the id is '$. This is\n      // because we use that character to designate an Apollo-generated id\n      // and we use the distinction between user-desiginated and application-provided\n      // ids when managing overwrites.\n      if (semanticId && isGeneratedId(semanticId)) {\n        throw new Error(\n          'IDs returned by dataIdFromObject cannot begin with the \"$\" character.',\n        );\n      }\n\n      if (semanticId || (typeof semanticId === 'number' && semanticId === 0)) {\n        valueDataId = semanticId;\n        generated = false;\n      }\n    }\n\n    if (!isDataProcessed(valueDataId, field, context.processedData)) {\n      writeSelectionSetToStore({\n        dataId: valueDataId,\n        result: value,\n        selectionSet: field.selectionSet,\n        context,\n      });\n    }\n\n    // We take the id and escape it (i.e. wrap it with an enclosing object).\n    // This allows us to distinguish IDs from normal scalars.\n    const typename = value.__typename;\n    storeValue = toIdValue({ id: valueDataId, typename }, generated);\n\n    // check if there was a generated id at the location where we're\n    // about to place this new id. If there was, we have to merge the\n    // data from that id with the data we're about to write in the store.\n    storeObject = store.get(dataId);\n    const escapedId =\n      storeObject && (storeObject[storeFieldName] as IdValue | undefined);\n    if (escapedId !== storeValue && isIdValue(escapedId)) {\n      const hadTypename = escapedId.typename !== undefined;\n      const hasTypename = typename !== undefined;\n      const typenameChanged =\n        hadTypename && hasTypename && escapedId.typename !== typename;\n\n      // If there is already a real id in the store and the current id we\n      // are dealing with is generated, we throw an error.\n      // One exception we allow is when the typename has changed, which occurs\n      // when schema defines a union, both with and without an ID in the same place.\n      // checks if we \"lost\" the read id\n      if (generated && !escapedId.generated && !typenameChanged) {\n        throw new Error(\n          `Store error: the application attempted to write an object with no provided id` +\n            ` but the store already contains an id of ${\n              escapedId.id\n            } for this object. The selectionSet` +\n            ` that was trying to be written is:\\n` +\n            print(field),\n        );\n      }\n      // checks if we \"lost\" the typename\n      if (hadTypename && !hasTypename) {\n        throw new Error(\n          `Store error: the application attempted to write an object with no provided typename` +\n            ` but the store already contains an object with typename of ${\n              escapedId.typename\n            } for the object of id ${escapedId.id}. The selectionSet` +\n            ` that was trying to be written is:\\n` +\n            print(field),\n        );\n      }\n\n      if (escapedId.generated) {\n        generatedKey = escapedId.id;\n        // We should only merge if it's an object of the same type,\n        // otherwise we should delete the generated object\n        if (typenameChanged) {\n          // Only delete the generated object when the old object was\n          // inlined, and the new object is not. This is indicated by\n          // the old id being generated, and the new id being real.\n          if (!generated) {\n            store.delete(generatedKey);\n          }\n        } else {\n          shouldMerge = true;\n        }\n      }\n    }\n  }\n\n  const newStoreObj = {\n    ...store.get(dataId),\n    [storeFieldName]: storeValue,\n  } as StoreObject;\n\n  if (shouldMerge) {\n    mergeWithGenerated(generatedKey, (storeValue as IdValue).id, store);\n  }\n\n  storeObject = store.get(dataId);\n  if (!storeObject || storeValue !== storeObject[storeFieldName]) {\n    store.set(dataId, newStoreObj);\n  }\n}\n\nfunction processArrayValue(\n  value: any[],\n  generatedId: string,\n  selectionSet: SelectionSetNode,\n  context: WriteContext,\n): any[] {\n  return value.map((item: any, index: any) => {\n    if (item === null) {\n      return null;\n    }\n\n    let itemDataId = `${generatedId}.${index}`;\n\n    if (Array.isArray(item)) {\n      return processArrayValue(item, itemDataId, selectionSet, context);\n    }\n\n    let generated = true;\n\n    if (context.dataIdFromObject) {\n      const semanticId = context.dataIdFromObject(item);\n\n      if (semanticId) {\n        itemDataId = semanticId;\n        generated = false;\n      }\n    }\n\n    if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n      writeSelectionSetToStore({\n        dataId: itemDataId,\n        result: item,\n        selectionSet,\n        context,\n      });\n    }\n\n    return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n  });\n}\n","import {\n  DocumentNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n} from 'graphql';\n\nimport {\n  getMainDefinition,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n  DirectiveInfo,\n  shouldInclude,\n  getDirectiveInfoFromField,\n  isField,\n  isInlineFragment,\n  resultKeyNameFromField,\n  argumentsObjectFromField,\n} from 'apollo-utilities';\n\nexport type Resolver = (\n  fieldName: string,\n  rootValue: any,\n  args: any,\n  context: any,\n  info: ExecInfo,\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type ResultMapper = (\n  values: { [fieldName: string]: any },\n  rootValue: any,\n) => any;\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  contextValue: any;\n  variableValues: VariableMap;\n  resultMapper: ResultMapper;\n  resolver: Resolver;\n  fragmentMatcher: FragmentMatcher;\n};\n\nexport type ExecInfo = {\n  isLeaf: boolean;\n  resultKey: string;\n  directives: DirectiveInfo;\n};\n\nexport type ExecOptions = {\n  resultMapper?: ResultMapper;\n  fragmentMatcher?: FragmentMatcher;\n};\n\n/* Based on graphql function from graphql-js:\n *\n * graphql(\n *   schema: GraphQLSchema,\n *   requestString: string,\n *   rootValue?: ?any,\n *   contextValue?: ?any,\n *   variableValues?: ?{[key: string]: any},\n *   operationName?: ?string\n * ): Promise<GraphQLResult>\n *\n * The default export as of graphql-anywhere is sync as of 4.0,\n * but below is an exported alternative that is async.\n * In the 5.0 version, this will be the only export again\n * and it will be async\n */\nexport function graphql(\n  resolver: Resolver,\n  document: DocumentNode,\n  rootValue?: any,\n  contextValue?: any,\n  variableValues?: VariableMap,\n  execOptions: ExecOptions = {},\n) {\n  const mainDefinition = getMainDefinition(document);\n\n  const fragments = getFragmentDefinitions(document);\n  const fragmentMap = createFragmentMap(fragments);\n\n  const resultMapper = execOptions.resultMapper;\n\n  // Default matcher always matches all fragments\n  const fragmentMatcher = execOptions.fragmentMatcher || (() => true);\n\n  const execContext: ExecContext = {\n    fragmentMap,\n    contextValue,\n    variableValues,\n    resultMapper,\n    resolver,\n    fragmentMatcher,\n  };\n\n  return executeSelectionSet(\n    mainDefinition.selectionSet,\n    rootValue,\n    execContext,\n  );\n}\n\nfunction executeSelectionSet(\n  selectionSet: SelectionSetNode,\n  rootValue: any,\n  execContext: ExecContext,\n) {\n  const { fragmentMap, contextValue, variableValues: variables } = execContext;\n\n  const result = {};\n\n  selectionSet.selections.forEach(selection => {\n    if (!shouldInclude(selection, variables)) {\n      // Skip this entirely\n      return;\n    }\n\n    if (isField(selection)) {\n      const fieldResult = executeField(selection, rootValue, execContext);\n\n      const resultFieldKey = resultKeyNameFromField(selection);\n\n      if (fieldResult !== undefined) {\n        if (result[resultFieldKey] === undefined) {\n          result[resultFieldKey] = fieldResult;\n        } else {\n          merge(result[resultFieldKey], fieldResult);\n        }\n      }\n    } else {\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment\n        fragment = fragmentMap[selection.name.value];\n\n        if (!fragment) {\n          throw new Error(`No fragment named ${selection.name.value}`);\n        }\n      }\n\n      const typeCondition = fragment.typeCondition.name.value;\n\n      if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {\n        const fragmentResult = executeSelectionSet(\n          fragment.selectionSet,\n          rootValue,\n          execContext,\n        );\n\n        merge(result, fragmentResult);\n      }\n    }\n  });\n\n  if (execContext.resultMapper) {\n    return execContext.resultMapper(result, rootValue);\n  }\n\n  return result;\n}\n\nfunction executeField(\n  field: FieldNode,\n  rootValue: any,\n  execContext: ExecContext,\n): any {\n  const { variableValues: variables, contextValue, resolver } = execContext;\n\n  const fieldName = field.name.value;\n  const args = argumentsObjectFromField(field, variables);\n\n  const info: ExecInfo = {\n    isLeaf: !field.selectionSet,\n    resultKey: resultKeyNameFromField(field),\n    directives: getDirectiveInfoFromField(field, variables),\n  };\n\n  const result = resolver(fieldName, rootValue, args, contextValue, info);\n\n  // Handle all scalar types here\n  if (!field.selectionSet) {\n    return result;\n  }\n\n  // From here down, the field has a selection set, which means it's trying to\n  // query a GraphQLObjectType\n  if (result == null) {\n    // Basically any field in a GraphQL response can be null, or missing\n    return result;\n  }\n\n  if (Array.isArray(result)) {\n    return executeSubSelectedArray(field, result, execContext);\n  }\n\n  // Returned value is an object, and the query has a sub-selection. Recurse.\n  return executeSelectionSet(field.selectionSet, result, execContext);\n}\n\nfunction executeSubSelectedArray(field, result, execContext) {\n  return result.map(item => {\n    // null value in array\n    if (item === null) {\n      return null;\n    }\n\n    // This is a nested array, recurse\n    if (Array.isArray(item)) {\n      return executeSubSelectedArray(field, item, execContext);\n    }\n\n    // This is an object, run the selection set on it\n    return executeSelectionSet(field.selectionSet, item, execContext);\n  });\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport function merge(dest, src) {\n  if (src !== null && typeof src === 'object') {\n    Object.keys(src).forEach(key => {\n      const srcVal = src[key];\n      if (!hasOwn.call(dest, key)) {\n        dest[key] = srcVal;\n      } else {\n        merge(dest[key], srcVal);\n      }\n    });\n  }\n}\n","import graphqlAnywhere, { Resolver, ExecInfo } from 'graphql-anywhere';\n\nimport {\n  IdValue,\n  assign,\n  isEqual,\n  getDefaultValues,\n  getQueryDefinition,\n  isJsonValue,\n  isIdValue,\n  toIdValue,\n  getStoreKeyName,\n  StoreValue,\n} from 'apollo-utilities';\n\nimport { Cache } from 'apollo-cache';\n\nimport {\n  ReadQueryOptions,\n  IdValueWithPreviousResult,\n  ReadStoreContext,\n  DiffQueryAgainstStoreOptions,\n  StoreObject,\n} from './types';\n\n/**\n * The key which the cache id for a given value is stored in the result object. This key is private\n * and should not be used by Apollo client users.\n *\n * Uses a symbol if available in the environment.\n *\n * @private\n */\nexport const ID_KEY = typeof Symbol !== 'undefined' ? Symbol('id') : '@@id';\n\n/**\n * Resolves the result of a query solely from the store (i.e. never hits the server).\n *\n * @param {Store} store The {@link NormalizedCache} used by Apollo for the `data` portion of the\n * store.\n *\n * @param {DocumentNode} query The query document to resolve from the data available in the store.\n *\n * @param {Object} [variables] A map from the name of a variable to its value. These variables can\n * be referenced by the query document.\n *\n * @param {any} previousResult The previous result returned by this function for the same query.\n * If nothing in the store changed since that previous result then values from the previous result\n * will be returned to preserve referential equality.\n */\nexport function readQueryFromStore<QueryType>(\n  options: ReadQueryOptions,\n): QueryType {\n  const optsPatch = { returnPartialData: false };\n\n  return diffQueryAgainstStore<QueryType>({\n    ...options,\n    ...optsPatch,\n  }).result;\n}\n\nconst readStoreResolver: Resolver = (\n  fieldName: string,\n  idValue: IdValueWithPreviousResult,\n  args: any,\n  context: ReadStoreContext,\n  { resultKey, directives }: ExecInfo,\n) => {\n  assertIdValue(idValue);\n\n  const objId = idValue.id;\n  const obj = context.store.get(objId);\n\n  let storeKeyName = fieldName;\n  if (args || directives) {\n    // We happen to know here that getStoreKeyName returns its first\n    // argument unmodified if there are no args or directives, so we can\n    // avoid calling the function at all in that case, as a small but\n    // important optimization to this frequently executed code.\n    storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n  }\n\n  let fieldValue: StoreValue | string | void = void 0;\n\n  if (obj) {\n    fieldValue = obj[storeKeyName];\n\n    if (\n      typeof fieldValue === 'undefined' &&\n      context.cacheRedirects &&\n      (obj.__typename || objId === 'ROOT_QUERY')\n    ) {\n      const typename = obj.__typename || 'Query';\n\n      // Look for the type in the custom resolver map\n      const type = context.cacheRedirects[typename];\n      if (type) {\n        // Look for the field in the custom resolver map\n        const resolver = type[fieldName];\n        if (resolver) {\n          fieldValue = resolver(obj, args, {\n            getCacheKey(storeObj: StoreObject) {\n              return toIdValue({\n                id: context.dataIdFromObject(storeObj),\n                typename: storeObj.__typename,\n              });\n            },\n          });\n        }\n      }\n    }\n  }\n\n  if (typeof fieldValue === 'undefined') {\n    if (!context.returnPartialData) {\n      throw new Error(\n        `Can't find field ${storeKeyName} on object (${objId}) ${JSON.stringify(\n          obj,\n          null,\n          2,\n        )}.`,\n      );\n    }\n\n    context.hasMissingField = true;\n\n    return fieldValue;\n  }\n\n  // if this is an object scalar, it must be a json blob and we have to unescape it\n  if (isJsonValue(fieldValue)) {\n    // If the JSON blob is the same now as in the previous result, return the previous result to\n    // maintain referential equality.\n    //\n    // `isEqual` will first perform a referential equality check (with `===`) in case the JSON\n    // value has not changed in the store, and then a deep equality check if that fails in case a\n    // new JSON object was returned by the API but that object may still be the same.\n    if (\n      idValue.previousResult &&\n      isEqual(idValue.previousResult[resultKey], fieldValue.json)\n    ) {\n      return idValue.previousResult[resultKey];\n    }\n    return fieldValue.json;\n  }\n\n  // If we had a previous result, try adding that previous result value for this field to our field\n  // value. This will create a new value without mutating the old one.\n  if (idValue.previousResult) {\n    fieldValue = addPreviousResultToIdValues(\n      fieldValue,\n      idValue.previousResult[resultKey],\n    );\n  }\n\n  return fieldValue;\n};\n\n/**\n * Given a store and a query, return as much of the result as possible and\n * identify if any data was missing from the store.\n * @param  {DocumentNode} query A parsed GraphQL query document\n * @param  {Store} store The Apollo Client store object\n * @param  {any} previousResult The previous result returned by this function for the same query\n * @return {result: Object, complete: [boolean]}\n */\nexport function diffQueryAgainstStore<T>({\n  store,\n  query,\n  variables,\n  previousResult,\n  returnPartialData = true,\n  rootId = 'ROOT_QUERY',\n  fragmentMatcherFunction,\n  config,\n}: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n  // Throw the right validation error by trying to find a query in the document\n  const queryDefinition = getQueryDefinition(query);\n\n  variables = assign({}, getDefaultValues(queryDefinition), variables);\n\n  const context: ReadStoreContext = {\n    // Global settings\n    store,\n    returnPartialData,\n    dataIdFromObject: (config && config.dataIdFromObject) || null,\n    cacheRedirects: (config && config.cacheRedirects) || {},\n    // Flag set during execution\n    hasMissingField: false,\n  };\n\n  const rootIdValue = {\n    type: 'id',\n    id: rootId,\n    previousResult,\n  };\n\n  const result = graphqlAnywhere(\n    readStoreResolver,\n    query,\n    rootIdValue,\n    context,\n    variables,\n    {\n      fragmentMatcher: fragmentMatcherFunction,\n      resultMapper,\n    },\n  );\n\n  return {\n    result: result as T,\n    complete: !context.hasMissingField,\n  };\n}\n\nexport function assertIdValue(idValue: IdValue) {\n  if (!isIdValue(idValue)) {\n    throw new Error(`Encountered a sub-selection on the query, but the store doesn't have \\\nan object reference. This should never happen during normal use unless you have custom code \\\nthat is directly manipulating the store; please file an issue.`);\n  }\n}\n\n/**\n * Adds a previous result value to id values in a nested array. For a single id value and a single\n * previous result then the previous value is added directly.\n *\n * For arrays we put all of the ids from the previous result array in a map and add them to id\n * values with the same id.\n *\n * This function does not mutate. Instead it returns new instances of modified values.\n *\n * @private\n */\nfunction addPreviousResultToIdValues(value: any, previousResult: any): any {\n  // If the value is an `IdValue`, add the previous result to it whether or not that\n  // `previousResult` is undefined.\n  //\n  // If the value is an array, recurse over each item trying to add the `previousResult` for that\n  // item.\n  if (isIdValue(value)) {\n    return {\n      ...value,\n      previousResult,\n    };\n  } else if (Array.isArray(value)) {\n    const idToPreviousResult: Map<string, any> = new Map();\n\n    // If the previous result was an array, we want to build up our map of ids to previous results\n    // using the private `ID_KEY` property that is added in `resultMapper`.\n    if (Array.isArray(previousResult)) {\n      previousResult.forEach(item => {\n        // item can be null\n        if (item && item[ID_KEY]) {\n          idToPreviousResult.set(item[ID_KEY], item);\n          // idToPreviousResult[item[ID_KEY]] = item;\n        }\n      });\n    }\n\n    // For every value we want to add the previous result.\n    return value.map((item, i) => {\n      // By default the previous result for this item will be in the same array position as this\n      // item.\n      let itemPreviousResult = previousResult && previousResult[i];\n\n      // If the item is an id value, we should check to see if there is a previous result for this\n      // specific id. If there is, that will be the value for `itemPreviousResult`.\n      if (isIdValue(item)) {\n        itemPreviousResult =\n          idToPreviousResult.get(item.id) || itemPreviousResult;\n      }\n\n      return addPreviousResultToIdValues(item, itemPreviousResult);\n    });\n  }\n  // Return the value, nothing changed.\n  return value;\n}\n\n/**\n * Maps a result from `graphql-anywhere` to a final result value.\n *\n * If the result and the previous result from the `idValue` pass a shallow equality test, we just\n * return the `previousResult` to maintain referential equality.\n *\n * We also add a private id property to the result that we can use later on.\n *\n * @private\n */\nfunction resultMapper(resultFields: any, idValue: IdValueWithPreviousResult) {\n  // If we had a previous result, we may be able to return that and preserve referential equality\n  if (idValue.previousResult) {\n    const currentResultKeys = Object.keys(resultFields);\n\n    const sameAsPreviousResult =\n      // Confirm that we have the same keys in both the current result and the previous result.\n      Object.keys(idValue.previousResult).every(\n        key => currentResultKeys.indexOf(key) > -1,\n      ) &&\n      // Perform a shallow comparison of the result fields with the previous result. If all of\n      // the shallow fields are referentially equal to the fields of the previous result we can\n      // just return the previous result.\n      //\n      // While we do a shallow comparison of objects, but we do a deep comparison of arrays.\n      currentResultKeys.every(key =>\n        areNestedArrayItemsStrictlyEqual(\n          resultFields[key],\n          idValue.previousResult[key],\n        ),\n      );\n\n    if (sameAsPreviousResult) {\n      return idValue.previousResult;\n    }\n  }\n\n  Object.defineProperty(resultFields, ID_KEY, {\n    enumerable: false,\n    configurable: true,\n    writable: false,\n    value: idValue.id,\n  });\n\n  return resultFields;\n}\n\ntype NestedArray<T> = T | Array<T | Array<T | Array<T>>>;\n\n/**\n * Compare all the items to see if they are all referentially equal in two arrays no matter how\n * deeply nested the arrays are.\n *\n * @private\n */\nfunction areNestedArrayItemsStrictlyEqual(\n  a: NestedArray<any>,\n  b: NestedArray<any>,\n): boolean {\n  // If `a` and `b` are referentially equal, return true.\n  if (a === b) {\n    return true;\n  }\n  // If either `a` or `b` are not an array or not of the same length return false. `a` and `b` are\n  // known to not be equal here, we checked above.\n  if (!Array.isArray(a) || !Array.isArray(b) || a.length !== b.length) {\n    return false;\n  }\n  // Otherwise let us compare all of the array items (which are potentially nested arrays!) to see\n  // if they are equal.\n  return a.every((item, i) => areNestedArrayItemsStrictlyEqual(item, b[i]));\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\n\nexport class RecordingCache implements NormalizedCache {\n  private recordedData: NormalizedCacheObject = {};\n\n  constructor(private readonly data: NormalizedCacheObject = {}) {}\n\n  public record(\n    transaction: (recordingCache: RecordingCache) => void,\n  ): NormalizedCacheObject {\n    transaction(this);\n    const recordedData = this.recordedData;\n    this.recordedData = {};\n    return recordedData;\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return { ...this.data, ...this.recordedData };\n  }\n\n  public get(dataId: string): StoreObject {\n    if (this.recordedData.hasOwnProperty(dataId)) {\n      // recording always takes precedence:\n      return this.recordedData[dataId];\n    }\n    return this.data[dataId];\n  }\n\n  public set(dataId: string, value: StoreObject) {\n    if (this.get(dataId) !== value) {\n      this.recordedData[dataId] = value;\n    }\n  }\n\n  public delete(dataId: string): void {\n    this.recordedData[dataId] = undefined;\n  }\n\n  public clear(): void {\n    Object.keys(this.data).forEach(dataId => this.delete(dataId));\n    this.recordedData = {};\n  }\n\n  public replace(newData: NormalizedCacheObject): void {\n    this.clear();\n    this.recordedData = { ...newData };\n  }\n}\n\nexport function record(\n  startingState: NormalizedCacheObject,\n  transaction: (recordingCache: RecordingCache) => void,\n): NormalizedCacheObject {\n  const recordingCache = new RecordingCache(startingState);\n  return recordingCache.record(transaction);\n}\n","import { DocumentNode } from 'graphql';\n\nimport { Cache, DataProxy, ApolloCache, Transaction } from 'apollo-cache';\n\nimport {\n  getFragmentQueryDocument,\n  addTypenameToDocument,\n} from 'apollo-utilities';\n\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport {\n  OptimisticStoreItem,\n  ApolloReducerConfig,\n  NormalizedCache,\n  NormalizedCacheObject,\n} from './types';\nimport { writeResultToStore } from './writeToStore';\nimport { readQueryFromStore, diffQueryAgainstStore } from './readFromStore';\nimport { defaultNormalizedCacheFactory } from './objectCache';\nimport { record } from './recordingCache';\nconst defaultConfig: ApolloReducerConfig = {\n  fragmentMatcher: new HeuristicFragmentMatcher(),\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  storeFactory: defaultNormalizedCacheFactory,\n};\n\nexport function defaultDataIdFromObject(result: any): string | null {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return `${result.__typename}:${result.id}`;\n    }\n    if (result._id !== undefined) {\n      return `${result.__typename}:${result._id}`;\n    }\n  }\n  return null;\n}\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  protected data: NormalizedCache;\n  protected config: ApolloReducerConfig;\n  protected optimistic: OptimisticStoreItem[] = [];\n  private watches: Cache.WatchOptions[] = [];\n  private addTypename: boolean;\n  private typenameDocumentCache = new WeakMap<DocumentNode, DocumentNode>();\n\n  // Set this while in a transaction to prevent broadcasts...\n  // don't forget to turn it back on!\n  private silenceBroadcast: boolean = false;\n\n  constructor(config: ApolloReducerConfig = {}) {\n    super();\n    this.config = { ...defaultConfig, ...config };\n\n    // backwards compat\n    if ((this.config as any).customResolvers) {\n      console.warn(\n        'customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).customResolvers;\n    }\n\n    if ((this.config as any).cacheResolvers) {\n      console.warn(\n        'cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).cacheResolvers;\n    }\n\n    this.addTypename = this.config.addTypename;\n    this.data = this.config.storeFactory();\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    if (optimistic && this.optimistic.length > 0) {\n      const patches = this.optimistic.map(opt => opt.data);\n      return Object.assign({}, this.data.toObject(), ...patches);\n    }\n\n    return this.data.toObject();\n  }\n\n  public read<T>(query: Cache.ReadOptions): T | null {\n    if (query.rootId && this.data.get(query.rootId) === undefined) {\n      return null;\n    }\n\n    return readQueryFromStore({\n      store: this.config.storeFactory(this.extract(query.optimistic)),\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      rootId: query.rootId,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n      previousResult: query.previousResult,\n      config: this.config,\n    });\n  }\n\n  public write(write: Cache.WriteOptions): void {\n    writeResultToStore({\n      dataId: write.dataId,\n      result: write.result,\n      variables: write.variables,\n      document: this.transformDocument(write.query),\n      store: this.data,\n      dataIdFromObject: this.config.dataIdFromObject,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n    });\n\n    this.broadcastWatches();\n  }\n\n  public diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T> {\n    return diffQueryAgainstStore({\n      store: this.config.storeFactory(this.extract(query.optimistic)),\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      returnPartialData: query.returnPartialData,\n      previousResult: query.previousResult,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n      config: this.config,\n    });\n  }\n\n  public watch(watch: Cache.WatchOptions): () => void {\n    this.watches.push(watch);\n\n    return () => {\n      this.watches = this.watches.filter(c => c !== watch);\n    };\n  }\n\n  public evict(query: Cache.EvictOptions): Cache.EvictionResult {\n    throw new Error(`eviction is not implemented on InMemory Cache`);\n  }\n\n  public reset(): Promise<void> {\n    this.data.clear();\n    this.broadcastWatches();\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(id: string) {\n    // Throw away optimistic changes of that particular mutation\n    const toPerform = this.optimistic.filter(item => item.id !== id);\n\n    this.optimistic = [];\n\n    // Re-run all of our optimistic data actions on top of one another.\n    toPerform.forEach(change => {\n      this.recordOptimisticTransaction(change.transaction, change.id);\n    });\n\n    this.broadcastWatches();\n  }\n\n  public performTransaction(transaction: Transaction<NormalizedCacheObject>) {\n    // TODO: does this need to be different, or is this okay for an in-memory cache?\n\n    let alreadySilenced = this.silenceBroadcast;\n    this.silenceBroadcast = true;\n\n    transaction(this);\n\n    if (!alreadySilenced) {\n      // Don't un-silence since this is a nested transaction\n      // (for example, a transaction inside an optimistic record)\n      this.silenceBroadcast = false;\n    }\n\n    this.broadcastWatches();\n  }\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    id: string,\n  ) {\n    this.silenceBroadcast = true;\n\n    const patch = record(this.extract(true), recordingCache => {\n      // swapping data instance on 'this' is currently necessary\n      // because of the current architecture\n      const dataCache = this.data;\n      this.data = recordingCache;\n      this.performTransaction(transaction);\n      this.data = dataCache;\n    });\n\n    this.optimistic.push({\n      id,\n      transaction,\n      data: patch,\n    });\n\n    this.silenceBroadcast = false;\n\n    this.broadcastWatches();\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        this.typenameDocumentCache.set(\n          document,\n          (result = addTypenameToDocument(document)),\n        );\n      }\n      return result;\n    }\n    return document;\n  }\n\n  public readQuery<QueryType, TVariables = any>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): QueryType {\n    return this.read({\n      query: options.query,\n      variables: options.variables,\n      optimistic,\n    });\n  }\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): FragmentType | null {\n    return this.read({\n      query: this.transformDocument(\n        getFragmentQueryDocument(options.fragment, options.fragmentName),\n      ),\n      variables: options.variables,\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: 'ROOT_QUERY',\n      result: options.data,\n      query: this.transformDocument(options.query),\n      variables: options.variables,\n    });\n  }\n\n  public writeFragment<TData = any, TVariables = any>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: options.id,\n      result: options.data,\n      query: this.transformDocument(\n        getFragmentQueryDocument(options.fragment, options.fragmentName),\n      ),\n      variables: options.variables,\n    });\n  }\n\n  protected broadcastWatches() {\n    // Skip this when silenced (like inside a transaction)\n    if (this.silenceBroadcast) return;\n\n    // right now, we invalidate all queries whenever anything changes\n    this.watches.forEach((c: Cache.WatchOptions) => {\n      const newData = this.diff({\n        query: c.query,\n        variables: c.variables,\n\n        // TODO: previousResult isn't in the types - this will only work\n        // with ObservableQuery which is in a different package\n        previousResult: (c as any).previousResult && c.previousResult(),\n        optimistic: c.optimistic,\n      });\n\n      c.callback(newData);\n    });\n  }\n}\n","import { Operation } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\n\n/*\n * Http Utilities: shared across links that make http requests\n */\n\n// XXX replace with actual typings when available\ndeclare var AbortController: any;\n\n//Used for any Error for data from the server\n//on a request with a Status >= 300\n//response contains no data or errors\nexport type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\n//Thrown when server's resonse is cannot be parsed\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport type ClientParseError = Error & {\n  parseError: Error;\n};\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: any; //overrides headers in options\n  credentials?: any;\n}\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\n// The body of a GraphQL-over-HTTP-POST request.\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: GlobalFetch['fetch'];\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: any;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: '*/*',\n  'content-type': 'application/json',\n};\n\nconst defaultOptions = {\n  method: 'POST',\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const throwServerError = (response, result, message) => {\n  const error = new Error(message) as ServerError;\n\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n\n  throw error;\n};\n\n//TODO: when conditional types come in ts 2.8, operations should be a generic type that extends Operation | Array<Operation>\nexport const parseAndCheckHttpResponse = operations => (response: Response) => {\n  return (\n    response\n      .text()\n      .then(bodyText => {\n        try {\n          return JSON.parse(bodyText);\n        } catch (err) {\n          const parseError = err as ServerParseError;\n          parseError.response = response;\n          parseError.statusCode = response.status;\n          parseError.bodyText = bodyText;\n          return Promise.reject(parseError);\n        }\n      })\n      //TODO: when conditional types come out then result should be T extends Array ? Array<FetchResult> : FetchResult\n      .then((result: any) => {\n        if (response.status >= 300) {\n          //Network error\n          throwServerError(\n            response,\n            result,\n            `Response not successful: Received status code ${response.status}`,\n          );\n        }\n        //TODO should really error per response in a Batch based on properties\n        //    - could be done in a validation link\n        if (\n          !Array.isArray(result) &&\n          !result.hasOwnProperty('data') &&\n          !result.hasOwnProperty('errors')\n        ) {\n          //Data error\n          throwServerError(\n            response,\n            result,\n            `Server response was missing for query '${\n              Array.isArray(operations)\n                ? operations.map(op => op.operationName)\n                : operations.operationName\n            }'.`,\n          );\n        }\n        return result;\n      })\n  );\n};\n\nexport const checkFetcher = (fetcher: GlobalFetch['fetch']) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    let library: string = 'unfetch';\n    if (typeof window === 'undefined') library = 'node-fetch';\n    throw new Error(`\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\nyour environment like https://www.npmjs.com/package/${library}.\n\nFor example:\nimport fetch from '${library}';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });`);\n  }\n};\n\nexport const createSignalIfSupported = () => {\n  if (typeof AbortController === 'undefined')\n    return { controller: false, signal: false };\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n  return { controller, signal };\n};\n\nexport const selectHttpOptionsAndBody = (\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) => {\n  let options: HttpConfig & Record<string, any> = {\n    ...fallbackConfig.options,\n    headers: fallbackConfig.headers,\n    credentials: fallbackConfig.credentials,\n  };\n  let http: HttpQueryOptions = fallbackConfig.http;\n\n  /*\n   * use the rest of the configs to populate the options\n   * configs later in the list will overwrite earlier fields\n   */\n  configs.forEach(config => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...config.headers,\n      },\n    };\n    if (config.credentials) options.credentials = config.credentials;\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = print(query);\n\n  return {\n    options,\n    body,\n  };\n};\n\nexport const serializeFetchParameter = (p, label) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new Error(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n\n//selects \"/graphql\" by default\nexport const selectURI = (\n  operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n","/* tslint:disable */\n\nimport { ApolloLink, Observable, RequestHandler, fromError } from 'apollo-link';\nimport {\n  serializeFetchParameter,\n  selectURI,\n  parseAndCheckHttpResponse,\n  checkFetcher,\n  selectHttpOptionsAndBody,\n  createSignalIfSupported,\n  fallbackHttpConfig,\n  Body,\n  HttpOptions,\n  UriFunction as _UriFunction,\n} from 'apollo-link-http-common';\nimport { DefinitionNode } from 'graphql';\n\nexport namespace HttpLink {\n  //TODO Would much rather be able to export directly\n  export interface UriFunction extends _UriFunction {}\n  export interface Options extends HttpOptions {\n    /**\n     * If set to true, use the HTTP GET method for query operations. Mutations\n     * will still use the method specified in fetchOptions.method (which defaults\n     * to POST).\n     */\n    useGETForQueries?: boolean;\n  }\n}\n\n// For backwards compatibility.\nexport import FetchOptions = HttpLink.Options;\nexport import UriFunction = HttpLink.UriFunction;\n\nexport const createHttpLink = (linkOptions: HttpLink.Options = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch is nothing passed in\n    fetch: fetcher,\n    includeExtensions,\n    useGETForQueries,\n    ...requestOptions\n  } = linkOptions;\n\n  // dev warnings to ensure fetch is present\n  checkFetcher(fetcher);\n\n  //fetcher is set here rather than the destructuring to ensure fetch is\n  //declared before referencing it. Reference in the destructuring would cause\n  //a ReferenceError\n  if (!fetcher) {\n    fetcher = fetch;\n  }\n\n  const linkConfig = {\n    http: { includeExtensions },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: context.headers,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    let controller;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      fetcher(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          // we have data and can send it to back up the link chain\n          observer.next(result);\n          observer.complete();\n          return result;\n        })\n        .catch(err => {\n          // fetch was cancelled so its already been cleaned up in the unsubscribe\n          if (err.name === 'AbortError') return;\n          // if it is a network error, BUT there is graphql result info\n          // fire the next observer before calling error\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n          // to pass to UI\n          // this should only happen if we *also* have data as part of the response key per\n          // the spec\n          if (err.result && err.result.errors && err.result.data) {\n            // if we dont' call next, the UI can only show networkError because AC didn't\n            // get andy graphqlErrors\n            // this is graphql execution result info (i.e errors and possibly data)\n            // this is because there is no formal spec how errors should translate to\n            // http status codes. So an auth error (401) could have both data\n            // from a public field, errors from a private field, and a status of 401\n            // {\n            //  user { // this will have errors\n            //    firstName\n            //  }\n            //  products { // this is public so will have data\n            //    cost\n            //  }\n            // }\n            //\n            // the result of above *could* look like this:\n            // {\n            //   data: { products: [{ cost: \"$10\" }] },\n            //   errors: [{\n            //      message: 'your session has timed out',\n            //      path: []\n            //   }]\n            // }\n            // status code of above would be a 401\n            // in the UI you want to show data where you can, errors as data where you can\n            // and use correct http status codes\n            observer.next(err.result);\n          }\n          observer.error(err);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nfunction rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(opts?: HttpLink.Options) {\n    super(createHttpLink(opts).request);\n  }\n}\n","import { Data, Field } from \"../support/interfaces\";\nimport Model from \"../orm/model\";\nimport { Model as ORMModel } from \"@vuex-orm/core\";\nimport Context from \"../common/context\";\nimport {clone, downcaseFirstLetter, isPlainObject} from \"../support/utils\";\nconst inflection = require(\"inflection\");\n\n/**\n * This class provides methods to transform incoming data from GraphQL in to a format Vuex-ORM understands and\n * vice versa.\n */\nexport default class Transformer {\n  /**\n   * Transforms outgoing data. Use for variables param.\n   *\n   * Omits relations and some other fields.\n   *\n   * @param model\n   * @param {Data} data\n   * @param {Array<String>} whitelist of fields\n   * @returns {Data}\n   */\n  public static transformOutgoingData(model: Model, data: Data, whitelist?: Array<String>): Data {\n    const context = Context.getInstance();\n    const relations: Map<string, Field> = model.getRelations();\n    const returnValue: Data = {};\n\n    Object.keys(data).forEach(key => {\n      const value = data[key];\n\n      // Always add fields on the whitelist. Ignore hasMany/One connections, empty fields and internal fields ($)\n      if (\n        (whitelist && whitelist.includes(key)) ||\n        ((!relations.has(key) || relations.get(key) instanceof context.components.BelongsTo) &&\n          !key.startsWith(\"$\") &&\n          value !== null)\n      ) {\n        let relatedModel =\n          relations.get(key) && relations.get(key)!.parent\n            ? context.getModel(inflection.singularize(relations.get(key)!.parent!.entity), true)\n            : null;\n\n        if (value instanceof Array) {\n          // Iterate over all fields and transform them if value is an array\n          const arrayModel = context.getModel(inflection.singularize(key));\n          returnValue[key] = value.map(v => this.transformOutgoingData(arrayModel || model, v));\n        } else if (typeof value === \"object\" && value.$id !== undefined) {\n          if (!relatedModel) {\n            relatedModel = context.getModel((value as ORMModel).$self().entity);\n          }\n\n          // Value is a record, transform that too\n          returnValue[key] = this.transformOutgoingData(relatedModel, value);\n        } else {\n          // In any other case just let the value be what ever it is\n          returnValue[key] = value;\n        }\n      }\n    });\n\n    return returnValue;\n  }\n\n  /**\n   * Transforms a set of incoming data to the format vuex-orm requires.\n   *\n   * @param {Data | Array<Data>} data\n   * @param model\n   * @param mutation required to transform something like `disableUserAddress` to the actual model name.\n   * @param {boolean} recursiveCall\n   * @returns {Data}\n   */\n  public static transformIncomingData(\n    data: Data | Array<Data>,\n    model: Model,\n    mutation: boolean = false,\n    recursiveCall: boolean = false\n  ): Data {\n    let result: Data = {};\n    const context = Context.getInstance();\n\n    if (!recursiveCall) {\n      context.logger.group(\"Transforming incoming data\");\n      context.logger.log(\"Raw data:\", data);\n    }\n\n    if (Array.isArray(data)) {\n      result = data.map((d: any) => this.transformIncomingData(d, model, mutation, true));\n    } else {\n      Object.keys(data).forEach(key => {\n        if (data[key] !== undefined && data[key] !== null) {\n          if (isPlainObject(data[key])) {\n            const localModel: Model = context.getModel(key, true) || model;\n\n            if (data[key].nodes && context.connectionQueryMode === \"nodes\") {\n              result[inflection.pluralize(key)] = this.transformIncomingData(\n                data[key].nodes,\n                localModel,\n                mutation,\n                true\n              );\n            } else if (data[key].edges && context.connectionQueryMode === \"edges\") {\n              result[inflection.pluralize(key)] = this.transformIncomingData(\n                data[key].edges,\n                localModel,\n                mutation,\n                true\n              );\n            } else if (data[\"node\"] && context.connectionQueryMode === \"edges\") {\n              result = this.transformIncomingData(data[\"node\"], localModel, mutation, true);\n            } else {\n              let newKey = key;\n\n              if (mutation && !recursiveCall) {\n                newKey = data[key].nodes ? localModel.pluralName : localModel.singularName;\n                newKey = downcaseFirstLetter(newKey);\n              }\n\n              result[newKey] = this.transformIncomingData(data[key], localModel, mutation, true);\n            }\n          } else if (Model.isFieldNumber(model.fields.get(key))) {\n            result[key] = parseFloat(data[key]);\n          } else if (key.endsWith(\"Type\") && model.isTypeFieldOfPolymorphicRelation(key)) {\n            result[key] = inflection.pluralize(downcaseFirstLetter(data[key]));\n          } else {\n            result[key] = data[key];\n          }\n        }\n      });\n    }\n\n    if (!recursiveCall) {\n      context.logger.log(\"Transformed data:\", result);\n      context.logger.groupEnd();\n    } else {\n      result[\"$isPersisted\"] = true;\n    }\n\n    // Make sure this is really a plain JS object. We had some issues in testing here.\n    return clone(result);\n  }\n}\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","import { ApolloClient, FetchPolicy } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloLink } from 'apollo-link';\nimport Context from '../common/context';\nimport { Arguments, Data } from '../support/interfaces';\nimport Transformer from './transformer';\nimport Model from '../orm/model';\nimport gql from 'graphql-tag';\n\n/**\n * This class takes care of the communication with the graphql endpoint by leveraging the awesome apollo-client lib.\n */\nexport default class Apollo {\n  /**\n   * The http link instance to use.\n   * @type {HttpLink}\n   */\n  private readonly httpLink: ApolloLink;\n\n  /**\n   * The ApolloClient instance\n   * @type {ApolloClient}\n   */\n  private readonly apolloClient: ApolloClient<any>;\n\n  /**\n   * @constructor\n   */\n  public constructor () {\n    const context = Context.getInstance();\n\n    // This allows the test suite to pass a custom link\n    if (context.options.link) {\n      this.httpLink = context.options.link;\n    } else {\n      this.httpLink = new HttpLink({\n        uri: context.options.url ? context.options.url : '/graphql',\n        credentials: context.options.credentials ? context.options.credentials : 'same-origin',\n        useGETForQueries: Boolean(context.options.useGETForQueries)\n      });\n    }\n\n    this.apolloClient = new ApolloClient({\n      link: this.httpLink,\n      cache: new InMemoryCache(),\n      connectToDevTools: context.debugMode\n    });\n  }\n\n  /**\n   * Sends a request to the GraphQL API via apollo\n   * @param model\n   * @param {any} query The query to send (result from gql())\n   * @param {Arguments} variables Optional. The variables to send with the query\n   * @param {boolean} mutation Optional. If this is a mutation (true) or a query (false, default)\n   * @param {boolean} bypassCache If true the query will be send to the server without using the cache. For queries only\n   * @returns {Promise<Data>} The new records\n   */\n  public async request (model: Model, query: any, variables?: Arguments, mutation: boolean = false,\n                        bypassCache: boolean = false): Promise<Data> {\n\n    const fetchPolicy: FetchPolicy = bypassCache ? 'network-only' : 'cache-first';\n    Context.getInstance().logger.logQuery(query, variables, fetchPolicy);\n\n    const context = { headers: Apollo.getHeaders() };\n\n    let response;\n    if (mutation) {\n      response = await this.apolloClient.mutate({ mutation: query, variables, context });\n    } else {\n      response = await this.apolloClient.query({ query, variables, fetchPolicy, context });\n    }\n\n    // Transform incoming data into something useful\n    return Transformer.transformIncomingData(response.data as Data, model, mutation);\n  }\n\n  public async simpleQuery (query: string, variables: Arguments, bypassCache: boolean = false, context?: Data): Promise<any> {\n    const fetchPolicy: FetchPolicy = bypassCache ? 'network-only' : 'cache-first';\n    return this.apolloClient.query({ query: gql(query), variables, fetchPolicy, context: { headers: Apollo.getHeaders() } });\n  }\n\n  public async simpleMutation (query: string, variables: Arguments, context?: Data): Promise<any> {\n    return this.apolloClient.mutate({ mutation: gql(query), variables, context: { headers: Apollo.getHeaders() } });\n  }\n\n  private static getHeaders () {\n    const context = Context.getInstance();\n\n    let headers: Object | Function = context.options.headers ? context.options.headers : {};\n\n    if (headers instanceof Function) {\n      headers = headers(context);\n    }\n\n    return headers;\n  }\n}\n","import { GraphQLField, GraphQLSchema, GraphQLType, GraphQLTypeDefinition } from '../support/interfaces';\nimport { upcaseFirstLetter } from '../support/utils';\n\nexport default class Schema {\n  private schema: GraphQLSchema;\n  private types: Map<string, GraphQLType>;\n  private mutations: Map<string, GraphQLField>;\n  private queries: Map<string, GraphQLField>;\n\n  public constructor (schema: GraphQLSchema) {\n    this.schema = schema;\n    this.types = new Map<string, GraphQLType>();\n    this.mutations = new Map<string, GraphQLField>();\n    this.queries = new Map<string, GraphQLField>();\n\n    this.schema.types.forEach((t: GraphQLType) => this.types.set(t.name, t));\n\n    this.getType('Query')!.fields!.forEach(f => this.queries.set(f.name, f));\n    this.getType('Mutation')!.fields!.forEach(f => this.mutations.set(f.name, f));\n  }\n\n  public determineQueryMode (): string {\n    let connection: GraphQLType | null = null;\n\n    this.queries.forEach((query) => {\n      const typeName = Schema.getTypeNameOfField(query);\n      if (typeName.endsWith('TypeConnection')) {\n        connection = this.getType(typeName);\n        return false; // break\n      }\n      return true;\n    });\n\n    if (!connection) {\n      throw new Error(\"Can't determine the connection mode due to the fact that here are no connection types in the schema. Please set the connectionQueryMode via Vuex-ORM-GraphQL options!\");\n    }\n\n    if (connection!.fields!.find(f => f.name === 'nodes')) {\n      return 'nodes';\n    } else if (connection!.fields!.find(f => f.name === 'edges')) {\n      return 'edges';\n    } else {\n      return 'plain';\n    }\n  }\n\n  public getType (name: string, allowNull: boolean = false): GraphQLType | null {\n    name = upcaseFirstLetter(name);\n    const type = this.types.get(name);\n\n    if (!allowNull && !type) throw new Error(`Couldn't find Type of name ${name} in the GraphQL Schema.`);\n\n    return type || null;\n  }\n\n  public getMutation (name: string, allowNull: boolean = false): GraphQLField | null {\n    const mutation = this.mutations.get(name);\n\n    if (!allowNull && !mutation) throw new Error(`Couldn't find Mutation of name ${name} in the GraphQL Schema.`);\n\n    return mutation || null;\n  }\n\n  public getQuery (name: string, allowNull: boolean = false): GraphQLField | null {\n    const query = this.queries.get(name);\n\n    if (!allowNull && !query) throw new Error(`Couldn't find Query of name ${name} in the GraphQL Schema.`);\n\n    return query || null;\n  }\n\n  static returnsConnection (field: GraphQLField): boolean {\n    return (Schema.getTypeNameOfField(field).endsWith('TypeConnection'));\n  }\n\n  static getRealType (type: GraphQLTypeDefinition): GraphQLTypeDefinition {\n    if (type.kind === 'NON_NULL') {\n      return this.getRealType(type.ofType);\n    } else {\n      return type;\n    }\n  }\n\n  static getTypeNameOfField (field: GraphQLField): string {\n    const type = this.getRealType(field.type);\n\n    if (type.kind === 'LIST') {\n      return `[${type.ofType.name}]`;\n    }\n\n    const name = type.name || type.ofType.name || type.ofType.ofType.name;\n\n    if (!name) throw new Error(`Can't find type name for field ${field.name}`);\n\n    return name;\n  }\n}\n","import Logger from \"./logger\";\nimport Model from \"../orm/model\";\nimport { Model as ORMModel } from \"@vuex-orm/core\";\nimport { Components } from \"@vuex-orm/core/lib/plugins/use\";\nimport {downcaseFirstLetter, isEqual, pick} from \"../support/utils\";\nimport Apollo from \"../graphql/apollo\";\nimport Database from \"@vuex-orm/core/lib/database/Database\";\nimport { Field, GraphQLType, Options } from \"../support/interfaces\";\nimport Schema from \"../graphql/schema\";\nimport { Mock, MockOptions } from \"../test-utils\";\nconst inflection = require(\"inflection\");\n\nconst introspectionQuery = `\nquery Introspection {\n  __schema {\n    types {\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          name\n          description\n          type {\n            name\n            kind\n\n            ofType {\n              kind\n\n              name\n              ofType {\n                kind\n                name\n\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n\n        type {\n          name\n          kind\n\n          ofType {\n            kind\n\n            name\n            ofType {\n              kind\n              name\n\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n\n      inputFields {\n        name\n        description\n        type {\n          name\n          kind\n\n          ofType {\n            kind\n\n            name\n            ofType {\n              kind\n              name\n\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\n/**\n * Internal context of the plugin. This class contains all information, the models, database, logger and so on.\n *\n * It's a singleton class, so just call Context.getInstance() anywhere you need the context.\n */\nexport default class Context {\n  /**\n   * Contains the instance for the singleton pattern.\n   * @type {Context}\n   */\n  public static instance: Context;\n\n  /**\n   * Components collection of Vuex-ORM\n   * @type {Components}\n   */\n  public readonly components: Components;\n\n  /**\n   * The options which have been passed to VuexOrm.install\n   * @type {Options}\n   */\n  public readonly options: Options;\n\n  /**\n   * The Vuex-ORM database\n   * @type {Database}\n   */\n  public readonly database: Database;\n\n  /**\n   * Collection of all Vuex-ORM models wrapped in a Model instance.\n   * @type {Map<any, any>}\n   */\n  public readonly models: Map<string, Model> = new Map();\n\n  /**\n   * When true, the logging is enabled.\n   * @type {boolean}\n   */\n  public readonly debugMode: boolean = false;\n\n  /**\n   * Our nice Vuex-ORM-GraphQL logger\n   * @type {Logger}\n   */\n  public readonly logger: Logger;\n\n  /**\n   * Instance of Apollo which cares about the communication with the graphql endpoint.\n   * @type {Apollo}\n   */\n  public apollo!: Apollo;\n\n  /**\n   * The graphql schema. Is null until the first request.\n   * @type {Schema}\n   */\n  public schema: Schema | undefined;\n\n  /**\n   * Tells if the schema is already loaded or the loading is currently processed.\n   * @type {boolean}\n   */\n  private schemaWillBeLoaded: Promise<Schema> | undefined;\n\n  /**\n   * Defines how to query connections. 'auto' | 'nodes' | 'edges' | 'plain'\n   */\n  public connectionQueryMode: string = \"auto\";\n\n  /**\n   * Container for the global mocks.\n   * @type {Object}\n   */\n  private globalMocks: { [key: string]: Array<Mock> } = {};\n\n  /**\n   * Private constructor, called by the setup method\n   *\n   * @constructor\n   * @param {Components} components The Vuex-ORM Components collection\n   * @param {Options} options The options passed to VuexORM.install\n   */\n  private constructor(components: Components, options: Options) {\n    this.components = components;\n    this.options = options;\n\n    this.database = options.database;\n    this.debugMode = Boolean(options.debug);\n    this.logger = new Logger(this.debugMode);\n\n    if (!options.database) {\n      throw new Error(\"database param is required to initialize vuex-orm-graphql!\");\n    }\n  }\n\n  /**\n   * Get the singleton instance of the context.\n   * @returns {Context}\n   */\n  public static getInstance(): Context {\n    return this.instance;\n  }\n\n  /**\n   * This is called only once and creates a new instance of the Context.\n   * @param {Components} components The Vuex-ORM Components collection\n   * @param {Options} options The options passed to VuexORM.install\n   * @returns {Context}\n   */\n  public static setup(components: Components, options: Options): Context {\n    this.instance = new Context(components, options);\n\n    this.instance.apollo = new Apollo();\n    this.instance.collectModels();\n\n    this.instance.logger.group(\"Context setup\");\n    this.instance.logger.log(\"components\", this.instance.components);\n    this.instance.logger.log(\"options\", this.instance.options);\n    this.instance.logger.log(\"database\", this.instance.database);\n    this.instance.logger.log(\"models\", this.instance.models);\n    this.instance.logger.groupEnd();\n\n    return this.instance;\n  }\n\n  public async loadSchema(): Promise<Schema> {\n    if (!this.schemaWillBeLoaded) {\n      this.schemaWillBeLoaded = new Promise(async (resolve, reject) => {\n        this.logger.log(\"Fetching GraphQL Schema initially ...\");\n\n        if (this.options.connectionQueryMode) {\n          this.connectionQueryMode = this.options.connectionQueryMode;\n        } else {\n          this.connectionQueryMode = \"auto\";\n        }\n\n        // We send a custom header along with the request. This is required for our test suite to mock the schema request.\n        const context = {\n          headers: { \"X-GraphQL-Introspection-Query\": \"true\" }\n        };\n\n        const result = await this.apollo.simpleQuery(introspectionQuery, {}, true, context);\n        this.schema = new Schema(result.data.__schema);\n\n        this.logger.log(\"GraphQL Schema successful fetched\", result);\n\n        this.logger.log(\"Starting to process the schema ...\");\n        this.processSchema();\n        this.logger.log(\"Schema procession done!\");\n\n        resolve(this.schema);\n      });\n    }\n\n    return this.schemaWillBeLoaded;\n  }\n\n  public processSchema() {\n    this.models.forEach((model: Model) => {\n      let type: GraphQLType;\n\n      try {\n        type = this.schema!.getType(model.singularName)!;\n      } catch (error) {\n        this.logger.warn(`Ignoring entity ${model.singularName} because it's not in the schema.`);\n        return;\n      }\n\n      model.fields.forEach((field: Field, fieldName: string) => {\n        if (!type.fields!.find(f => f.name === fieldName)) {\n          this.logger.warn(\n            `Ignoring field ${model.singularName}.${fieldName} because it's not in the schema.`\n          );\n\n          // TODO: Move skipFields to the model\n          model.baseModel.skipFields = model.baseModel.skipFields ? model.baseModel.skipFields : [];\n          if (!model.baseModel.skipFields.includes(fieldName)) {\n            model.baseModel.skipFields.push(fieldName);\n          }\n        }\n      });\n    });\n\n    if (this.connectionQueryMode === \"auto\") {\n      this.connectionQueryMode = this.schema!.determineQueryMode();\n      this.logger.log(\n        `Connection Query Mode is ${this.connectionQueryMode} by automatic detection`\n      );\n    } else {\n      this.logger.log(`Connection Query Mode is ${this.connectionQueryMode} by config`);\n    }\n  }\n\n  /**\n   * Returns a model from the model collection by it's name\n   *\n   * @param {Model|string} model A Model instance, a singular or plural name of the model\n   * @param {boolean} allowNull When true this method returns null instead of throwing an exception when no model was\n   *                            found. Default is false\n   * @returns {Model}\n   */\n  public getModel(model: Model | string, allowNull: boolean = false): Model {\n    if (typeof model === \"string\") {\n      const name: string = inflection.singularize(downcaseFirstLetter(model));\n      model = this.models.get(name) as Model;\n      if (!allowNull && !model) throw new Error(`No such model ${name}!`);\n    }\n\n    return model;\n  }\n\n  /**\n   * Will add a mock for simple mutations or queries. These are model unrelated and have to be\n   * handled  globally.\n   *\n   * @param {Mock} mock - Mock config.\n   */\n  public addGlobalMock(mock: Mock): boolean {\n    if (this.findGlobalMock(mock.action, mock.options)) return false;\n    if (!this.globalMocks[mock.action]) this.globalMocks[mock.action] = [];\n\n    this.globalMocks[mock.action].push(mock);\n    return true;\n  }\n\n  /**\n   * Finds a global mock for the given action and options.\n   *\n   * @param {string} action - Name of the action like 'simpleQuery' or 'simpleMutation'.\n   * @param {MockOptions} options - MockOptions like { name: 'example' }.\n   * @returns {Mock | null} null when no mock was found.\n   */\n  public findGlobalMock(action: string, options: MockOptions | undefined): Mock | null {\n    if (this.globalMocks[action]) {\n      return (\n        this.globalMocks[action].find(m => {\n          if (!m.options || !options) return true;\n\n          const relevantOptions = pick(options, Object.keys(m.options));\n          return isEqual(relevantOptions, m.options || {});\n        }) || null\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Hook to be called by simpleMutation and simpleQuery actions in order to get the global mock\n   * returnValue.\n   *\n   * @param {string} action - Name of the action like 'simpleQuery' or 'simpleMutation'.\n   * @param {MockOptions} options - MockOptions.\n   * @returns {any} null when no mock was found.\n   */\n  public globalMockHook(action: string, options: MockOptions): any {\n    let returnValue: null | { [key: string]: any } = null;\n    const mock = this.findGlobalMock(action, options);\n\n    if (mock) {\n      if (mock.returnValue instanceof Function) {\n        returnValue = mock.returnValue();\n      } else {\n        returnValue = mock.returnValue || null;\n      }\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Wraps all Vuex-ORM entities in a Model object and saves them into this.models\n   */\n  private collectModels() {\n    this.database.entities.forEach((entity: any) => {\n      const model: Model = new Model(entity.model as ORMModel);\n      this.models.set(model.singularName, model);\n      Model.augment(model);\n    });\n  }\n}\n","import Model from \"../orm/model\";\nimport { Arguments, Field, GraphQLField } from \"../support/interfaces\";\nimport {clone, isPlainObject, takeWhile, upcaseFirstLetter} from \"../support/utils\";\nimport gql from \"graphql-tag\";\nimport Context from \"../common/context\";\nimport Schema from \"./schema\";\n\n/**\n * Contains all logic to build GraphQL queries/mutations.\n */\nexport default class QueryBuilder {\n  /**\n   * Builds a field for the GraphQL query and a specific model\n   *\n   * @param {Model|string} model The model to use\n   * @param {boolean} multiple Determines whether plural/nodes syntax or singular syntax is used.\n   * @param {Arguments} args The args that will be passed to the query field ( user(role: $role) )\n   * @param {Array<Model>} path The relations in this list are ignored (while traversing relations).\n   *                                    Mainly for recursion\n   * @param {string} name Optional name of the field. If not provided, this will be the model name\n   * @param filter\n   * @param {boolean} allowIdFields Optional. Determines if id fields will be ignored for the argument generation.\n   *                                See buildArguments\n   * @returns {string}\n   *\n   * @todo Do we need the allowIdFields param?\n   */\n  public static buildField(\n    model: Model | string,\n    multiple: boolean = true,\n    args?: Arguments,\n    path: Array<string> = [],\n    name?: string,\n    filter: boolean = false,\n    allowIdFields: boolean = false\n  ): string {\n    const context = Context.getInstance();\n    model = context.getModel(model);\n\n    name = name ? name : model.pluralName;\n    const field = context.schema!.getMutation(name, true) || context.schema!.getQuery(name, true);\n\n    let params: string = this.buildArguments(model, args, false, filter, allowIdFields, field);\n    path = path.length === 0 ? [model.singularName] : path;\n\n    const fields = `\n      ${model.getQueryFields().join(\" \")}\n      ${this.buildRelationsQuery(model, path)}\n    `;\n\n    if (multiple) {\n      const header: string = `${name}${params}`;\n\n      if (context.connectionQueryMode === \"nodes\") {\n        return `\n          ${header} {\n            nodes {\n              ${fields}\n            }\n          }\n        `;\n      } else if (context.connectionQueryMode === \"edges\") {\n        return `\n          ${header} {\n            edges {\n              node {\n                ${fields}\n              }\n            }\n          }\n        `;\n      } else {\n        return `\n          ${header} {\n            ${fields}\n          }\n        `;\n      }\n    } else {\n      return `\n        ${name ? name : model.singularName}${params} {\n          ${fields}\n        }\n      `;\n    }\n  }\n\n  /**\n   * Generates a query.\n   * Currently only one root field for the query is possible.\n   * @param {string} type 'mutation' or 'query'\n   * @param {Model | string} model The model this query or mutation affects. This mainly determines the query fields.\n   * @param {string} name Optional name of the query/mutation. Will overwrite the name from the model.\n   * @param {Arguments} args Arguments for the query\n   * @param {boolean} multiple Determines if the root query field is a connection or not (will be passed to buildField)\n   * @param {boolean} filter When true the query arguments are passed via a filter object.\n   * @returns {any} Whatever gql() returns\n   */\n  public static buildQuery(\n    type: string,\n    model: Model | string,\n    name?: string,\n    args?: Arguments,\n    multiple?: boolean,\n    filter?: boolean\n  ) {\n    const context = Context.getInstance();\n\n    // model\n    model = context.getModel(model);\n    if (!model) throw new Error(\"No model provided to build the query!\");\n\n    // args\n    args = args ? clone(args) : {};\n    if (!args) throw new Error(\"args is undefined\");\n\n    Object.keys(args).forEach((key: string) => {\n      if (args && args[key] && isPlainObject(args[key])) {\n        args[key] = { __type: upcaseFirstLetter(key) };\n      }\n    });\n\n    // multiple\n    multiple = multiple === undefined ? !args[\"id\"] : multiple;\n\n    // name\n    if (!name) name = multiple ? model.pluralName : model.singularName;\n\n    // field\n    const field = context.schema!.getMutation(name, true) || context.schema!.getQuery(name, true);\n\n    // build query\n    const query: string =\n      `${type} ${upcaseFirstLetter(name)}${this.buildArguments(\n        model,\n        args,\n        true,\n        filter,\n        true,\n        field\n      )} {\\n` +\n      `  ${this.buildField(model, multiple, args, [], name, filter, true)}\\n` +\n      `}`;\n\n    return gql(query);\n  }\n\n  /**\n   * Generates the arguments string for a graphql query based on a given map.\n   *\n   * There are three types of arguments:\n   *\n   * 1) Signatures with primitive types (signature = true)\n   *      => 'mutation createUser($name: String!)'\n   *\n   * 2) Signatures with object types (signature = true, args = { user: { __type: 'User' }})\n   *      => 'mutation createUser($user: UserInput!)'\n   *\n   * 3) Fields with variables (signature = false)\n   *      => 'user(id: $id)'\n   *\n   * 4) Filter fields with variables (signature = false, filter = true)\n   *      => 'users(filter: { active: $active })'\n   *\n   * @param model\n   * @param {Arguments | undefined} args\n   * @param {boolean} signature When true, then this method generates a query signature instead of key/value pairs\n   * @param filter\n   * @param {boolean} allowIdFields If true, ID fields will be included in the arguments list\n   * @param {GraphQLField} field Optional. The GraphQL mutation or query field\n   * @returns {String}\n   */\n  public static buildArguments(\n    model: Model,\n    args?: Arguments,\n    signature: boolean = false,\n    filter: boolean = false,\n    allowIdFields: boolean = true,\n    field: GraphQLField | null = null\n  ): string {\n    if (args === undefined) return \"\";\n\n    let returnValue: string = \"\";\n    let first: boolean = true;\n\n    if (args) {\n      Object.keys(args).forEach((key: string) => {\n        let value: any = args[key];\n\n        const isForeignKey = model.skipField(key);\n        const skipFieldDueId = (key === \"id\" || isForeignKey) && !allowIdFields;\n\n        let schemaField: GraphQLField | undefined = this.findSchemaFieldForArgument(\n          key,\n          field,\n          model,\n          filter\n        );\n\n        const isConnectionField =\n          schemaField && Schema.getTypeNameOfField(schemaField).endsWith(\"TypeConnection\");\n\n        // Ignore null fields, ids and connections\n        if (value && !skipFieldDueId && !isConnectionField) {\n          let typeOrValue: any = \"\";\n\n          if (signature) {\n            if (isPlainObject(value) && value.__type) {\n              // Case 2 (User!)\n              typeOrValue = value.__type + \"Input!\";\n            } else if (Array.isArray(value) && field) {\n              const arg = QueryBuilder.findSchemaFieldForArgument(key, field, model, filter);\n              if (!arg) {\n                throw new Error(\n                  `The argument ${key} is of type array but it's not possible to determine the type, because it's not in the field ${\n                    field.name\n                    }`\n                );\n              }\n\n              typeOrValue = Schema.getTypeNameOfField(arg) + \"!\";\n            } else if (schemaField && Schema.getTypeNameOfField(schemaField)) {\n              // Case 1, 3 and 4\n              typeOrValue = Schema.getTypeNameOfField(schemaField) + \"!\";\n            } else if (key === \"id\" || isForeignKey) {\n              // Case 1 (ID!)\n              typeOrValue = \"ID!\";\n            } else {\n              // Case 1 (String!)\n              typeOrValue = this.determineAttributeType(model, key, value, field || undefined);\n              typeOrValue = typeOrValue + \"!\";\n            }\n          } else {\n            // Case 3 or 4\n            typeOrValue = `$${key}`;\n          }\n\n          returnValue = `${returnValue}${first ? \"\" : \", \"}${(signature ? \"$\" : \"\") +\n            key}: ${typeOrValue}`;\n\n          first = false;\n        }\n      });\n\n      if (!first) {\n        if (!signature && filter) returnValue = `filter: { ${returnValue} }`;\n        returnValue = `(${returnValue})`;\n      }\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Determines the GraphQL primitive type of a field in the variables hash by the field type or (when\n   * the field type is generic attribute) by the variable type.\n   * @param {Model} model\n   * @param {string} key\n   * @param {string} value\n   * @param {GraphQLField} query Pass when we have to detect the type of an argument\n   * @returns {string}\n   */\n  public static determineAttributeType(\n    model: Model,\n    key: string,\n    value: any,\n    query?: GraphQLField\n  ): string {\n    const context: Context = Context.getInstance();\n    const field: undefined | Field = model.fields.get(key);\n    let schemaField: undefined | GraphQLField;\n\n    if (query) {\n      schemaField = query.args.find(f => f.name === key);\n\n      if (!schemaField) {\n        const filterField = query.args.find(f => f.name === \"filter\");\n\n        if (filterField) {\n          schemaField = this.findSchemaFieldForArgument(key, null, model, true);\n        }\n      }\n    } else {\n      schemaField = context.schema!.getType(model.singularName)!.fields!.find(f => f.name === key);\n    }\n\n    if (schemaField && Schema.getTypeNameOfField(schemaField)) {\n      return Schema.getTypeNameOfField(schemaField);\n    } else {\n      if (field instanceof context.components.String) {\n        return \"String\";\n      } else if (field && field instanceof context.components.Number) {\n        return \"Int\";\n      } else if (field && field instanceof context.components.Boolean) {\n        return \"Boolean\";\n      } else {\n        if (typeof value === \"number\") return \"Int\";\n        if (typeof value === \"string\") return \"String\";\n        if (typeof value === \"boolean\") return \"Boolean\";\n\n        throw new Error(\n          `Can't find suitable graphql type for field '${model.singularName}.${key}'.`\n        );\n      }\n    }\n  }\n\n  private static findSchemaFieldForArgument(\n    name: String,\n    field: GraphQLField | null,\n    model: Model,\n    isFilter: boolean\n  ): GraphQLField | undefined {\n    const schema = Context.getInstance().schema!;\n    let schemaField: GraphQLField | undefined;\n\n    if (field) {\n      schemaField = field.args.find(f => f.name === name);\n      if (schemaField) return schemaField;\n    }\n\n    // We try to find the FilterType or at least the Type this query belongs to.\n    const type = schema.getType(model.singularName + (isFilter ? \"Filter\" : \"\"), true);\n\n    // Next we try to find the field from the type\n    schemaField = type\n      ? (isFilter ? type.inputFields! : type.fields!).find(f => f.name === name)\n      : undefined;\n\n    // Warn before we return null\n    if (!schemaField) {\n      Context.getInstance().logger.warn(\n        `Couldn't find the argument with name ${name} for the mutation/query ${\n          field ? field.name : \"(?)\"\n        }`\n      );\n    }\n\n    return schemaField;\n  }\n\n  /**\n   * Generates the fields for all related models.\n   *\n   * @param {Model} model\n   * @param {Array<Model>} path\n   * @returns {string}\n   */\n  static buildRelationsQuery(model: null | Model, path: Array<string> = []): string {\n    if (model === null) return \"\";\n\n    const context = Context.getInstance();\n    const relationQueries: Array<string> = [];\n\n    model.getRelations().forEach((field: Field, name: string) => {\n      let relatedModel: Model;\n\n      if (field.related) {\n        relatedModel = context.getModel(field.related.entity);\n      } else if (field.parent) {\n        relatedModel = context.getModel(field.parent.entity);\n      } else {\n        relatedModel = context.getModel(name);\n        context.logger.log(\n          \"WARNING: field has neither parent nor related property. Fallback to attribute name\",\n          field\n        );\n      }\n\n      // We will ignore the field, when it's already in the path. Means: When it's already queried. However there are\n      // cases where the model will have a relationship to itself. For example a nested category strucure where the\n      // category model has a parent: belongsTo(Category). So we also check if the model references itself. If this is\n      // the case, we allow the nesting up to 5 times.\n      const referencesItSelf = takeWhile(\n        path.slice(0).reverse(),\n        (p: string) => p === relatedModel.singularName\n      ).length;\n      const ignore = referencesItSelf\n        ? referencesItSelf > 5\n        : path.includes(relatedModel.singularName);\n\n      // console.log(`-----> Will ${ignore ? '' : 'not'} ignore ${model.singularName}.${name}, path: ${path.join('.')}`);\n\n      if (model.shouldEagerLoadRelation(name, field, relatedModel) && !ignore) {\n        const newPath = path.slice(0);\n        newPath.push(relatedModel.singularName);\n\n        relationQueries.push(\n          this.buildField(relatedModel, Model.isConnection(field), undefined, newPath, name, false)\n        );\n      }\n    });\n\n    return relationQueries.join(\"\\n\");\n  }\n}\n","import { Data, DispatchFunction } from '../support/interfaces';\nimport Context from '../common/context';\n\n/**\n * Provides some helper methods to interact with the Vuex-ORM store\n */\nexport class Store {\n  /**\n   * Inserts incoming data into the store. Existing data will be updated.\n   *\n   * @param {Data} data New data to insert/update\n   * @param {Function} dispatch Vuex Dispatch method for the model\n   * @return {Promise<Data>} Inserted data as hash\n   */\n  public static async insertData (data: Data, dispatch: DispatchFunction): Promise<Data> {\n    let insertedData: Data = {};\n\n    await Promise.all(Object.keys(data).map(async (key) => {\n      const value = data[key];\n      Context.getInstance().logger.log('Inserting records', value);\n      const newData = await dispatch('insertOrUpdate', { data: value });\n\n      Object.keys(newData).forEach((dataKey) => {\n        if (!insertedData[dataKey]) insertedData[dataKey] = [];\n        insertedData[dataKey] = insertedData[dataKey].concat(newData[dataKey]);\n      });\n    }));\n\n    return insertedData;\n  }\n}\n","import Model from \"../orm/model\";\nimport { upcaseFirstLetter } from \"../support/utils\";\n\n/**\n * Generic name generator for mutations and queries. In the future these methods may be influenced by the configuration.\n */\nexport default class NameGenerator {\n  public static getNameForPersist(model: Model) {\n    return this.getCRUDName(\"create\", model);\n  }\n\n  public static getNameForPush(model: Model) {\n    return this.getCRUDName(\"update\", model);\n  }\n\n  public static getNameForDestroy(model: Model) {\n    return this.getCRUDName(\"delete\", model);\n  }\n\n  public static getNameForFetch(model: Model, plural: boolean = false) {\n    return plural ? model.pluralName : model.singularName;\n  }\n\n  /**\n   * Internal helper to keep the code DRY. Just generates a name by leveraging the models singular name.\n   * @param {string} action Name of the action like 'create'\n   * @param {Model} model\n   * @returns {string} For example 'createBlogPost'\n   */\n  private static getCRUDName(action: string, model: Model) {\n    return `${action}${upcaseFirstLetter(model.singularName)}`;\n  }\n}\n","import QueryBuilder from \"../graphql/query-builder\";\nimport Context from \"../common/context\";\nimport { Store } from \"../orm/store\";\nimport { Arguments, Data, DispatchFunction } from \"../support/interfaces\";\nimport Model from \"../orm/model\";\nimport RootState from \"@vuex-orm/core/lib/modules/contracts/RootState\";\nimport Transformer from \"../graphql/transformer\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport Schema from \"../graphql/schema\";\n\nconst inflection = require(\"inflection\");\n\n/**\n * Base class for all Vuex actions. Contains some utility and convenience methods.\n */\nexport default class Action {\n  /**\n   * Sends a mutation.\n   *\n   * @param {string} name Name of the mutation like 'createUser'\n   * @param {Data | undefined} variables Variables to send with the mutation\n   * @param {Function} dispatch Vuex Dispatch method for the model\n   * @param {Model} model The model this mutation affects.\n   * @param {boolean} multiple Tells if we're requesting a single record or multiple.\n   * @returns {Promise<any>}\n   */\n  protected static async mutation(\n    name: string,\n    variables: Data | undefined,\n    dispatch: DispatchFunction,\n    model: Model\n  ): Promise<any> {\n    if (variables) {\n      const context: Context = Context.getInstance();\n      const schema: Schema = await context.loadSchema();\n\n      const multiple: boolean = Schema.returnsConnection(schema.getMutation(name)!);\n      const query = QueryBuilder.buildQuery(\"mutation\", model, name, variables, multiple);\n\n      // Send GraphQL Mutation\n      let newData = await Context.getInstance().apollo.request(model, query, variables, true);\n\n      // When this was not a destroy action, we get new data, which we should insert in the store\n      if (name !== NameGenerator.getNameForDestroy(model)) {\n        newData = newData[Object.keys(newData)[0]];\n\n        // IDs as String cause terrible issues, so we convert them to integers.\n        newData.id = parseInt(newData.id, 10);\n\n        const insertedData: Data = await Store.insertData(\n          { [model.pluralName]: newData },\n          dispatch\n        );\n\n        // Try to find the record to return\n        const records = insertedData[model.pluralName];\n        const newRecord = records[records.length - 1];\n        if (newRecord) {\n          return newRecord;\n        } else {\n          Context.getInstance().logger.log(\n            \"Couldn't find the record of type '\",\n            model.pluralName,\n            \"' within\",\n            insertedData,\n            \". Falling back to find()\"\n          );\n          return model.baseModel.query().last();\n        }\n      }\n\n      return true;\n    }\n  }\n\n  /**\n   * Convenience method to get the model from the state.\n   * @param {RootState} state Vuex state\n   * @returns {Model}\n   */\n  static getModelFromState(state: RootState): Model {\n    return Context.getInstance().getModel(state.$name);\n  }\n\n  /**\n   * Makes sure args is a hash.\n   *\n   * @param {Arguments|undefined} args\n   * @param {any} id When not undefined, it's added to the args\n   * @returns {Arguments}\n   */\n  static prepareArgs(args?: Arguments, id?: any): Arguments {\n    args = args || {};\n    if (id) args[\"id\"] = id;\n\n    return args;\n  }\n\n  /**\n   * Adds the record itself to the args and sends it through transformOutgoingData. Key is named by the singular name\n   * of the model.\n   *\n   * @param {Arguments} args\n   * @param {Model} model\n   * @param {Data} data\n   * @returns {Arguments}\n   */\n  static addRecordToArgs(args: Arguments, model: Model, data: Data): Arguments {\n    args[model.singularName] = Transformer.transformOutgoingData(model, data);\n    return args;\n  }\n\n  /**\n   * Transforms each field of the args which contains a model.\n   * @param {Arguments} args\n   * @returns {Arguments}\n   */\n  protected static transformArgs(args: Arguments): Arguments {\n    const context = Context.getInstance();\n\n    Object.keys(args).forEach((key: string) => {\n      const value: any = args[key];\n\n      if (value instanceof context.components.Model) {\n        const model = context.getModel(inflection.singularize(value.$self().entity));\n        const transformedValue = Transformer.transformOutgoingData(model, value);\n        context.logger.log(\n          \"A\",\n          key,\n          \"model was found within the variables and will be transformed from\",\n          value,\n          \"to\",\n          transformedValue\n        );\n        args[key] = transformedValue;\n      }\n    });\n\n    return args;\n  }\n}\n","import { ActionParams } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport { Store } from \"../orm/store\";\n\n/**\n * Destroy action for sending a delete mutation. Will be used for record.$destroy().\n */\nexport default class Destroy extends Action {\n  /**\n   * @param {State} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} id ID of the record to delete\n   * @returns {Promise<any>} true\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { id, args }: ActionParams\n  ): Promise<boolean> {\n    if (id) {\n      const model = this.getModelFromState(state!);\n      const mutationName = NameGenerator.getNameForDestroy(model);\n\n      const mockReturnValue = model.$mockHook(\"destroy\", { id });\n\n      if (mockReturnValue) {\n        await Store.insertData(mockReturnValue, dispatch!);\n        return true;\n      }\n\n      args = this.prepareArgs(args, id);\n\n      await Action.mutation(mutationName, args, dispatch!, model);\n      return true;\n    } else {\n      throw new Error(\"The destroy action requires the 'id' to be set\");\n    }\n  }\n}\n","import QueryBuilder from \"../graphql/query-builder\";\nimport Context from \"../common/context\";\nimport { Store } from \"../orm/store\";\nimport Transformer from \"../graphql/transformer\";\nimport { ActionParams, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\n\n/**\n * Fetch action for sending a query. Will be used for Model.fetch().\n */\nexport default class Fetch extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {ActionParams} params Optional params to send with the query\n   * @returns {Promise<Data>} The fetched records as hash\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    params?: ActionParams\n  ): Promise<Data> {\n    const context = Context.getInstance();\n    const model = this.getModelFromState(state!);\n\n    const mockReturnValue = model.$mockHook(\"fetch\", {\n      filter: params ? params.filter || {} : {}\n    });\n\n    if (mockReturnValue) {\n      return Store.insertData(mockReturnValue, dispatch!);\n    }\n\n    await context.loadSchema();\n\n    // Filter\n    const filter =\n      params && params.filter\n        ? Transformer.transformOutgoingData(model, params.filter, Object.keys(params.filter))\n        : {};\n\n    const bypassCache = params && params.bypassCache;\n\n    // When the filter contains an id, we query in singular mode\n    const multiple: boolean = !filter[\"id\"];\n    const name: string = NameGenerator.getNameForFetch(model, multiple);\n    const query = QueryBuilder.buildQuery(\"query\", model, name, filter, multiple, multiple);\n\n    // Send the request to the GraphQL API\n    const data = await context.apollo.request(model, query, filter, false, bypassCache as boolean);\n\n    // Insert incoming data into the store\n    return Store.insertData(data, dispatch!);\n  }\n}\n","import { ActionParams, Arguments, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport Context from \"../common/context\";\nimport Schema from \"../graphql/schema\";\nimport { Store } from \"../orm/store\";\n\n/**\n * Mutate action for sending a custom mutation. Will be used for Model.mutate() and record.$mutate().\n */\nexport default class Mutate extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} name Name of the query\n   * @param {boolean} multiple Fetch one or multiple?\n   * @param {Arguments} args Arguments for the mutation. Must contain a 'mutation' field.\n   * @returns {Promise<Data>} The new record if any\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { args, name }: ActionParams\n  ): Promise<Data> {\n    if (name) {\n      const context: Context = Context.getInstance();\n      const model = this.getModelFromState(state!);\n\n      const mockReturnValue = model.$mockHook(\"mutate\", {\n        name,\n        args: args || {}\n      });\n\n      if (mockReturnValue) {\n        return Store.insertData(mockReturnValue, dispatch!);\n      }\n\n      const schema: Schema = await context.loadSchema();\n      args = this.prepareArgs(args);\n\n      // There could be anything in the args, but we have to be sure that all records are gone through\n      // transformOutgoingData()\n      this.transformArgs(args);\n\n      // Send the mutation\n      return Action.mutation(name, args, dispatch!, model);\n    } else {\n      throw new Error(\"The mutate action requires the mutation name ('mutation') to be set\");\n    }\n  }\n}\n","import Context from \"../common/context\";\nimport { ActionParams, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport Model from \"../orm/model\";\nimport { Store } from \"../orm/store\";\n\n/**\n * Persist action for sending a create mutation. Will be used for record.$persist().\n */\nexport default class Persist extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} id ID of the record to persist\n   * @returns {Promise<Data>} The saved record\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { id, args }: ActionParams\n  ): Promise<Data> {\n    if (id) {\n      const model = this.getModelFromState(state!);\n      const mutationName = NameGenerator.getNameForPersist(model);\n      const oldRecord = model.getRecordWithId(id);\n\n      const mockReturnValue = model.$mockHook(\"persist\", {\n        id,\n        args: args || {}\n      });\n\n      if (mockReturnValue) {\n        const newRecord = Store.insertData(mockReturnValue, dispatch!);\n        await this.deleteObsoleteRecord(model, newRecord, oldRecord);\n        return newRecord;\n      }\n\n      // Arguments\n      args = this.prepareArgs(args);\n      this.addRecordToArgs(args, model, oldRecord);\n\n      // Send mutation\n      const newRecord = await Action.mutation(mutationName, args, dispatch!, model);\n\n      // Delete the old record if necessary\n      await this.deleteObsoleteRecord(model, newRecord, oldRecord);\n\n      return newRecord;\n    } else {\n      throw new Error(\"The persist action requires the 'id' to be set\");\n    }\n  }\n\n  /**\n   * It's very likely that the server generated different ID for this record.\n   * In this case Action.mutation has inserted a new record instead of updating the existing one.\n   *\n   * @param {Model} model\n   * @param {Data} record\n   * @returns {Promise<void>}\n   */\n  private static async deleteObsoleteRecord(model: Model, newRecord: Data, oldRecord: Data) {\n    if (newRecord && oldRecord && newRecord.id !== oldRecord.id) {\n      Context.getInstance().logger.log(\"Dropping deprecated record\", oldRecord);\n      return oldRecord.$delete();\n    }\n  }\n}\n","import { ActionParams, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport { Store } from \"../orm/store\";\n\n/**\n * Push action for sending a update mutation. Will be used for record.$push().\n */\nexport default class Push extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {Arguments} data New data to save\n   * @param {Arguments} args Additional arguments\n   * @returns {Promise<Data>} The updated record\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { data, args }: ActionParams\n  ): Promise<Data> {\n    if (data) {\n      const model = this.getModelFromState(state!);\n      const mutationName = NameGenerator.getNameForPush(model);\n\n      const mockReturnValue = model.$mockHook(\"push\", {\n        data,\n        args: args || {}\n      });\n\n      if (mockReturnValue) {\n        return Store.insertData(mockReturnValue, dispatch!);\n      }\n\n      // Arguments\n      args = this.prepareArgs(args, data.id);\n      this.addRecordToArgs(args, model, data);\n\n      // Send the mutation\n      return Action.mutation(mutationName, args, dispatch!, model);\n    } else {\n      throw new Error(\"The persist action requires the 'data' to be set\");\n    }\n  }\n}\n","import QueryBuilder from \"../graphql/query-builder\";\nimport Context from \"../common/context\";\nimport { Store } from \"../orm/store\";\nimport Transformer from \"../graphql/transformer\";\nimport { ActionParams, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport Schema from \"../graphql/schema\";\n\n/**\n * Query action for sending a custom query. Will be used for Model.customQuery() and record.$customQuery.\n */\nexport default class Query extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} name Name of the query\n   * @param {boolean} multiple Fetch one or multiple?\n   * @param {object} filter Filter object (arguments)\n   * @param {boolean} bypassCache Whether to bypass the cache\n   * @returns {Promise<Data>} The fetched records as hash\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { name, filter, bypassCache }: ActionParams\n  ): Promise<Data> {\n    if (name) {\n      const context: Context = Context.getInstance();\n      const model = this.getModelFromState(state!);\n\n      const mockReturnValue = model.$mockHook(\"query\", {\n        name,\n        filter: filter || {}\n      });\n\n      if (mockReturnValue) {\n        return Store.insertData(mockReturnValue, dispatch!);\n      }\n\n      const schema: Schema = await context.loadSchema();\n\n      // Filter\n      filter = filter ? Transformer.transformOutgoingData(model, filter) : {};\n\n      // Multiple?\n      const multiple: boolean = Schema.returnsConnection(schema.getQuery(name)!);\n\n      // Build query\n      const query = QueryBuilder.buildQuery(\"query\", model, name, filter, multiple, false);\n\n      // Send the request to the GraphQL API\n      const data = await context.apollo.request(\n        model,\n        query,\n        filter,\n        false,\n        bypassCache as boolean\n      );\n\n      // Insert incoming data into the store\n      return Store.insertData(data, dispatch!);\n    } else {\n      throw new Error(\"The customQuery action requires the query name ('name') to be set\");\n    }\n  }\n}\n","import { ActionParams } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport Context from \"../common/context\";\nimport { parse } from \"graphql/language/parser\";\nimport {clone} from \"../support/utils\";\n\n/**\n * SimpleQuery action for sending a model unrelated simple query.\n */\nexport default class SimpleQuery extends Action {\n  /**\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} query The query to send\n   * @param {Arguments} variables\n   * @param {boolean} bypassCache Whether to bypass the cache\n   * @returns {Promise<any>} The result\n   */\n  public static async call(\n    { dispatch }: ActionParams,\n    { query, bypassCache, variables }: ActionParams\n  ): Promise<any> {\n    const context: Context = Context.getInstance();\n\n    if (query) {\n      const parsedQuery = parse(query);\n      const mockReturnValue = context.globalMockHook(\"simpleQuery\", {\n        name: parsedQuery.definitions[0][\"name\"].value,\n        variables\n      });\n\n      if (mockReturnValue) {\n        return mockReturnValue;\n      }\n\n      variables = this.prepareArgs(variables);\n\n      const result = await context.apollo.simpleQuery(query, variables, bypassCache);\n\n      // remove the symbols\n      return clone(result.data);\n    } else {\n      throw new Error(\"The simpleQuery action requires the 'query' to be set\");\n    }\n  }\n}\n","import { ActionParams } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport Context from \"../common/context\";\nimport { parse } from \"graphql/language/parser\";\nimport {clone} from \"../support/utils\";\n\n/**\n * SimpleMutation action for sending a model unrelated simple mutation.\n */\nexport default class SimpleMutation extends Action {\n  /**\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} query The query to send\n   * @param {Arguments} variables\n   * @returns {Promise<any>} The result\n   */\n  public static async call(\n    { dispatch }: ActionParams,\n    { query, variables }: ActionParams\n  ): Promise<any> {\n    const context: Context = Context.getInstance();\n\n    if (query) {\n      const parsedQuery = parse(query);\n      const mockReturnValue = context.globalMockHook(\"simpleMutation\", {\n        name: parsedQuery.definitions[0][\"name\"].value,\n        variables\n      });\n\n      if (mockReturnValue) {\n        return mockReturnValue;\n      }\n\n      variables = this.prepareArgs(variables);\n      const result = await context.apollo.simpleMutation(query, variables);\n\n      // remove the symbols\n      return clone(result.data);\n    } else {\n      throw new Error(\"The simpleMutation action requires the 'query' to be set\");\n    }\n  }\n}\n","import { PatchedModel, Options, ActionParams } from \"./support/interfaces\";\nimport Context from \"./common/context\";\nimport { Components } from \"@vuex-orm/core/lib/plugins/use\";\nimport { Destroy, Fetch, Mutate, Persist, Push } from \"./actions\";\nimport Query from \"./actions/query\";\nimport SimpleQuery from \"./actions/simple-query\";\nimport SimpleMutation from \"./actions/simple-mutation\";\nimport { isPlainObject } from './support/utils';\n\n/**\n * Main class of the plugin. Setups the internal context, Vuex actions and model methods\n */\nexport default class VuexORMGraphQL {\n  /**\n   * @constructor\n   * @param {Components} components The Vuex-ORM Components collection\n   * @param {Options} options The options passed to VuexORM.install\n   */\n  public constructor(components: Components, options: Options) {\n    Context.setup(components, options);\n    VuexORMGraphQL.setupActions();\n    VuexORMGraphQL.setupModelMethods();\n  }\n\n  /**\n   * Allow everything to read the context.\n   */\n  public getContext(): Context {\n    return Context.getInstance();\n  }\n\n  /**\n   * This method will setup following Vuex actions: fetch, persist, push, destroy, mutate\n   */\n  private static setupActions() {\n    const context = Context.getInstance();\n\n    context.components.RootActions.simpleQuery = SimpleQuery.call.bind(SimpleQuery);\n    context.components.RootActions.simpleMutation = SimpleMutation.call.bind(SimpleMutation);\n\n    context.components.Actions.fetch = Fetch.call.bind(Fetch);\n    context.components.Actions.persist = Persist.call.bind(Persist);\n    context.components.Actions.push = Push.call.bind(Push);\n    context.components.Actions.destroy = Destroy.call.bind(Destroy);\n    context.components.Actions.mutate = Mutate.call.bind(Mutate);\n    context.components.Actions.query = Query.call.bind(Query);\n  }\n\n  /**\n   * This method will setup following model methods: Model.fetch, Model.mutate, Model.customQuery, record.$mutate,\n   * record.$persist, record.$push, record.$destroy and record.$deleteAndDestroy, record.$customQuery\n   */\n  private static setupModelMethods() {\n    const context = Context.getInstance();\n\n    // Register static model convenience methods\n    (context.components.Model as typeof PatchedModel).fetch = async function(\n      filter: any,\n      bypassCache = false\n    ) {\n      let filterObj = filter;\n      if (!isPlainObject(filterObj)) filterObj = { id: filter };\n      return this.dispatch(\"fetch\", { filter: filterObj, bypassCache });\n    };\n\n    (context.components.Model as typeof PatchedModel).mutate = async function(\n      params: ActionParams\n    ) {\n      return this.dispatch(\"mutate\", params);\n    };\n\n    (context.components.Model as typeof PatchedModel).customQuery = async function({\n      name,\n      filter,\n      multiple,\n      bypassCache\n    }: ActionParams) {\n      return this.dispatch(\"query\", { name, filter, multiple, bypassCache });\n    };\n\n    // Register model convenience methods\n    const model = context.components.Model.prototype;\n\n    model.$mutate = async function({ name, args, multiple }: ActionParams) {\n      args = args || {};\n      if (!args[\"id\"]) args[\"id\"] = this.id;\n      return this.$dispatch(\"mutate\", { name, args, multiple });\n    };\n\n    model.$customQuery = async function({ name, filter, multiple, bypassCache }: ActionParams) {\n      filter = filter || {};\n      if (!filter[\"id\"]) filter[\"id\"] = this.id;\n      return this.$dispatch(\"query\", { name, filter, multiple, bypassCache });\n    };\n\n    model.$persist = async function(args: any) {\n      return this.$dispatch(\"persist\", { id: this.id, args });\n    };\n\n    model.$push = async function(args: any) {\n      return this.$dispatch(\"push\", { data: this, args });\n    };\n\n    model.$destroy = async function() {\n      return this.$dispatch(\"destroy\", { id: this.id });\n    };\n\n    model.$deleteAndDestroy = async function() {\n      await this.$delete();\n      return this.$destroy();\n    };\n  }\n}\n"],"names":["_invariant","_location","_printError","_GraphQLError","_syntaxError","_locatedError","_formatError","_blockStringValue","_error","source","_source","lexer","_lexer","_kinds","_directiveLocation","_visitor","print","parse","stringify","this","isEqual","require$$0","Observable","__extends","ponyfill","$$observable","LinkObservable","__assign","Deduplicator","version","haveWarned","graphqlAnywhere","inflection","gql","tslib_1.__extends"],"mappings":"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"}