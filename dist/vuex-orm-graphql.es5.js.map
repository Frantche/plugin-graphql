{"version":3,"file":"vuex-orm-graphql.es5.js","sources":["../node_modules/graphql/jsutils/invariant.js","../node_modules/graphql/language/source.js","../node_modules/graphql/language/location.js","../node_modules/graphql/error/printError.js","../node_modules/graphql/error/GraphQLError.js","../node_modules/graphql/error/syntaxError.js","../node_modules/graphql/error/locatedError.js","../node_modules/graphql/error/formatError.js","../node_modules/graphql/error/index.js","../node_modules/graphql/language/blockStringValue.js","../node_modules/graphql/language/lexer.js","../node_modules/graphql/language/kinds.js","../node_modules/graphql/language/directiveLocation.js","../node_modules/graphql/language/parser.js","../node_modules/graphql/language/visitor.js","../node_modules/graphql/language/printer.js","../src/support/utils.ts","../src/common/logger.ts","../src/orm/model.ts","../node_modules/fast-json-stable-stringify/index.js","../node_modules/apollo-utilities/src/storeUtils.ts","../node_modules/apollo-utilities/src/directives.ts","../node_modules/apollo-utilities/src/fragments.ts","../node_modules/apollo-utilities/src/util/assign.ts","../node_modules/apollo-utilities/src/getFromAST.ts","../node_modules/fclone/dist/fclone.js","../node_modules/apollo-utilities/src/util/cloneDeep.ts","../node_modules/apollo-utilities/src/transform.ts","../node_modules/apollo-utilities/src/util/environment.ts","../node_modules/apollo-utilities/src/util/errorHandling.ts","../node_modules/apollo-utilities/src/util/isEqual.ts","../node_modules/apollo-utilities/src/util/warnOnce.ts","../node_modules/src/core/networkStatus.ts","../node_modules/zen-observable/lib/Observable.js","../node_modules/zen-observable/index.js","../node_modules/zen-observable-ts/src/zenObservable.ts","../node_modules/apollo-link/src/linkUtils.ts","../node_modules/apollo-link/src/link.ts","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/symbol-observable/es/index.js","../node_modules/src/util/Observable.ts","../node_modules/src/errors/ApolloError.ts","../node_modules/src/core/types.ts","../node_modules/src/core/ObservableQuery.ts","../node_modules/apollo-link-dedup/src/dedupLink.ts","../node_modules/src/scheduler/scheduler.ts","../node_modules/src/data/mutations.ts","../node_modules/src/data/queries.ts","../node_modules/src/core/QueryManager.ts","../node_modules/src/data/store.ts","../node_modules/apollo-client/version.js","../node_modules/src/ApolloClient.ts","../node_modules/apollo-cache/src/utils.ts","../node_modules/apollo-cache/src/cache.ts","../node_modules/apollo-cache-inmemory/src/fragmentMatcher.ts","../node_modules/apollo-cache-inmemory/src/objectCache.ts","../node_modules/apollo-cache-inmemory/src/writeToStore.ts","../node_modules/graphql-anywhere/src/graphql.ts","../node_modules/apollo-cache-inmemory/src/readFromStore.ts","../node_modules/apollo-cache-inmemory/src/recordingCache.ts","../node_modules/apollo-cache-inmemory/src/inMemoryCache.ts","../node_modules/apollo-link-http-common/src/index.ts","../node_modules/apollo-link-http/src/httpLink.ts","../src/graphql/transformer.ts","../node_modules/graphql-tag/src/index.js","../src/graphql/apollo.ts","../src/graphql/schema.ts","../src/common/context.ts","../src/graphql/query-builder.ts","../src/orm/store.ts","../src/graphql/name-generator.ts","../src/actions/action.ts","../src/actions/destroy.ts","../src/actions/fetch.ts","../src/actions/mutate.ts","../src/actions/persist.ts","../src/actions/push.ts","../src/actions/query.ts","../src/actions/simple-query.ts","../src/actions/simple-mutation.ts","../src/vuex-orm-graphql.ts"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = invariant;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction invariant(condition, message) {\n  /* istanbul ignore else */\n  if (!condition) {\n    throw new Error(message);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Source = undefined;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           * \n                                                                                                                                                           */\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nvar Source = exports.Source = function Source(body, name, locationOffset) {\n  _classCallCheck(this, Source);\n\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || { line: 1, column: 1 };\n  !(this.locationOffset.line > 0) ? (0, _invariant2.default)(0, 'line in locationOffset is 1-indexed and must be positive') : void 0;\n  !(this.locationOffset.column > 0) ? (0, _invariant2.default)(0, 'column in locationOffset is 1-indexed and must be positive') : void 0;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match = void 0;\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n  return { line: line, column: column };\n}\n\n/**\n * Represents a location in a Source.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printError = printError;\n\nvar _location = require('../language/location');\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\nfunction printError(error) {\n  var printedLocations = [];\n  if (error.nodes) {\n    error.nodes.forEach(function (node) {\n      if (node.loc) {\n        printedLocations.push(highlightSourceAtLocation(node.loc.source, (0, _location.getLocation)(node.loc.source, node.loc.start)));\n      }\n    });\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    error.locations.forEach(function (location) {\n      printedLocations.push(highlightSourceAtLocation(source, location));\n    });\n  }\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction highlightSourceAtLocation(source, location) {\n  var line = location.line;\n  var lineOffset = source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var contextLine = line + lineOffset;\n  var contextColumn = location.column + columnOffset;\n  var prevLineNum = (contextLine - 1).toString();\n  var lineNum = contextLine.toString();\n  var nextLineNum = (contextLine + 1).toString();\n  var padLen = nextLineNum.length;\n  var lines = source.body.split(/\\r\\n|[\\n\\r]/g);\n  lines[0] = whitespace(source.locationOffset.column - 1) + lines[0];\n  var outputLines = [source.name + ' (' + contextLine + ':' + contextColumn + ')', line >= 2 && lpad(padLen, prevLineNum) + ': ' + lines[line - 2], lpad(padLen, lineNum) + ': ' + lines[line - 1], whitespace(2 + padLen + contextColumn - 1) + '^', line < lines.length && lpad(padLen, nextLineNum) + ': ' + lines[line]];\n  return outputLines.filter(Boolean).join('\\n');\n}\n\nfunction getColumnOffset(source, location) {\n  return location.line === 1 ? source.locationOffset.column - 1 : 0;\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLError = GraphQLError;\n\nvar _printError = require('./printError');\n\nvar _location = require('../language/location');\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined;\n\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n      return list;\n    }, []);\n  }\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n  if (positions && source) {\n    var providedSource = source;\n    _locations = positions.map(function (pos) {\n      return (0, _location.getLocation)(providedSource, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push((0, _location.getLocation)(node.loc.source, node.loc.start));\n      }\n      return list;\n    }, []);\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      value: extensions || originalError && originalError.extensions\n    }\n  });\n\n  // Include (non-enumerable) stack trace.\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: { value: GraphQLError },\n  name: { value: 'GraphQLError' },\n  toString: {\n    value: function toString() {\n      return (0, _printError.printError)(this);\n    }\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require('./GraphQLError');\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError('Syntax Error: ' + description, undefined, source, [position]);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locatedError = locatedError;\n\nvar _GraphQLError = require('./GraphQLError');\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(originalError, nodes, path) {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  if (originalError && Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError && originalError.message, originalError && originalError.nodes || nodes, originalError && originalError.source, originalError && originalError.positions, path, originalError);\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**\n                                                                                                                                                                                                                                                                   * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * \n                                                                                                                                                                                                                                                                   */\n\nexports.formatError = formatError;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nfunction formatError(error) {\n  !error ? (0, _invariant2.default)(0, 'Received null or undefined error.') : void 0;\n  return _extends({}, error.extensions, {\n    message: error.message || 'An unknown error occurred.',\n    locations: error.locations,\n    path: error.path\n  });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _GraphQLError = require('./GraphQLError');\n\nObject.defineProperty(exports, 'GraphQLError', {\n  enumerable: true,\n  get: function get() {\n    return _GraphQLError.GraphQLError;\n  }\n});\n\nvar _syntaxError = require('./syntaxError');\n\nObject.defineProperty(exports, 'syntaxError', {\n  enumerable: true,\n  get: function get() {\n    return _syntaxError.syntaxError;\n  }\n});\n\nvar _locatedError = require('./locatedError');\n\nObject.defineProperty(exports, 'locatedError', {\n  enumerable: true,\n  get: function get() {\n    return _locatedError.locatedError;\n  }\n});\n\nvar _printError = require('./printError');\n\nObject.defineProperty(exports, 'printError', {\n  enumerable: true,\n  get: function get() {\n    return _printError.printError;\n  }\n});\n\nvar _formatError = require('./formatError');\n\nObject.defineProperty(exports, 'formatError', {\n  enumerable: true,\n  get: function get() {\n    return _formatError.formatError;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = blockStringValue;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nfunction blockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n\n  // Remove common indentation from all lines but first.\n  var commonIndent = null;\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n    if (indent < line.length && (commonIndent === null || indent < commonIndent)) {\n      commonIndent = indent;\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  if (commonIndent) {\n    for (var _i = 1; _i < lines.length; _i++) {\n      lines[_i] = lines[_i].slice(commonIndent);\n    }\n  }\n\n  // Remove leading and trailing blank lines.\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  }\n\n  // Return a string of the lines joined with U+000A.\n  return lines.join('\\n');\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenKind = undefined;\nexports.createLexer = createLexer;\nexports.getTokenDesc = getTokenDesc;\n\nvar _error = require('../error');\n\nvar _blockStringValue = require('./blockStringValue');\n\nvar _blockStringValue2 = _interopRequireDefault(_blockStringValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction createLexer(source, options) {\n  var startOfFileToken = new Tok(SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n  if (token.kind !== EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === COMMENT);\n  }\n  return token;\n}\n\n/**\n * The return type of createLexer.\n */\n\n\n// Each kind of token.\nvar SOF = '<SOF>';\nvar EOF = '<EOF>';\nvar BANG = '!';\nvar DOLLAR = '$';\nvar PAREN_L = '(';\nvar PAREN_R = ')';\nvar SPREAD = '...';\nvar COLON = ':';\nvar EQUALS = '=';\nvar AT = '@';\nvar BRACKET_L = '[';\nvar BRACKET_R = ']';\nvar BRACE_L = '{';\nvar PIPE = '|';\nvar BRACE_R = '}';\nvar NAME = 'Name';\nvar INT = 'Int';\nvar FLOAT = 'Float';\nvar STRING = 'String';\nvar BLOCK_STRING = 'BlockString';\nvar COMMENT = 'Comment';\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = exports.TokenKind = {\n  SOF: SOF,\n  EOF: EOF,\n  BANG: BANG,\n  DOLLAR: DOLLAR,\n  PAREN_L: PAREN_L,\n  PAREN_R: PAREN_R,\n  SPREAD: SPREAD,\n  COLON: COLON,\n  EQUALS: EQUALS,\n  AT: AT,\n  BRACKET_L: BRACKET_L,\n  BRACKET_R: BRACKET_R,\n  BRACE_L: BRACE_L,\n  PIPE: PIPE,\n  BRACE_R: BRACE_R,\n  NAME: NAME,\n  INT: INT,\n  FLOAT: FLOAT,\n  STRING: STRING,\n  BLOCK_STRING: BLOCK_STRING,\n  COMMENT: COMMENT\n};\n\n/**\n * A helper function to describe a token as a string for debugging\n */\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? token.kind + ' \"' + value + '\"' : token.kind;\n}\n\nvar charCodeAt = String.prototype.charCodeAt;\nvar slice = String.prototype.slice;\n\n/**\n * Helper function for constructing the Token object.\n */\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nTok.prototype.toJSON = Tok.prototype.inspect = function toJSON() {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n};\n\nfunction printCharCode(code) {\n  return (\n    // NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    '\"\\\\u' + ('00' + code.toString(16).toUpperCase()).slice(-4) + '\"'\n  );\n}\n\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace and comments until it finds the next lexable\n * token, then lexes punctuators immediately or calls the appropriate helper\n * function for more complicated tokens.\n */\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n\n  var position = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + position - lexer.lineStart;\n\n  if (position >= bodyLength) {\n    return new Tok(EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = charCodeAt.call(body, position);\n\n  // SourceCharacter\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    throw (0, _error.syntaxError)(source, position, 'Cannot contain the invalid character ' + printCharCode(code) + '.');\n  }\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(BANG, position, position + 1, line, col, prev);\n    // #\n    case 35:\n      return readComment(source, position, line, col, prev);\n    // $\n    case 36:\n      return new Tok(DOLLAR, position, position + 1, line, col, prev);\n    // (\n    case 40:\n      return new Tok(PAREN_L, position, position + 1, line, col, prev);\n    // )\n    case 41:\n      return new Tok(PAREN_R, position, position + 1, line, col, prev);\n    // .\n    case 46:\n      if (charCodeAt.call(body, position + 1) === 46 && charCodeAt.call(body, position + 2) === 46) {\n        return new Tok(SPREAD, position, position + 3, line, col, prev);\n      }\n      break;\n    // :\n    case 58:\n      return new Tok(COLON, position, position + 1, line, col, prev);\n    // =\n    case 61:\n      return new Tok(EQUALS, position, position + 1, line, col, prev);\n    // @\n    case 64:\n      return new Tok(AT, position, position + 1, line, col, prev);\n    // [\n    case 91:\n      return new Tok(BRACKET_L, position, position + 1, line, col, prev);\n    // ]\n    case 93:\n      return new Tok(BRACKET_R, position, position + 1, line, col, prev);\n    // {\n    case 123:\n      return new Tok(BRACE_L, position, position + 1, line, col, prev);\n    // |\n    case 124:\n      return new Tok(PIPE, position, position + 1, line, col, prev);\n    // }\n    case 125:\n      return new Tok(BRACE_R, position, position + 1, line, col, prev);\n    // A-Z _ a-z\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, position, line, col, prev);\n    // - 0-9\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, position, code, line, col, prev);\n    // \"\n    case 34:\n      if (charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n        return readBlockString(source, position, line, col, prev);\n      }\n      return readString(source, position, line, col, prev);\n  }\n\n  throw (0, _error.syntaxError)(source, position, unexpectedCharacterMessage(code));\n}\n\n/**\n * Report a message that an unexpected character was encountered.\n */\nfunction unexpectedCharacterMessage(code) {\n  if (code === 39) {\n    // '\n    return \"Unexpected single quote character ('), did you mean to use \" + 'a double quote (\")?';\n  }\n\n  return 'Cannot parse the unexpected character ' + printCharCode(code) + '.';\n}\n\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * or commented character, then returns the position of that character for\n * lexing.\n */\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n  while (position < bodyLength) {\n    var code = charCodeAt.call(body, position);\n    // tab | space | comma | BOM\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n  return position;\n}\n\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code = void 0;\n  var position = start;\n\n  do {\n    code = charCodeAt.call(body, ++position);\n  } while (code !== null && (\n  // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(COMMENT, start, position, line, col, prev, slice.call(body, start + 1, position));\n}\n\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = charCodeAt.call(body, ++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = charCodeAt.call(body, ++position);\n    if (code >= 48 && code <= 57) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid number, unexpected digit after 0: ' + printCharCode(code) + '.');\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    if (code === 43 || code === 45) {\n      // + -\n      code = charCodeAt.call(body, ++position);\n    }\n    position = readDigits(source, position, code);\n  }\n\n  return new Tok(isFloat ? FLOAT : INT, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n/**\n * Returns the new position in the source after reading digits.\n */\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = charCodeAt.call(body, ++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n    return position;\n  }\n  throw (0, _error.syntaxError)(source, position, 'Invalid number, expected digit but got: ' + printCharCode(code) + '.');\n}\n\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null &&\n  // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += slice.call(body, chunkStart, position);\n      return new Tok(STRING, start, position + 1, line, col, prev, value);\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    ++position;\n    if (code === 92) {\n      // \\\n      value += slice.call(body, chunkStart, position - 1);\n      code = charCodeAt.call(body, position);\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n        case 47:\n          value += '/';\n          break;\n        case 92:\n          value += '\\\\';\n          break;\n        case 98:\n          value += '\\b';\n          break;\n        case 102:\n          value += '\\f';\n          break;\n        case 110:\n          value += '\\n';\n          break;\n        case 114:\n          value += '\\r';\n          break;\n        case 116:\n          value += '\\t';\n          break;\n        case 117:\n          // u\n          var charCode = uniCharCode(charCodeAt.call(body, position + 1), charCodeAt.call(body, position + 2), charCodeAt.call(body, position + 3), charCodeAt.call(body, position + 4));\n          if (charCode < 0) {\n            throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: ' + ('\\\\u' + body.slice(position + 1, position + 5) + '.'));\n          }\n          value += String.fromCharCode(charCode);\n          position += 4;\n          break;\n        default:\n          throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: \\\\' + String.fromCharCode(code) + '.');\n      }\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n}\n\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\nfunction readBlockString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n      rawValue += slice.call(body, chunkStart, position);\n      return new Tok(BLOCK_STRING, start, position + 3, line, col, prev, (0, _blockStringValue2.default)(rawValue));\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    // Escape Triple-Quote (\\\"\"\")\n    if (code === 92 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34 && charCodeAt.call(body, position + 3) === 34) {\n      rawValue += slice.call(body, chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n}\n\n/**\n * Converts four hexidecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\nfunction readName(source, position, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var end = position + 1;\n  var code = 0;\n  while (end !== bodyLength && (code = charCodeAt.call(body, end)) !== null && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++end;\n  }\n  return new Tok(NAME, position, end, line, col, prev, slice.call(body, position, end));\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n// Name\n\nvar NAME = exports.NAME = 'Name';\n\n// Document\n\nvar DOCUMENT = exports.DOCUMENT = 'Document';\nvar OPERATION_DEFINITION = exports.OPERATION_DEFINITION = 'OperationDefinition';\nvar VARIABLE_DEFINITION = exports.VARIABLE_DEFINITION = 'VariableDefinition';\nvar VARIABLE = exports.VARIABLE = 'Variable';\nvar SELECTION_SET = exports.SELECTION_SET = 'SelectionSet';\nvar FIELD = exports.FIELD = 'Field';\nvar ARGUMENT = exports.ARGUMENT = 'Argument';\n\n// Fragments\n\nvar FRAGMENT_SPREAD = exports.FRAGMENT_SPREAD = 'FragmentSpread';\nvar INLINE_FRAGMENT = exports.INLINE_FRAGMENT = 'InlineFragment';\nvar FRAGMENT_DEFINITION = exports.FRAGMENT_DEFINITION = 'FragmentDefinition';\n\n// Values\n\nvar INT = exports.INT = 'IntValue';\nvar FLOAT = exports.FLOAT = 'FloatValue';\nvar STRING = exports.STRING = 'StringValue';\nvar BOOLEAN = exports.BOOLEAN = 'BooleanValue';\nvar NULL = exports.NULL = 'NullValue';\nvar ENUM = exports.ENUM = 'EnumValue';\nvar LIST = exports.LIST = 'ListValue';\nvar OBJECT = exports.OBJECT = 'ObjectValue';\nvar OBJECT_FIELD = exports.OBJECT_FIELD = 'ObjectField';\n\n// Directives\n\nvar DIRECTIVE = exports.DIRECTIVE = 'Directive';\n\n// Types\n\nvar NAMED_TYPE = exports.NAMED_TYPE = 'NamedType';\nvar LIST_TYPE = exports.LIST_TYPE = 'ListType';\nvar NON_NULL_TYPE = exports.NON_NULL_TYPE = 'NonNullType';\n\n// Type System Definitions\n\nvar SCHEMA_DEFINITION = exports.SCHEMA_DEFINITION = 'SchemaDefinition';\nvar OPERATION_TYPE_DEFINITION = exports.OPERATION_TYPE_DEFINITION = 'OperationTypeDefinition';\n\n// Type Definitions\n\nvar SCALAR_TYPE_DEFINITION = exports.SCALAR_TYPE_DEFINITION = 'ScalarTypeDefinition';\nvar OBJECT_TYPE_DEFINITION = exports.OBJECT_TYPE_DEFINITION = 'ObjectTypeDefinition';\nvar FIELD_DEFINITION = exports.FIELD_DEFINITION = 'FieldDefinition';\nvar INPUT_VALUE_DEFINITION = exports.INPUT_VALUE_DEFINITION = 'InputValueDefinition';\nvar INTERFACE_TYPE_DEFINITION = exports.INTERFACE_TYPE_DEFINITION = 'InterfaceTypeDefinition';\nvar UNION_TYPE_DEFINITION = exports.UNION_TYPE_DEFINITION = 'UnionTypeDefinition';\nvar ENUM_TYPE_DEFINITION = exports.ENUM_TYPE_DEFINITION = 'EnumTypeDefinition';\nvar ENUM_VALUE_DEFINITION = exports.ENUM_VALUE_DEFINITION = 'EnumValueDefinition';\nvar INPUT_OBJECT_TYPE_DEFINITION = exports.INPUT_OBJECT_TYPE_DEFINITION = 'InputObjectTypeDefinition';\n\n// Type Extensions\n\nvar SCALAR_TYPE_EXTENSION = exports.SCALAR_TYPE_EXTENSION = 'ScalarTypeExtension';\nvar OBJECT_TYPE_EXTENSION = exports.OBJECT_TYPE_EXTENSION = 'ObjectTypeExtension';\nvar INTERFACE_TYPE_EXTENSION = exports.INTERFACE_TYPE_EXTENSION = 'InterfaceTypeExtension';\nvar UNION_TYPE_EXTENSION = exports.UNION_TYPE_EXTENSION = 'UnionTypeExtension';\nvar ENUM_TYPE_EXTENSION = exports.ENUM_TYPE_EXTENSION = 'EnumTypeExtension';\nvar INPUT_OBJECT_TYPE_EXTENSION = exports.INPUT_OBJECT_TYPE_EXTENSION = 'InputObjectTypeExtension';\n\n// Directive Definitions\n\nvar DIRECTIVE_DEFINITION = exports.DIRECTIVE_DEFINITION = 'DirectiveDefinition';","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation = exports.DirectiveLocation = {\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n};\n\n/**\n * The enum type representing the directive location values.\n */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.parseValue = parseValue;\nexports.parseType = parseType;\nexports.parseConstValue = parseConstValue;\nexports.parseTypeReference = parseTypeReference;\nexports.parseNamedType = parseNamedType;\n\nvar _source = require('./source');\n\nvar _error = require('../error');\n\nvar _lexer = require('./lexer');\n\nvar _kinds = require('./kinds');\n\nvar _directiveLocation = require('./directiveLocation');\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\n\n\n/**\n * Configuration options to control parser behavior\n */\nfunction parse(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  if (!(sourceObj instanceof _source.Source)) {\n    throw new TypeError('Must provide Source. Received: ' + String(sourceObj));\n  }\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  return parseDocument(lexer);\n}\n\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction parseValue(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  expect(lexer, _lexer.TokenKind.SOF);\n  var value = parseValueLiteral(lexer, false);\n  expect(lexer, _lexer.TokenKind.EOF);\n  return value;\n}\n\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\nfunction parseType(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  expect(lexer, _lexer.TokenKind.SOF);\n  var type = parseTypeReference(lexer);\n  expect(lexer, _lexer.TokenKind.EOF);\n  return type;\n}\n\n/**\n * Converts a name lex token into a name parse node.\n */\nfunction parseName(lexer) {\n  var token = expect(lexer, _lexer.TokenKind.NAME);\n  return {\n    kind: _kinds.NAME,\n    value: token.value,\n    loc: loc(lexer, token)\n  };\n}\n\n// Implements the parsing rules in the Document section.\n\n/**\n * Document : Definition+\n */\nfunction parseDocument(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.SOF);\n  var definitions = [];\n  do {\n    definitions.push(parseDefinition(lexer));\n  } while (!skip(lexer, _lexer.TokenKind.EOF));\n\n  return {\n    kind: _kinds.DOCUMENT,\n    definitions: definitions,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Definition :\n *   - ExecutableDefinition\n *   - TypeSystemDefinition\n */\nfunction parseDefinition(lexer) {\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n      case 'fragment':\n        return parseExecutableDefinition(lexer);\n      case 'schema':\n      case 'scalar':\n      case 'type':\n      case 'interface':\n      case 'union':\n      case 'enum':\n      case 'input':\n      case 'extend':\n      case 'directive':\n        // Note: The schema definition language is an experimental addition.\n        return parseTypeSystemDefinition(lexer);\n    }\n  } else if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return parseExecutableDefinition(lexer);\n  } else if (peekDescription(lexer)) {\n    // Note: The schema definition language is an experimental addition.\n    return parseTypeSystemDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n/**\n * ExecutableDefinition :\n *   - OperationDefinition\n *   - FragmentDefinition\n */\nfunction parseExecutableDefinition(lexer) {\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n        return parseOperationDefinition(lexer);\n\n      case 'fragment':\n        return parseFragmentDefinition(lexer);\n    }\n  } else if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return parseOperationDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n// Implements the parsing rules in the Operations section.\n\n/**\n * OperationDefinition :\n *  - SelectionSet\n *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n */\nfunction parseOperationDefinition(lexer) {\n  var start = lexer.token;\n  if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return {\n      kind: _kinds.OPERATION_DEFINITION,\n      operation: 'query',\n      name: undefined,\n      variableDefinitions: [],\n      directives: [],\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  var operation = parseOperationType(lexer);\n  var name = void 0;\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    name = parseName(lexer);\n  }\n  return {\n    kind: _kinds.OPERATION_DEFINITION,\n    operation: operation,\n    name: name,\n    variableDefinitions: parseVariableDefinitions(lexer),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationType : one of query mutation subscription\n */\nfunction parseOperationType(lexer) {\n  var operationToken = expect(lexer, _lexer.TokenKind.NAME);\n  switch (operationToken.value) {\n    case 'query':\n      return 'query';\n    case 'mutation':\n      return 'mutation';\n    case 'subscription':\n      return 'subscription';\n  }\n\n  throw unexpected(lexer, operationToken);\n}\n\n/**\n * VariableDefinitions : ( VariableDefinition+ )\n */\nfunction parseVariableDefinitions(lexer) {\n  return peek(lexer, _lexer.TokenKind.PAREN_L) ? many(lexer, _lexer.TokenKind.PAREN_L, parseVariableDefinition, _lexer.TokenKind.PAREN_R) : [];\n}\n\n/**\n * VariableDefinition : Variable : Type DefaultValue?\n */\nfunction parseVariableDefinition(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.VARIABLE_DEFINITION,\n    variable: parseVariable(lexer),\n    type: (expect(lexer, _lexer.TokenKind.COLON), parseTypeReference(lexer)),\n    defaultValue: skip(lexer, _lexer.TokenKind.EQUALS) ? parseValueLiteral(lexer, true) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Variable : $ Name\n */\nfunction parseVariable(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.DOLLAR);\n  return {\n    kind: _kinds.VARIABLE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * SelectionSet : { Selection+ }\n */\nfunction parseSelectionSet(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.SELECTION_SET,\n    selections: many(lexer, _lexer.TokenKind.BRACE_L, parseSelection, _lexer.TokenKind.BRACE_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Selection :\n *   - Field\n *   - FragmentSpread\n *   - InlineFragment\n */\nfunction parseSelection(lexer) {\n  return peek(lexer, _lexer.TokenKind.SPREAD) ? parseFragment(lexer) : parseField(lexer);\n}\n\n/**\n * Field : Alias? Name Arguments? Directives? SelectionSet?\n *\n * Alias : Name :\n */\nfunction parseField(lexer) {\n  var start = lexer.token;\n\n  var nameOrAlias = parseName(lexer);\n  var alias = void 0;\n  var name = void 0;\n  if (skip(lexer, _lexer.TokenKind.COLON)) {\n    alias = nameOrAlias;\n    name = parseName(lexer);\n  } else {\n    name = nameOrAlias;\n  }\n\n  return {\n    kind: _kinds.FIELD,\n    alias: alias,\n    name: name,\n    arguments: parseArguments(lexer, false),\n    directives: parseDirectives(lexer, false),\n    selectionSet: peek(lexer, _lexer.TokenKind.BRACE_L) ? parseSelectionSet(lexer) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Arguments[Const] : ( Argument[?Const]+ )\n */\nfunction parseArguments(lexer, isConst) {\n  var item = isConst ? parseConstArgument : parseArgument;\n  return peek(lexer, _lexer.TokenKind.PAREN_L) ? many(lexer, _lexer.TokenKind.PAREN_L, item, _lexer.TokenKind.PAREN_R) : [];\n}\n\n/**\n * Argument[Const] : Name : Value[?Const]\n */\nfunction parseArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseValueLiteral(lexer, false)),\n    loc: loc(lexer, start)\n  };\n}\n\nfunction parseConstArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseConstValue(lexer)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Fragments section.\n\n/**\n * Corresponds to both FragmentSpread and InlineFragment in the spec.\n *\n * FragmentSpread : ... FragmentName Directives?\n *\n * InlineFragment : ... TypeCondition? Directives? SelectionSet\n */\nfunction parseFragment(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.SPREAD);\n  if (peek(lexer, _lexer.TokenKind.NAME) && lexer.token.value !== 'on') {\n    return {\n      kind: _kinds.FRAGMENT_SPREAD,\n      name: parseFragmentName(lexer),\n      directives: parseDirectives(lexer, false),\n      loc: loc(lexer, start)\n    };\n  }\n  var typeCondition = void 0;\n  if (lexer.token.value === 'on') {\n    lexer.advance();\n    typeCondition = parseNamedType(lexer);\n  }\n  return {\n    kind: _kinds.INLINE_FRAGMENT,\n    typeCondition: typeCondition,\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentDefinition :\n *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n *\n * TypeCondition : NamedType\n */\nfunction parseFragmentDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'fragment');\n  // Experimental support for defining variables within fragments changes\n  // the grammar of FragmentDefinition:\n  //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n  if (lexer.options.experimentalFragmentVariables) {\n    return {\n      kind: _kinds.FRAGMENT_DEFINITION,\n      name: parseFragmentName(lexer),\n      variableDefinitions: parseVariableDefinitions(lexer),\n      typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n      directives: parseDirectives(lexer, false),\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  return {\n    kind: _kinds.FRAGMENT_DEFINITION,\n    name: parseFragmentName(lexer),\n    typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentName : Name but not `on`\n */\nfunction parseFragmentName(lexer) {\n  if (lexer.token.value === 'on') {\n    throw unexpected(lexer);\n  }\n  return parseName(lexer);\n}\n\n// Implements the parsing rules in the Values section.\n\n/**\n * Value[Const] :\n *   - [~Const] Variable\n *   - IntValue\n *   - FloatValue\n *   - StringValue\n *   - BooleanValue\n *   - NullValue\n *   - EnumValue\n *   - ListValue[?Const]\n *   - ObjectValue[?Const]\n *\n * BooleanValue : one of `true` `false`\n *\n * NullValue : `null`\n *\n * EnumValue : Name but not `true`, `false` or `null`\n */\nfunction parseValueLiteral(lexer, isConst) {\n  var token = lexer.token;\n  switch (token.kind) {\n    case _lexer.TokenKind.BRACKET_L:\n      return parseList(lexer, isConst);\n    case _lexer.TokenKind.BRACE_L:\n      return parseObject(lexer, isConst);\n    case _lexer.TokenKind.INT:\n      lexer.advance();\n      return {\n        kind: _kinds.INT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.FLOAT:\n      lexer.advance();\n      return {\n        kind: _kinds.FLOAT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.STRING:\n    case _lexer.TokenKind.BLOCK_STRING:\n      return parseStringLiteral(lexer);\n    case _lexer.TokenKind.NAME:\n      if (token.value === 'true' || token.value === 'false') {\n        lexer.advance();\n        return {\n          kind: _kinds.BOOLEAN,\n          value: token.value === 'true',\n          loc: loc(lexer, token)\n        };\n      } else if (token.value === 'null') {\n        lexer.advance();\n        return {\n          kind: _kinds.NULL,\n          loc: loc(lexer, token)\n        };\n      }\n      lexer.advance();\n      return {\n        kind: _kinds.ENUM,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case _lexer.TokenKind.DOLLAR:\n      if (!isConst) {\n        return parseVariable(lexer);\n      }\n      break;\n  }\n  throw unexpected(lexer);\n}\n\nfunction parseStringLiteral(lexer) {\n  var token = lexer.token;\n  lexer.advance();\n  return {\n    kind: _kinds.STRING,\n    value: token.value,\n    block: token.kind === _lexer.TokenKind.BLOCK_STRING,\n    loc: loc(lexer, token)\n  };\n}\n\nfunction parseConstValue(lexer) {\n  return parseValueLiteral(lexer, true);\n}\n\nfunction parseValueValue(lexer) {\n  return parseValueLiteral(lexer, false);\n}\n\n/**\n * ListValue[Const] :\n *   - [ ]\n *   - [ Value[?Const]+ ]\n */\nfunction parseList(lexer, isConst) {\n  var start = lexer.token;\n  var item = isConst ? parseConstValue : parseValueValue;\n  return {\n    kind: _kinds.LIST,\n    values: any(lexer, _lexer.TokenKind.BRACKET_L, item, _lexer.TokenKind.BRACKET_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectValue[Const] :\n *   - { }\n *   - { ObjectField[?Const]+ }\n */\nfunction parseObject(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.BRACE_L);\n  var fields = [];\n  while (!skip(lexer, _lexer.TokenKind.BRACE_R)) {\n    fields.push(parseObjectField(lexer, isConst));\n  }\n  return {\n    kind: _kinds.OBJECT,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectField[Const] : Name : Value[?Const]\n */\nfunction parseObjectField(lexer, isConst) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.OBJECT_FIELD,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseValueLiteral(lexer, isConst)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Directives section.\n\n/**\n * Directives[Const] : Directive[?Const]+\n */\nfunction parseDirectives(lexer, isConst) {\n  var directives = [];\n  while (peek(lexer, _lexer.TokenKind.AT)) {\n    directives.push(parseDirective(lexer, isConst));\n  }\n  return directives;\n}\n\n/**\n * Directive[Const] : @ Name Arguments[?Const]?\n */\nfunction parseDirective(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.AT);\n  return {\n    kind: _kinds.DIRECTIVE,\n    name: parseName(lexer),\n    arguments: parseArguments(lexer, isConst),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Types section.\n\n/**\n * Type :\n *   - NamedType\n *   - ListType\n *   - NonNullType\n */\nfunction parseTypeReference(lexer) {\n  var start = lexer.token;\n  var type = void 0;\n  if (skip(lexer, _lexer.TokenKind.BRACKET_L)) {\n    type = parseTypeReference(lexer);\n    expect(lexer, _lexer.TokenKind.BRACKET_R);\n    type = {\n      kind: _kinds.LIST_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  } else {\n    type = parseNamedType(lexer);\n  }\n  if (skip(lexer, _lexer.TokenKind.BANG)) {\n    return {\n      kind: _kinds.NON_NULL_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  }\n  return type;\n}\n\n/**\n * NamedType : Name\n */\nfunction parseNamedType(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.NAMED_TYPE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Type Definition section.\n\n/**\n * TypeSystemDefinition :\n *   - SchemaDefinition\n *   - TypeDefinition\n *   - TypeExtension\n *   - DirectiveDefinition\n *\n * TypeDefinition :\n *   - ScalarTypeDefinition\n *   - ObjectTypeDefinition\n *   - InterfaceTypeDefinition\n *   - UnionTypeDefinition\n *   - EnumTypeDefinition\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeSystemDefinition(lexer) {\n  // Many definitions begin with a description and require a lookahead.\n  var keywordToken = peekDescription(lexer) ? lexer.lookahead() : lexer.token;\n\n  if (keywordToken.kind === _lexer.TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'schema':\n        return parseSchemaDefinition(lexer);\n      case 'scalar':\n        return parseScalarTypeDefinition(lexer);\n      case 'type':\n        return parseObjectTypeDefinition(lexer);\n      case 'interface':\n        return parseInterfaceTypeDefinition(lexer);\n      case 'union':\n        return parseUnionTypeDefinition(lexer);\n      case 'enum':\n        return parseEnumTypeDefinition(lexer);\n      case 'input':\n        return parseInputObjectTypeDefinition(lexer);\n      case 'extend':\n        return parseTypeExtension(lexer);\n      case 'directive':\n        return parseDirectiveDefinition(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\nfunction peekDescription(lexer) {\n  return peek(lexer, _lexer.TokenKind.STRING) || peek(lexer, _lexer.TokenKind.BLOCK_STRING);\n}\n\n/**\n * Description : StringValue\n */\nfunction parseDescription(lexer) {\n  if (peekDescription(lexer)) {\n    return parseStringLiteral(lexer);\n  }\n}\n\n/**\n * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n */\nfunction parseSchemaDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'schema');\n  var directives = parseDirectives(lexer, true);\n  var operationTypes = many(lexer, _lexer.TokenKind.BRACE_L, parseOperationTypeDefinition, _lexer.TokenKind.BRACE_R);\n  return {\n    kind: _kinds.SCHEMA_DEFINITION,\n    directives: directives,\n    operationTypes: operationTypes,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationTypeDefinition : OperationType : NamedType\n */\nfunction parseOperationTypeDefinition(lexer) {\n  var start = lexer.token;\n  var operation = parseOperationType(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseNamedType(lexer);\n  return {\n    kind: _kinds.OPERATION_TYPE_DEFINITION,\n    operation: operation,\n    type: type,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n */\nfunction parseScalarTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.SCALAR_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeDefinition :\n *   Description?\n *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n */\nfunction parseObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: _kinds.OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ImplementsInterfaces : implements NamedType+\n */\nfunction parseImplementsInterfaces(lexer) {\n  var types = [];\n  if (lexer.token.value === 'implements') {\n    lexer.advance();\n    do {\n      types.push(parseNamedType(lexer));\n    } while (peek(lexer, _lexer.TokenKind.NAME));\n  }\n  return types;\n}\n\n/**\n * FieldsDefinition : { FieldDefinition+ }\n */\nfunction parseFieldsDefinition(lexer) {\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseFieldDefinition, _lexer.TokenKind.BRACE_R) : [];\n}\n\n/**\n * FieldDefinition :\n *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n */\nfunction parseFieldDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.FIELD_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    type: type,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ArgumentsDefinition : ( InputValueDefinition+ )\n */\nfunction parseArgumentDefs(lexer) {\n  if (!peek(lexer, _lexer.TokenKind.PAREN_L)) {\n    return [];\n  }\n  return many(lexer, _lexer.TokenKind.PAREN_L, parseInputValueDef, _lexer.TokenKind.PAREN_R);\n}\n\n/**\n * InputValueDefinition :\n *   - Description? Name : Type DefaultValue? Directives[Const]?\n */\nfunction parseInputValueDef(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var defaultValue = void 0;\n  if (skip(lexer, _lexer.TokenKind.EQUALS)) {\n    defaultValue = parseConstValue(lexer);\n  }\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.INPUT_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    type: type,\n    defaultValue: defaultValue,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeDefinition :\n *   - Description? interface Name Directives[Const]? FieldsDefinition?\n */\nfunction parseInterfaceTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: _kinds.INTERFACE_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeDefinition :\n *   - Description? union Name Directives[Const]? MemberTypesDefinition?\n */\nfunction parseUnionTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseMemberTypesDefinition(lexer);\n  return {\n    kind: _kinds.UNION_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * MemberTypesDefinition : = MemberTypes\n *\n * MemberTypes :\n *   - `|`? NamedType\n *   - MemberTypes | NamedType\n */\nfunction parseMemberTypesDefinition(lexer) {\n  var types = [];\n  if (skip(lexer, _lexer.TokenKind.EQUALS)) {\n    // Optional leading pipe\n    skip(lexer, _lexer.TokenKind.PIPE);\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, _lexer.TokenKind.PIPE));\n  }\n  return types;\n}\n\n/**\n * EnumTypeDefinition :\n *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n */\nfunction parseEnumTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  return {\n    kind: _kinds.ENUM_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumValuesDefinition : { EnumValueDefinition+ }\n */\nfunction parseEnumValuesDefinition(lexer) {\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseEnumValueDefinition, _lexer.TokenKind.BRACE_R) : [];\n}\n\n/**\n * EnumValueDefinition : Description? EnumValue Directives[Const]?\n *\n * EnumValue : Name\n */\nfunction parseEnumValueDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.ENUM_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeDefinition :\n *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n */\nfunction parseInputObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  return {\n    kind: _kinds.INPUT_OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputFieldsDefinition : { InputValueDefinition+ }\n */\nfunction parseInputFieldsDefinition(lexer) {\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseInputValueDef, _lexer.TokenKind.BRACE_R) : [];\n}\n\n/**\n * TypeExtension :\n *   - ScalarTypeExtension\n *   - ObjectTypeExtension\n *   - InterfaceTypeExtension\n *   - UnionTypeExtension\n *   - EnumTypeExtension\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeExtension(lexer) {\n  var keywordToken = lexer.lookahead();\n\n  if (keywordToken.kind === _lexer.TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'scalar':\n        return parseScalarTypeExtension(lexer);\n      case 'type':\n        return parseObjectTypeExtension(lexer);\n      case 'interface':\n        return parseInterfaceTypeExtension(lexer);\n      case 'union':\n        return parseUnionTypeExtension(lexer);\n      case 'enum':\n        return parseEnumTypeExtension(lexer);\n      case 'input':\n        return parseInputObjectTypeExtension(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\n/**\n * ScalarTypeExtension :\n *   - extend scalar Name Directives[Const]\n */\nfunction parseScalarTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  if (directives.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.SCALAR_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeExtension :\n *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n *  - extend type Name ImplementsInterfaces? Directives[Const]\n *  - extend type Name ImplementsInterfaces\n */\nfunction parseObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.OBJECT_TYPE_EXTENSION,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeExtension :\n *   - extend interface Name Directives[Const]? FieldsDefinition\n *   - extend interface Name Directives[Const]\n */\nfunction parseInterfaceTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.INTERFACE_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeExtension :\n *   - extend union Name Directives[Const]? MemberTypesDefinition\n *   - extend union Name Directives[Const]\n */\nfunction parseUnionTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseMemberTypesDefinition(lexer);\n  if (directives.length === 0 && types.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.UNION_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumTypeExtension :\n *   - extend enum Name Directives[Const]? EnumValuesDefinition\n *   - extend enum Name Directives[Const]\n */\nfunction parseEnumTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  if (directives.length === 0 && values.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.ENUM_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeExtension :\n *   - extend input Name Directives[Const]? InputFieldsDefinition\n *   - extend input Name Directives[Const]\n */\nfunction parseInputObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: _kinds.INPUT_OBJECT_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveDefinition :\n *   - Description? directive @ Name ArgumentsDefinition? on DirectiveLocations\n */\nfunction parseDirectiveDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'directive');\n  expect(lexer, _lexer.TokenKind.AT);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expectKeyword(lexer, 'on');\n  var locations = parseDirectiveLocations(lexer);\n  return {\n    kind: _kinds.DIRECTIVE_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    locations: locations,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveLocations :\n *   - `|`? DirectiveLocation\n *   - DirectiveLocations | DirectiveLocation\n */\nfunction parseDirectiveLocations(lexer) {\n  // Optional leading pipe\n  skip(lexer, _lexer.TokenKind.PIPE);\n  var locations = [];\n  do {\n    locations.push(parseDirectiveLocation(lexer));\n  } while (skip(lexer, _lexer.TokenKind.PIPE));\n  return locations;\n}\n\n/*\n * DirectiveLocation :\n *   - ExecutableDirectiveLocation\n *   - TypeSystemDirectiveLocation\n *\n * ExecutableDirectiveLocation : one of\n *   `QUERY`\n *   `MUTATION`\n *   `SUBSCRIPTION`\n *   `FIELD`\n *   `FRAGMENT_DEFINITION`\n *   `FRAGMENT_SPREAD`\n *   `INLINE_FRAGMENT`\n *\n * TypeSystemDirectiveLocation : one of\n *   `SCHEMA`\n *   `SCALAR`\n *   `OBJECT`\n *   `FIELD_DEFINITION`\n *   `ARGUMENT_DEFINITION`\n *   `INTERFACE`\n *   `UNION`\n *   `ENUM`\n *   `ENUM_VALUE`\n *   `INPUT_OBJECT`\n *   `INPUT_FIELD_DEFINITION`\n */\nfunction parseDirectiveLocation(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n  if (_directiveLocation.DirectiveLocation.hasOwnProperty(name.value)) {\n    return name;\n  }\n  throw unexpected(lexer, start);\n}\n\n// Core parsing utility functions\n\n/**\n * Returns a location object, used to identify the place in\n * the source that created a given parsed object.\n */\nfunction loc(lexer, startToken) {\n  if (!lexer.options.noLocation) {\n    return new Loc(startToken, lexer.lastToken, lexer.source);\n  }\n}\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nLoc.prototype.toJSON = Loc.prototype.inspect = function toJSON() {\n  return { start: this.start, end: this.end };\n};\n\n/**\n * Determines if the next token is of a given kind\n */\nfunction peek(lexer, kind) {\n  return lexer.token.kind === kind;\n}\n\n/**\n * If the next token is of the given kind, return true after advancing\n * the lexer. Otherwise, do not change the parser state and return false.\n */\nfunction skip(lexer, kind) {\n  var match = lexer.token.kind === kind;\n  if (match) {\n    lexer.advance();\n  }\n  return match;\n}\n\n/**\n * If the next token is of the given kind, return that token after advancing\n * the lexer. Otherwise, do not change the parser state and throw an error.\n */\nfunction expect(lexer, kind) {\n  var token = lexer.token;\n  if (token.kind === kind) {\n    lexer.advance();\n    return token;\n  }\n  throw (0, _error.syntaxError)(lexer.source, token.start, 'Expected ' + kind + ', found ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * If the next token is a keyword with the given value, return that token after\n * advancing the lexer. Otherwise, do not change the parser state and return\n * false.\n */\nfunction expectKeyword(lexer, value) {\n  var token = lexer.token;\n  if (token.kind === _lexer.TokenKind.NAME && token.value === value) {\n    lexer.advance();\n    return token;\n  }\n  throw (0, _error.syntaxError)(lexer.source, token.start, 'Expected \"' + value + '\", found ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * Helper function for creating an error when an unexpected lexed token\n * is encountered.\n */\nfunction unexpected(lexer, atToken) {\n  var token = atToken || lexer.token;\n  return (0, _error.syntaxError)(lexer.source, token.start, 'Unexpected ' + (0, _lexer.getTokenDesc)(token));\n}\n\n/**\n * Returns a possibly empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction any(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}\n\n/**\n * Returns a non-empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction many(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [parseFn(lexer)];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.visitWithTypeInfo = visitWithTypeInfo;\nexports.getVisitFn = getVisitFn;\n\n\n/**\n * A visitor is comprised of visit functions, which are called on each node\n * during the visitor's traversal.\n */\n\n\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar QueryDocumentKeys = exports.QueryDocumentKeys = {\n  Name: [],\n\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name',\n  // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n\n  Directive: ['name', 'arguments'],\n\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations']\n};\n\n/**\n * A KeyMap describes each the traversable properties of each kind of node.\n */\nvar BREAK = exports.BREAK = {};\n\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n          for (var k in node) {\n            if (node.hasOwnProperty(k)) {\n              clone[k] = node[k];\n            }\n          }\n          node = clone;\n        }\n        var editOffset = 0;\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n          if (inArray) {\n            editKey -= editOffset;\n          }\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n      if (node === null || node === undefined) {\n        continue;\n      }\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + JSON.stringify(node));\n      }\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = { inArray: inArray, index: index, keys: keys, edits: edits, prev: stack };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */false);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */true);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */false);\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n        if (result !== undefined) {\n          typeInfo.leave(node);\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */true);\n      var result = void 0;\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n      var specificKindVisitor = specificVisitor[kind];\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require('./visitor');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, { leave: printDocASTReducer });\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n\n  // Document\n\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet;\n    // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n\n\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n\n  // Fragments\n\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (\n      // Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      'fragment ' + name + wrap('(', join(variableDefinitions, ', '), ')') + ' ' + ('on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n\n  // Value\n\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return JSON.stringify(value);\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n\n  // Directive\n\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n\n  // Type\n\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n\n  // Type System Definitions\n\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n\n  ScalarTypeDefinition: function ScalarTypeDefinition(_ref22) {\n    var description = _ref22.description,\n        name = _ref22.name,\n        directives = _ref22.directives;\n    return join([description, join(['scalar', name, join(directives, ' ')], ' ')], '\\n');\n  },\n\n  ObjectTypeDefinition: function ObjectTypeDefinition(_ref23) {\n    var description = _ref23.description,\n        name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join([description, join(['type', name, wrap('implements ', join(interfaces, ', ')), join(directives, ' '), block(fields)], ' ')], '\\n');\n  },\n\n  FieldDefinition: function FieldDefinition(_ref24) {\n    var description = _ref24.description,\n        name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return join([description, name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '))], '\\n');\n  },\n\n  InputValueDefinition: function InputValueDefinition(_ref25) {\n    var description = _ref25.description,\n        name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([description, join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ')], '\\n');\n  },\n\n  InterfaceTypeDefinition: function InterfaceTypeDefinition(_ref26) {\n    var description = _ref26.description,\n        name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join([description, join(['interface', name, join(directives, ' '), block(fields)], ' ')], '\\n');\n  },\n\n  UnionTypeDefinition: function UnionTypeDefinition(_ref27) {\n    var description = _ref27.description,\n        name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join([description, join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ')], '\\n');\n  },\n\n  EnumTypeDefinition: function EnumTypeDefinition(_ref28) {\n    var description = _ref28.description,\n        name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join([description, join(['enum', name, join(directives, ' '), block(values)], ' ')], '\\n');\n  },\n\n  EnumValueDefinition: function EnumValueDefinition(_ref29) {\n    var description = _ref29.description,\n        name = _ref29.name,\n        directives = _ref29.directives;\n    return join([description, join([name, join(directives, ' ')], ' ')], '\\n');\n  },\n\n  InputObjectTypeDefinition: function InputObjectTypeDefinition(_ref30) {\n    var description = _ref30.description,\n        name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join([description, join(['input', name, join(directives, ' '), block(fields)], ' ')], '\\n');\n  },\n\n  ScalarTypeExtension: function ScalarTypeExtension(_ref31) {\n    var name = _ref31.name,\n        directives = _ref31.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n\n  ObjectTypeExtension: function ObjectTypeExtension(_ref32) {\n    var name = _ref32.name,\n        interfaces = _ref32.interfaces,\n        directives = _ref32.directives,\n        fields = _ref32.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ', ')), join(directives, ' '), block(fields)], ' ');\n  },\n\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives,\n        fields = _ref33.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  UnionTypeExtension: function UnionTypeExtension(_ref34) {\n    var name = _ref34.name,\n        directives = _ref34.directives,\n        types = _ref34.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n\n  EnumTypeExtension: function EnumTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        values = _ref35.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        fields = _ref36.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  DirectiveDefinition: function DirectiveDefinition(_ref37) {\n    var description = _ref37.description,\n        name = _ref37.name,\n        args = _ref37.arguments,\n        locations = _ref37.locations;\n    return join([description, 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ')], '\\n');\n  }\n};\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n  return array && array.length !== 0 ? indent('{\\n' + join(array, '\\n')) + '\\n}' : '';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && maybeString.replace(/\\n/g, '\\n  ');\n}\n\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription) {\n  return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1 ? '\"\"\"' + value.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"' : isDescription ? '\"\"\"\\n' + value.replace(/\"\"\"/g, '\\\\\"\"\"') + '\\n\"\"\"' : indent('\"\"\"\\n' + value.replace(/\"\"\"/g, '\\\\\"\"\"')) + '\\n\"\"\"';\n}","import { parse } from 'graphql/language/parser';\nimport { print } from 'graphql/language/printer';\n\n/**\n * Capitalizes the first letter of the given string.\n *\n * @param {string} input\n * @returns {string}\n */\nexport function upcaseFirstLetter (input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1);\n}\n\n/**\n * Down cases the first letter of the given string.\n *\n * @param {string} input\n * @returns {string}\n */\nexport function downcaseFirstLetter (input: string) {\n  return input.charAt(0).toLowerCase() + input.slice(1);\n}\n\n/**\n * Takes a string with a graphql query and formats it. Useful for debug output and the tests.\n * @param {string} query\n * @returns {string}\n */\nexport function prettify (query: string): string {\n  return print(parse(query));\n}\n\n/**\n * Tells if a object is just a simple object.\n *\n * @param {any} value - Value to check.\n */\nexport function isPlainObject(value: any): boolean {\n  if (!(typeof value === 'object' && value !== null) || value.toString() !== '[object Object]') {\n    return false;\n  }\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n  let proto = value;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(value) === proto;\n}\n\n\n/**\n * Creates an object composed of the picked `object` properties.\n * @param {object} object - Object.\n * @param {array} props - Properties to pick.\n */\nexport function pick(object: any, props: Array<string>) {\n  if (!object) {\n    return {};\n  }\n\n  let index = -1;\n  const length = props.length;\n  const result = {};\n\n  while (++index < length) {\n    const prop = props[index];\n    result[prop] = object[prop];\n  }\n\n  return result;\n}\n\n\nexport function isEqual(a: object, b: object) {\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\n\nexport function clone(input: any): any {\n  JSON.parse(JSON.stringify(input));\n}\n\nexport function takeWhile(array: Array<any>, predicate: (x: any, idx: number, array: Array<any>) => any) {\n  let index = -1;\n\n  while (++index < array.length && predicate(array[index], index, array)) {\n    // just increase index\n  }\n\n  return array.slice(0, index);\n}\n\nexport function matches(source: any) {\n  source = clone(source);\n\n  return (object: any) => isEqual(object, source);\n}\n","import { DocumentNode } from \"graphql\";\nimport { Arguments } from \"../support/interfaces\";\nimport { FetchPolicy } from \"apollo-client\";\nimport { isPlainObject, prettify } from \"../support/utils\";\n\n/**\n * Vuex-ORM-Apollo Debug Logger.\n * Wraps console and only logs if enabled.\n *\n * Also contains some methods to format graphql queries for the output\n */\nexport default class Logger {\n  /**\n   * Tells if any logging should happen\n   * @type {boolean}\n   */\n  private readonly enabled: boolean;\n\n  /**\n   * Fancy Vuex-ORM-Apollo prefix for all log messages.\n   * @type {string[]}\n   */\n  private readonly PREFIX = [\n    \"%c Vuex-ORM: GraphQL Plugin %c\",\n    \"background: #35495e; padding: 1px 0; border-radius: 3px; color: #eee;\",\n    \"background: transparent;\"\n  ];\n\n  /**\n   * @constructor\n   * @param {boolean} enabled Tells if any logging should happen\n   */\n  public constructor(enabled: boolean) {\n    this.enabled = enabled;\n    this.log(\"Logging is enabled.\");\n  }\n\n  /**\n   * Wraps console.group. In TEST env console.log is used instead because console.group doesn't work on CLI.\n   * If available console.groupCollapsed will be used instead.\n   * @param {Array<any>} messages\n   */\n  public group(...messages: Array<any>): void {\n    if (this.enabled) {\n      if (console.groupCollapsed) {\n        console.groupCollapsed(...this.PREFIX, ...messages);\n      } else {\n        console.log(...this.PREFIX, ...messages);\n      }\n    }\n  }\n\n  /**\n   * Wrapper for console.groupEnd. In TEST env nothing happens because console.groupEnd doesn't work on CLI.\n   */\n  public groupEnd(): void {\n    if (this.enabled && console.groupEnd) console.groupEnd();\n  }\n\n  /**\n   * Wrapper for console.log.\n   * @param {Array<any>} messages\n   */\n  public log(...messages: Array<any>): void {\n    if (this.enabled) {\n      console.log(...this.PREFIX, ...messages);\n    }\n  }\n\n  /**\n   * Wrapper for console.warn.\n   * @param {Array<any>} messages\n   */\n  public warn(...messages: Array<any>): void {\n    if (this.enabled) {\n      console.warn(...this.PREFIX, ...messages);\n    }\n  }\n\n  /**\n   * Logs a graphql query in a readable format and with all information like fetch policy and variables.\n   * @param {string | DocumentNode} query\n   * @param {Arguments} variables\n   * @param {FetchPolicy} fetchPolicy\n   */\n  public logQuery(query: string | DocumentNode, variables?: Arguments, fetchPolicy?: FetchPolicy) {\n    if (this.enabled) {\n      try {\n        let prettified = \"\";\n        if (isPlainObject(query) && (query as DocumentNode).loc) {\n          prettified = prettify((query as DocumentNode).loc!.source.body);\n        } else {\n          prettified = prettify(query as string);\n        }\n\n        this.group(\n          \"Sending query:\",\n          prettified\n            .split(\"\\n\")[1]\n            .replace(\"{\", \"\")\n            .trim()\n        );\n        console.log(prettified);\n\n        if (variables) console.log(\"VARIABLES:\", variables);\n        if (fetchPolicy) console.log(\"FETCH POLICY:\", fetchPolicy);\n\n        this.groupEnd();\n      } catch (e) {\n        console.error(\"[Vuex-ORM-Apollo] There is a syntax error in the query!\", e, query);\n      }\n    }\n  }\n}\n","import { Model as ORMModel } from \"@vuex-orm/core\";\nimport { Field } from \"../support/interfaces\";\nimport Context from \"../common/context\";\nimport { Mock, MockOptions } from \"../test-utils\";\nimport { pick, isEqual } from \"../support/utils\";\nconst inflection = require(\"inflection\");\n\n/**\n * Wrapper around a Vuex-ORM model with some useful methods.\n *\n * Also provides a mock system, to define mocking responses for actions.\n */\nexport default class Model {\n  /**\n   * The singular name of a model like `blogPost`\n   * @type {string}\n   */\n  public readonly singularName: string;\n\n  /**\n   * The plural name of a model like `blogPosts`\n   * @type {string}\n   */\n  public readonly pluralName: string;\n\n  /**\n   * The original Vuex-ORM model\n   */\n  public readonly baseModel: ORMModel;\n\n  /**\n   * The fields of the model\n   * @type {Map<string, Field>}\n   */\n  public readonly fields: Map<string, Field> = new Map<string, Field>();\n\n  /**\n   * Container for the mocks.\n   * @type {Object}\n   */\n  private mocks: { [key: string]: Array<Mock> } = {};\n\n  /**\n   * @constructor\n   * @param {Model} baseModel The original Vuex-ORM model\n   */\n  public constructor(baseModel: ORMModel) {\n    this.baseModel = baseModel;\n\n    // Generate name variants\n    this.singularName = inflection.singularize(this.baseModel.entity);\n    this.pluralName = inflection.pluralize(this.baseModel.entity);\n\n    // Cache the fields of the model in this.fields\n    const fields = this.baseModel.fields();\n    Object.keys(fields).forEach((name: string) => {\n      this.fields.set(name, fields[name]);\n    });\n  }\n\n  /**\n   * Tells if a field is a numeric field.\n   *\n   * @param {Field | undefined} field\n   * @returns {boolean}\n   */\n  public static isFieldNumber(field: Field | undefined): boolean {\n    if (!field) return false;\n\n    const context = Context.getInstance();\n    return (\n      field instanceof context.components.Number || field instanceof context.components.Increment\n    );\n  }\n\n  /**\n   * Tells if a field is a attribute (and thus not a relation)\n   * @param {Field} field\n   * @returns {boolean}\n   */\n  public static isFieldAttribute(field: Field): boolean {\n    const context = Context.getInstance();\n\n    return (\n      field instanceof context.components.Increment ||\n      field instanceof context.components.Attr ||\n      field instanceof context.components.String ||\n      field instanceof context.components.Number ||\n      field instanceof context.components.Boolean\n    );\n  }\n\n  /**\n   * Tells if a field which represents a relation is a connection (multiple).\n   * @param {Field} field\n   * @returns {boolean}\n   */\n  public static isConnection(field: Field): boolean {\n    const context = Context.getInstance();\n\n    return !(\n      field instanceof context.components.BelongsTo ||\n      field instanceof context.components.HasOne ||\n      field instanceof context.components.MorphTo ||\n      field instanceof context.components.MorphOne\n    );\n  }\n\n  /**\n   * Adds $isPersisted and other meta fields to the model by overwriting the fields() method.\n   * @todo is this a good way to add fields?\n   * @param {Model} model\n   */\n  public static augment(model: Model) {\n    const originalFieldGenerator = model.baseModel.fields.bind(model.baseModel);\n\n    model.baseModel.fields = () => {\n      const originalFields = originalFieldGenerator();\n\n      originalFields[\"$isPersisted\"] = model.baseModel.boolean(false);\n\n      return originalFields;\n    };\n  }\n\n  /**\n   * Returns all fields which should be included in a graphql query: All attributes which are not included in the\n   * skipFields array or start with $.\n   * @returns {Array<string>} field names which should be queried\n   */\n  public getQueryFields(): Array<string> {\n    const fields: Array<string> = [];\n\n    this.fields.forEach((field: Field, name: string) => {\n      if (Model.isFieldAttribute(field) && !this.skipField(name)) {\n        fields.push(name);\n      }\n    });\n\n    return fields;\n  }\n\n  /**\n   * Tells if a field should be ignored. This is true for fields that start with a `$` or is it is within the skipField\n   * property or is the foreignKey of a belongsTo/hasOne relation.\n   *\n   * @param {string} field\n   * @returns {boolean}\n   */\n  public skipField(field: string) {\n    if (field.startsWith(\"$\")) return true;\n    if (this.baseModel.skipFields && this.baseModel.skipFields.indexOf(field) >= 0) return true;\n\n    const context = Context.getInstance();\n\n    let shouldSkipField: boolean = false;\n\n    this.getRelations().forEach((relation: Field) => {\n      if (\n        (relation instanceof context.components.BelongsTo ||\n          relation instanceof context.components.HasOne) &&\n        relation.foreignKey === field\n      ) {\n        shouldSkipField = true;\n        return false;\n      }\n      return true;\n    });\n\n    return shouldSkipField;\n  }\n\n  /**\n   * @returns {Map<string, Field>} all relations of the model which should be included in a graphql query\n   */\n  public getRelations(): Map<string, Field> {\n    const relations = new Map<string, Field>();\n\n    this.fields.forEach((field: Field, name: string) => {\n      if (!Model.isFieldAttribute(field)) {\n        relations.set(name, field);\n      }\n    });\n\n    return relations;\n  }\n\n  /**\n   * This accepts a field like `subjectType` and checks if this is just randomly named `...Type` or it is part\n   * of a polymorphic relation.\n   * @param {string} name\n   * @returns {boolean}\n   */\n  public isTypeFieldOfPolymorphicRelation(name: string): boolean {\n    const context = Context.getInstance();\n    let found: boolean = false;\n\n    context.models.forEach(model => {\n      if (found) return false;\n\n      model.getRelations().forEach(relation => {\n        if (\n          relation instanceof context.components.MorphMany ||\n          relation instanceof context.components.MorphedByMany ||\n          relation instanceof context.components.MorphOne ||\n          relation instanceof context.components.MorphTo ||\n          relation instanceof context.components.MorphToMany\n        ) {\n          if (\n            relation.type === name &&\n            relation.related &&\n            relation.related.entity === this.baseModel.entity\n          ) {\n            found = true;\n            return false;\n          }\n        }\n\n        return true;\n      });\n\n      return true;\n    });\n\n    return found;\n  }\n\n  /**\n   * Returns a record of this model with the given ID.\n   * @param {number} id\n   * @returns {any}\n   */\n  public getRecordWithId(id: number) {\n    return this.baseModel\n      .query()\n      .withAllRecursive()\n      .where(\"id\", id)\n      .first();\n  }\n\n  /**\n   * Determines if we should eager load (means: add as a field in the graphql query) a related entity. belongsTo or\n   * hasOne related entities are always eager loaded. Others can be added to the `eagerLoad` array of the model.\n   *\n   * @param {string} fieldName Name of the field\n   * @param {Field} field Relation field\n   * @param {Model} relatedModel Related model\n   * @returns {boolean}\n   */\n  public shouldEagerLoadRelation(fieldName: string, field: Field, relatedModel: Model): boolean {\n    const context = Context.getInstance();\n\n    if (\n      field instanceof context.components.HasOne ||\n      field instanceof context.components.BelongsTo ||\n      field instanceof context.components.MorphOne\n    ) {\n      return true;\n    }\n\n    const eagerLoadList: Array<String> = this.baseModel.eagerLoad || [];\n    return (\n      eagerLoadList.find(n => {\n        return n === relatedModel.singularName || n === relatedModel.pluralName || n === fieldName;\n      }) !== undefined\n    );\n  }\n\n  /**\n   * Adds a mock.\n   *\n   * @param {Mock} mock - Mock config.\n   * @returns {boolean}\n   */\n  public $addMock(mock: Mock): boolean {\n    if (this.$findMock(mock.action, mock.options)) return false;\n    if (!this.mocks[mock.action]) this.mocks[mock.action] = [];\n\n    this.mocks[mock.action].push(mock);\n    return true;\n  }\n\n  /**\n   * Finds a mock for the given action and options.\n   *\n   * @param {string} action - Name of the action like 'fetch'.\n   * @param {MockOptions} options - MockOptions like { variables: { id: 42 } }.\n   * @returns {Mock | null} null when no mock was found.\n   */\n  public $findMock(action: string, options: MockOptions | undefined): Mock | null {\n    if (this.mocks[action]) {\n      return (\n        this.mocks[action].find(m => {\n          if (!m.options || !options) return true;\n\n          const relevantOptions = pick(options, Object.keys(m.options));\n          return isEqual(relevantOptions, m.options || {});\n        }) || null\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Hook to be called by all actions in order to get the mock returnValue.\n   *\n   * @param {string} action - Name of the action like 'fetch'.\n   * @param {MockOptions} options - MockOptions.\n   * @returns {any} null when no mock was found.\n   */\n  public $mockHook(action: string, options: MockOptions): any {\n    let returnValue: null | { [key: string]: any } = null;\n    const mock = this.$findMock(action, options);\n\n    if (mock) {\n      if (mock.returnValue instanceof Function) {\n        returnValue = mock.returnValue();\n      } else {\n        returnValue = mock.returnValue || null;\n      }\n    }\n\n    if (returnValue) {\n      if (returnValue instanceof Array) {\n        returnValue.forEach(r => (r.$isPersisted = true));\n      } else {\n        returnValue.$isPersisted = true;\n      }\n\n      return { [this.pluralName]: returnValue };\n    }\n\n    return null;\n  }\n}\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","import {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n} from 'graphql';\n\nimport stringify from 'fast-json-stable-stringify';\n\nexport interface IdValue {\n  type: 'id';\n  id: string;\n  generated: boolean;\n  typename: string | undefined;\n}\n\nexport interface JsonValue {\n  type: 'json';\n  json: any;\n}\n\nexport type ListValue = Array<null | IdValue>;\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | IdValue\n  | ListValue\n  | JsonValue\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport type ScalarValue = StringValueNode | BooleanValueNode | EnumValueNode;\n\nexport function isScalarValue(value: ValueNode): value is ScalarValue {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nexport type NumberValue = IntValueNode | FloatValueNode;\n\nexport function isNumberValue(value: ValueNode): value is NumberValue {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new Error(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport function getStoreKeyName(\n  fieldName: string,\n  args?: Object,\n  directives?: Directives,\n): string {\n  if (\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const queryArgs = args as { [key: string]: any };\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = queryArgs[key];\n      });\n\n      return `${directives['connection']['key']}(${JSON.stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${JSON.stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables: Object,\n): Object {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport function isIdValue(idObject: StoreValue): idObject is IdValue {\n  return idObject && (idObject as IdValue | JsonValue).type === 'id';\n}\n\nexport type IdConfig = {\n  id: string;\n  typename: string | undefined;\n};\n\nexport function toIdValue(\n  idConfig: string | IdConfig,\n  generated = false,\n): IdValue {\n  return {\n    type: 'id',\n    generated,\n    ...(typeof idConfig === 'string'\n      ? { id: idConfig, typename: undefined }\n      : idConfig),\n  };\n}\n\nexport function isJsonValue(jsonObject: StoreValue): jsonObject is JsonValue {\n  return (\n    jsonObject != null &&\n    typeof jsonObject === 'object' &&\n    (jsonObject as IdValue | JsonValue).type === 'json'\n  );\n}\n\nfunction defaultValueFromVariable(node: VariableNode) {\n  throw new Error(`Variable nodes are not supported by valueFromNode`);\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(\n  node: ValueNode,\n  onVariable: VariableValue = defaultValueFromVariable,\n): any {\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n    case 'NullValue':\n      return null;\n    case 'IntValue':\n      return parseInt(node.value, 10);\n    case 'FloatValue':\n      return parseFloat(node.value);\n    case 'ListValue':\n      return node.values.map(v => valueFromNode(v, onVariable));\n    case 'ObjectValue': {\n      const value: { [key: string]: any } = {};\n      for (const field of node.fields) {\n        value[field.name.value] = valueFromNode(field.value, onVariable);\n      }\n      return value;\n    }\n    default:\n      return node.value;\n  }\n}\n","// Provides the methods that allow QueryManager to handle\r\n// the `skip` and `include` directives within GraphQL.\r\nimport {\r\n  FieldNode,\r\n  OperationDefinitionNode,\r\n  SelectionNode,\r\n  VariableNode,\r\n  BooleanValueNode,\r\n  DirectiveNode,\r\n  DocumentNode,\r\n} from 'graphql';\r\n\r\nimport { argumentsObjectFromField } from './storeUtils';\r\n\r\nexport type DirectiveInfo = {\r\n  [fieldName: string]: { [argName: string]: any };\r\n};\r\n\r\nexport function getDirectiveInfoFromField(\r\n  field: FieldNode,\r\n  variables: Object,\r\n): DirectiveInfo {\r\n  if (field.directives && field.directives.length) {\r\n    const directiveObj: DirectiveInfo = {};\r\n    field.directives.forEach((directive: DirectiveNode) => {\r\n      directiveObj[directive.name.value] = argumentsObjectFromField(\r\n        directive,\r\n        variables,\r\n      );\r\n    });\r\n    return directiveObj;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function shouldInclude(\r\n  selection: SelectionNode,\r\n  variables: { [name: string]: any } = {},\r\n): boolean {\r\n  if (!selection.directives) {\r\n    return true;\r\n  }\r\n\r\n  let res: boolean = true;\r\n  selection.directives.forEach(directive => {\r\n    // TODO should move this validation to GraphQL validation once that's implemented.\r\n    if (directive.name.value !== 'skip' && directive.name.value !== 'include') {\r\n      // Just don't worry about directives we don't understand\r\n      return;\r\n    }\r\n\r\n    //evaluate the \"if\" argument and skip (i.e. return undefined) if it evaluates to true.\r\n    const directiveArguments = directive.arguments || [];\r\n    const directiveName = directive.name.value;\r\n    if (directiveArguments.length !== 1) {\r\n      throw new Error(\r\n        `Incorrect number of arguments for the @${directiveName} directive.`,\r\n      );\r\n    }\r\n\r\n    const ifArgument = directiveArguments[0];\r\n    if (!ifArgument.name || ifArgument.name.value !== 'if') {\r\n      throw new Error(`Invalid argument for the @${directiveName} directive.`);\r\n    }\r\n\r\n    const ifValue = directiveArguments[0].value;\r\n    let evaledValue: boolean = false;\r\n    if (!ifValue || ifValue.kind !== 'BooleanValue') {\r\n      // means it has to be a variable value if this is a valid @skip or @include directive\r\n      if (ifValue.kind !== 'Variable') {\r\n        throw new Error(\r\n          `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\r\n        );\r\n      } else {\r\n        evaledValue = variables[(ifValue as VariableNode).name.value];\r\n        if (evaledValue === undefined) {\r\n          throw new Error(\r\n            `Invalid variable referenced in @${directiveName} directive.`,\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      evaledValue = (ifValue as BooleanValueNode).value;\r\n    }\r\n\r\n    if (directiveName === 'skip') {\r\n      evaledValue = !evaledValue;\r\n    }\r\n\r\n    if (!evaledValue) {\r\n      res = false;\r\n    }\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nexport function flattenSelections(selection: SelectionNode): SelectionNode[] {\r\n  if (\r\n    !(selection as FieldNode).selectionSet ||\r\n    !((selection as FieldNode).selectionSet.selections.length > 0)\r\n  )\r\n    return [selection];\r\n\r\n  return [selection].concat(\r\n    (selection as FieldNode).selectionSet.selections\r\n      .map(selectionNode =>\r\n        [selectionNode].concat(flattenSelections(selectionNode)),\r\n      )\r\n      .reduce((selections, selected) => selections.concat(selected), []),\r\n  );\r\n}\r\n\r\nexport function getDirectiveNames(doc: DocumentNode) {\r\n  // operation => [names of directives];\r\n  const directiveNames = doc.definitions\r\n    .filter(\r\n      (definition: OperationDefinitionNode) =>\r\n        definition.selectionSet && definition.selectionSet.selections,\r\n    )\r\n    // operation => [[Selection]]\r\n    .map(x => flattenSelections(x as any))\r\n    // [[Selection]] => [Selection]\r\n    .reduce((selections, selected) => selections.concat(selected), [])\r\n    // [Selection] => [Selection with Directives]\r\n    .filter(\r\n      (selection: SelectionNode) =>\r\n        selection.directives && selection.directives.length > 0,\r\n    )\r\n    // [Selection with Directives] => [[Directives]]\r\n    .map((selection: SelectionNode) => selection.directives)\r\n    // [[Directives]] => [Directives]\r\n    .reduce((directives, directive) => directives.concat(directive), [])\r\n    // [Directives] => [Name]\r\n    .map((directive: DirectiveNode) => directive.name.value);\r\n  return directiveNames;\r\n}\r\n\r\nexport function hasDirectives(names: string[], doc: DocumentNode) {\r\n  return getDirectiveNames(doc).some(\r\n    (name: string) => names.indexOf(name) > -1,\r\n  );\r\n}\r\n","import { DocumentNode, FragmentDefinitionNode } from 'graphql';\r\n\r\n/**\r\n * Returns a query document which adds a single query operation that only\r\n * spreads the target fragment inside of it.\r\n *\r\n * So for example a document of:\r\n *\r\n * ```graphql\r\n * fragment foo on Foo { a b c }\r\n * ```\r\n *\r\n * Turns into:\r\n *\r\n * ```graphql\r\n * { ...foo }\r\n *\r\n * fragment foo on Foo { a b c }\r\n * ```\r\n *\r\n * The target fragment will either be the only fragment in the document, or a\r\n * fragment specified by the provided `fragmentName`. If there is more then one\r\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\r\n */\r\nexport function getFragmentQueryDocument(\r\n  document: DocumentNode,\r\n  fragmentName?: string,\r\n): DocumentNode {\r\n  let actualFragmentName = fragmentName;\r\n\r\n  // Build an array of all our fragment definitions that will be used for\r\n  // validations. We also do some validations on the other definitions in the\r\n  // document while building this list.\r\n  const fragments: Array<FragmentDefinitionNode> = [];\r\n  document.definitions.forEach(definition => {\r\n    // Throw an error if we encounter an operation definition because we will\r\n    // define our own operation definition later on.\r\n    if (definition.kind === 'OperationDefinition') {\r\n      throw new Error(\r\n        `Found a ${definition.operation} operation${\r\n          definition.name ? ` named '${definition.name.value}'` : ''\r\n        }. ` +\r\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\r\n      );\r\n    }\r\n    // Add our definition to the fragments array if it is a fragment\r\n    // definition.\r\n    if (definition.kind === 'FragmentDefinition') {\r\n      fragments.push(definition);\r\n    }\r\n  });\r\n\r\n  // If the user did not give us a fragment name then let us try to get a\r\n  // name from a single fragment in the definition.\r\n  if (typeof actualFragmentName === 'undefined') {\r\n    if (fragments.length !== 1) {\r\n      throw new Error(\r\n        `Found ${\r\n          fragments.length\r\n        } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\r\n      );\r\n    }\r\n    actualFragmentName = fragments[0].name.value;\r\n  }\r\n\r\n  // Generate a query document with an operation that simply spreads the\r\n  // fragment inside of it.\r\n  const query: DocumentNode = {\r\n    ...document,\r\n    definitions: [\r\n      {\r\n        kind: 'OperationDefinition',\r\n        operation: 'query',\r\n        selectionSet: {\r\n          kind: 'SelectionSet',\r\n          selections: [\r\n            {\r\n              kind: 'FragmentSpread',\r\n              name: {\r\n                kind: 'Name',\r\n                value: actualFragmentName,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      ...document.definitions,\r\n    ],\r\n  };\r\n\r\n  return query;\r\n}\r\n","/**\r\n * Adds the properties of one or more source objects to a target object. Works exactly like\r\n * `Object.assign`, but as a utility to maintain support for IE 11.\r\n *\r\n * @see https://github.com/apollostack/apollo-client/pull/1009\r\n */\r\nexport function assign<A, B>(a: A, b: B): A & B;\r\nexport function assign<A, B, C>(a: A, b: B, c: C): A & B & C;\r\nexport function assign<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;\r\nexport function assign<A, B, C, D, E>(\r\n  a: A,\r\n  b: B,\r\n  c: C,\r\n  d: D,\r\n  e: E,\r\n): A & B & C & D & E;\r\nexport function assign(target: any, ...sources: Array<any>): any;\r\nexport function assign(\r\n  target: { [key: string]: any },\r\n  ...sources: Array<{ [key: string]: any }>\r\n): { [key: string]: any } {\r\n  sources.forEach(source => {\r\n    if (typeof source === 'undefined' || source === null) {\r\n      return;\r\n    }\r\n    Object.keys(source).forEach(key => {\r\n      target[key] = source[key];\r\n    });\r\n  });\r\n  return target;\r\n}\r\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\nimport { assign } from './util/assign';\n\nimport { valueToObjectRepresentation, JsonValue } from './storeUtils';\n\nexport function getMutationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode {\n  checkDocument(doc);\n\n  let mutationDef: OperationDefinitionNode | null = doc.definitions.filter(\n    definition =>\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'mutation',\n  )[0] as OperationDefinitionNode;\n\n  if (!mutationDef) {\n    throw new Error('Must contain a mutation definition.');\n  }\n\n  return mutationDef;\n}\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  if (doc.kind !== 'Document') {\n    throw new Error(`Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`);\n  }\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new Error(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  if (operations.length > 1) {\n    throw new Error(\n      `Ambiguous GraphQL document: contains ${operations.length} operations`,\n    );\n  }\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationDefinitionOrDie(\n  document: DocumentNode,\n): OperationDefinitionNode {\n  const def = getOperationDefinition(document);\n  if (!def) {\n    throw new Error(`GraphQL document is missing an operation`);\n  }\n  return def;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  if (!queryDef || queryDef.operation !== 'query') {\n    throw new Error('Must contain a query definition.');\n  }\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  if (doc.kind !== 'Document') {\n    throw new Error(`Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`);\n  }\n\n  if (doc.definitions.length > 1) {\n    throw new Error('Fragment must have exactly one definition.');\n  }\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  if (fragmentDef.kind !== 'FragmentDefinition') {\n    throw new Error('Must be a fragment definition.');\n  }\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new Error(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n\n  return symTable;\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): { [key: string]: JsonValue } {\n  if (\n    definition &&\n    definition.variableDefinitions &&\n    definition.variableDefinitions.length\n  ) {\n    const defaultValues = definition.variableDefinitions\n      .filter(({ defaultValue }) => defaultValue)\n      .map(\n        ({ variable, defaultValue }): { [key: string]: JsonValue } => {\n          const defaultValueObj: { [key: string]: JsonValue } = {};\n          valueToObjectRepresentation(\n            defaultValueObj,\n            variable.name,\n            defaultValue as ValueNode,\n          );\n\n          return defaultValueObj;\n        },\n      );\n\n    return assign({}, ...defaultValues);\n  }\n\n  return {};\n}\n\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(\n  operation: OperationDefinitionNode,\n): Set<string> {\n  const names = new Set<string>();\n  if (operation.variableDefinitions) {\n    for (const definition of operation.variableDefinitions) {\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define('fclone', [], factory);\n    } else if (typeof module === 'object' && module.exports) {\n\t\t\t  //node\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.fclone = factory();\n    }\n}(this, function () {\n  'use strict';\n\n// see if it looks and smells like an iterable object, and do accept length === 0\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) return true;\n\n  var len = item && item.length;\n  return typeof len === 'number' && (len === 0 || len - 1 in item) && typeof item.indexOf === 'function';\n}\n\nfunction fclone(obj, refs) {\n  if (!obj || \"object\" !== (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) return obj;\n\n  if (obj instanceof Date) {\n    return new Date(obj);\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(obj)) {\n    return new Buffer(obj);\n  }\n\n  // typed array Int32Array etc.\n  if (typeof obj.subarray === 'function' && /[A-Z][A-Za-z\\d]+Array/.test(Object.prototype.toString.call(obj))) {\n    return obj.subarray(0);\n  }\n\n  if (!refs) {\n    refs = [];\n  }\n\n  if (isArrayLike(obj)) {\n    refs[refs.length] = obj;\n    var _l = obj.length;\n    var i = -1;\n    var _copy = [];\n\n    while (_l > ++i) {\n      _copy[i] = ~refs.indexOf(obj[i]) ? '[Circular]' : fclone(obj[i], refs);\n    }\n\n    refs.length && refs.length--;\n    return _copy;\n  }\n\n  refs[refs.length] = obj;\n  var copy = {};\n\n  if (obj instanceof Error) {\n    copy.name = obj.name;\n    copy.message = obj.message;\n    copy.stack = obj.stack;\n  }\n\n  var keys = Object.keys(obj);\n  var l = keys.length;\n\n  while (l--) {\n    var k = keys[l];\n    copy[k] = ~refs.indexOf(obj[k]) ? '[Circular]' : fclone(obj[k], refs);\n  }\n\n  refs.length && refs.length--;\n  return copy;\n}\n\nfclone.default = fclone;\n  return fclone\n}));","import fclone from 'fclone';\r\n\r\n/**\r\n * Deeply clones a value to create a new instance.\r\n */\r\nexport function cloneDeep<T>(value: T): T {\r\n  return fclone(value);\r\n}\r\n","import {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  DefinitionNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nimport { cloneDeep } from './util/cloneDeep';\n\nimport {\n  checkDocument,\n  getOperationDefinitionOrDie,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n} from './getFromAST';\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename',\n  },\n};\n\nfunction isNotEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): Boolean {\n  // keep selections that are still valid\n  return (\n    op.selectionSet.selections.filter(\n      selectionSet =>\n        // anything that doesn't match the compound filter is okay\n        !// not an empty array\n        (\n          selectionSet &&\n          // look into fragments to verify they should stay\n          selectionSet.kind === 'FragmentSpread' &&\n          // see if the fragment in the map is valid (recursively)\n          !isNotEmpty(fragments[selectionSet.name.value], fragments)\n        ),\n    ).length > 0\n  );\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode): Boolean {\n    return directives.some(\n      (dir: RemoveDirectiveConfig | GetDirectiveConfig) => {\n        if (dir.name && dir.name === directive.name.value) return true;\n        if (dir.test && dir.test(directive)) return true;\n        return false;\n      },\n    );\n  };\n}\n\nfunction addTypenameToSelectionSet(\n  selectionSet: SelectionSetNode,\n  isRoot = false,\n) {\n  if (selectionSet.selections) {\n    if (!isRoot) {\n      const alreadyHasThisField = selectionSet.selections.some(selection => {\n        return (\n          selection.kind === 'Field' &&\n          (selection as FieldNode).name.value === '__typename'\n        );\n      });\n\n      if (!alreadyHasThisField) {\n        selectionSet.selections.push(TYPENAME_FIELD);\n      }\n    }\n\n    selectionSet.selections.forEach(selection => {\n      // Must not add __typename if we're inside an introspection query\n      if (selection.kind === 'Field') {\n        if (\n          selection.name.value.lastIndexOf('__', 0) !== 0 &&\n          selection.selectionSet\n        ) {\n          addTypenameToSelectionSet(selection.selectionSet);\n        }\n      } else if (selection.kind === 'InlineFragment') {\n        if (selection.selectionSet) {\n          addTypenameToSelectionSet(selection.selectionSet);\n        }\n      }\n    });\n  }\n}\n\nexport type RemoveDirectiveConfig = {\n  name?: string;\n  test?: (directive: DirectiveNode) => boolean;\n  remove?: boolean;\n};\n\nfunction removeDirectivesFromSelectionSet(\n  directives: RemoveDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n): SelectionSetNode {\n  if (!selectionSet.selections) return selectionSet;\n  // if any of the directives are set to remove this selectionSet, remove it\n  const agressiveRemove = directives.some(\n    (dir: RemoveDirectiveConfig) => dir.remove,\n  );\n\n  selectionSet.selections = selectionSet.selections\n    .map(selection => {\n      if (\n        selection.kind !== 'Field' ||\n        !(selection as FieldNode) ||\n        !selection.directives\n      )\n        return selection;\n      const directiveMatcher = getDirectiveMatcher(directives);\n      let remove: boolean;\n      selection.directives = selection.directives.filter(directive => {\n        const shouldKeep = !directiveMatcher(directive);\n\n        if (!remove && !shouldKeep && agressiveRemove) remove = true;\n\n        return shouldKeep;\n      });\n\n      return remove ? null : selection;\n    })\n    .filter(x => !!x);\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n      selection.selectionSet\n    ) {\n      removeDirectivesFromSelectionSet(directives, selection.selectionSet);\n    }\n  });\n\n  return selectionSet;\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const docClone = cloneDeep(doc);\n\n  docClone.definitions.forEach((definition: DefinitionNode) => {\n    removeDirectivesFromSelectionSet(\n      directives,\n      (definition as OperationDefinitionNode).selectionSet,\n    );\n  });\n  const operation = getOperationDefinitionOrDie(docClone);\n  const fragments = createFragmentMap(getFragmentDefinitions(docClone));\n  return isNotEmpty(operation, fragments) ? docClone : null;\n}\n\nexport function addTypenameToDocument(doc: DocumentNode) {\n  checkDocument(doc);\n  const docClone = cloneDeep(doc);\n\n  docClone.definitions.forEach((definition: DefinitionNode) => {\n    const isRoot = definition.kind === 'OperationDefinition';\n    addTypenameToSelectionSet(\n      (definition as OperationDefinitionNode).selectionSet,\n      isRoot,\n    );\n  });\n  return docClone;\n}\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        console.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  checkDocument(doc);\n  return removeDirectivesFromDocument([connectionRemoveConfig], doc);\n}\n\nexport type GetDirectiveConfig = {\n  name?: string;\n  test?: (directive: DirectiveNode) => boolean;\n};\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n  nestedCheck = true,\n): boolean {\n  if (!(selectionSet && selectionSet.selections)) {\n    return false;\n  }\n  const matchedSelections = selectionSet.selections.filter(selection => {\n    return hasDirectivesInSelection(directives, selection, nestedCheck);\n  });\n  return matchedSelections.length > 0;\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (selection.kind !== 'Field' || !(selection as FieldNode)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n  const directiveMatcher = getDirectiveMatcher(directives);\n  const matchedDirectives = selection.directives.filter(directiveMatcher);\n  return (\n    matchedDirectives.length > 0 ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nfunction getDirectivesFromSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n) {\n  selectionSet.selections = selectionSet.selections\n    .filter(selection => {\n      return hasDirectivesInSelection(directives, selection, true);\n    })\n    .map(selection => {\n      if (hasDirectivesInSelection(directives, selection, false)) {\n        return selection;\n      }\n      if (\n        (selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n        selection.selectionSet\n      ) {\n        selection.selectionSet = getDirectivesFromSelectionSet(\n          directives,\n          selection.selectionSet,\n        );\n      }\n      return selection;\n    });\n  return selectionSet;\n}\n\nexport function getDirectivesFromDocument(\n  directives: GetDirectiveConfig[],\n  doc: DocumentNode,\n  includeAllFragments = false,\n): DocumentNode | null {\n  checkDocument(doc);\n  const docClone = cloneDeep(doc);\n  docClone.definitions = docClone.definitions.map(definition => {\n    if (\n      (definition.kind === 'OperationDefinition' ||\n        (definition.kind === 'FragmentDefinition' && !includeAllFragments)) &&\n      definition.selectionSet\n    ) {\n      definition.selectionSet = getDirectivesFromSelectionSet(\n        directives,\n        definition.selectionSet,\n      );\n    }\n    return definition;\n  });\n\n  const operation = getOperationDefinitionOrDie(docClone);\n  const fragments = createFragmentMap(getFragmentDefinitions(docClone));\n  return isNotEmpty(operation, fragments) ? docClone : null;\n}\n","export function getEnv(): string | undefined {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  // default environment\n  return 'development';\n}\n\nexport function isEnv(env: string): boolean {\n  return getEnv() === env;\n}\n\nexport function isProduction(): boolean {\n  return isEnv('production') === true;\n}\n\nexport function isDevelopment(): boolean {\n  return isEnv('development') === true;\n}\n\nexport function isTest(): boolean {\n  return isEnv('test') === true;\n}\n","import { ExecutionResult } from 'graphql';\n\nexport function tryFunctionOrLogError(f: Function) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nexport function graphQLResultHasError(result: ExecutionResult) {\n  return result.errors && result.errors.length;\n}\n","/**\n * Performs a deep equality check on two JavaScript values.\n */\nexport function isEqual(a: any, b: any): boolean {\n  // If the two values are strictly equal, we are good.\n  if (a === b) {\n    return true;\n  }\n  // Dates are equivalent if their time values are equal.\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  // If a and b are both objects, we will compare their properties. This will compare arrays as\n  // well.\n  if (\n    a != null &&\n    typeof a === 'object' &&\n    b != null &&\n    typeof b === 'object'\n  ) {\n    // Compare all of the keys in `a`. If one of the keys has a different value, or that key does\n    // not exist in `b` return false immediately.\n    for (const key in a) {\n      if (Object.prototype.hasOwnProperty.call(a, key)) {\n        if (!Object.prototype.hasOwnProperty.call(b, key)) {\n          return false;\n        }\n        if (!isEqual(a[key], b[key])) {\n          return false;\n        }\n      }\n    }\n    // Look through all the keys in `b`. If `b` has a key that `a` does not, return false.\n    for (const key in b) {\n      if (!Object.prototype.hasOwnProperty.call(a, key)) {\n        return false;\n      }\n    }\n    // If we made it this far the objects are equal!\n    return true;\n  }\n  // Otherwise the values are not equal.\n  return false;\n}\n","import { isProduction, isTest } from './environment';\n\nconst haveWarned = Object.create({});\n\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nexport function warnOnceInDevelopment(msg: string, type = 'warn') {\n  if (isProduction()) {\n    return;\n  }\n  if (!haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n    switch (type) {\n      case 'error':\n        console.error(msg);\n        break;\n      default:\n        console.warn(msg);\n    }\n  }\n}\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/core/networkStatus.ts"},"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[getSymbol('species')];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (sources.length === 0) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources.shift()));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: getSymbol('observable'),\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, getSymbol('observable'));\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, getSymbol('iterator'));\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: getSymbol('species'),\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: getSymbol('observable'),\n      hostReportError: hostReportError\n    },\n    configurabe: true\n  });\n}","module.exports = require('./lib/Observable.js').Observable;\n","/* tslint:disable */\n\nimport zenObservable from 'zen-observable';\n\nnamespace Observable {\n\n}\n\nimport { ZenObservable } from './types';\n\nexport { ZenObservable };\n\nexport type Observer<T> = ZenObservable.Observer<T>;\nexport type Subscriber<T> = ZenObservable.Subscriber<T>;\nexport type ObservableLike<T> = ZenObservable.ObservableLike<T>;\n\nexport const Observable: {\n  new <T>(subscriber: Subscriber<T>): Observable<T>;\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n} = <any>zenObservable;\n\nexport interface Observable<T> {\n  subscribe(\n    observerOrNext: ((value: T) => void) | ZenObservable.Observer<T>,\n    error?: (error: any) => void,\n    complete?: () => void,\n  ): ZenObservable.Subscription;\n\n  forEach(fn: (value: T) => void): Promise<void>;\n\n  map<R>(fn: (value: T) => R): Observable<R>;\n\n  filter(fn: (value: T) => boolean): Observable<T>;\n\n  reduce<R = T>(\n    fn: (previousValue: R | T, currentValue: T) => R | T,\n    initialValue?: R | T,\n  ): Observable<R | T>;\n\n  flatMap<R>(fn: (value: T) => ZenObservable.ObservableLike<R>): Observable<R>;\n\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n}\n","import { getOperationName } from 'apollo-utilities';\nimport Observable from 'zen-observable-ts';\nimport { print } from 'graphql/language/printer';\n\nimport { GraphQLRequest, Operation } from './types';\nimport { ApolloLink } from './link';\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new Error(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n\nexport class LinkError extends Error {\n  public link: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport function isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          console.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n\n// backwards compat\nexport const makePromise = toPromise;\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query)\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = next => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: () => getKey(operation),\n  });\n\n  return operation as Operation;\n}\n\nexport function getKey(operation: GraphQLRequest) {\n  // XXX we're assuming here that variables will be serialized in the same order.\n  // that might not always be true\n  return `${print(operation.query)}|${JSON.stringify(operation.variables)}|${\n    operation.operationName\n  }`;\n}\n","import Observable from 'zen-observable-ts';\n\nimport {\n  GraphQLRequest,\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n} from './types';\n\nimport {\n  validateOperation,\n  isTerminating,\n  LinkError,\n  transformOperation,\n  createOperation,\n} from './linkUtils';\n\nconst passthrough = (op, forward) => (forward ? forward(op) : Observable.of());\n\nconst toLink = (handler: RequestHandler | ApolloLink) =>\n  typeof handler === 'function' ? new ApolloLink(handler) : handler;\n\nexport const empty = (): ApolloLink =>\n  new ApolloLink((op, forward) => Observable.of());\n\nexport const from = (links: ApolloLink[]): ApolloLink => {\n  if (links.length === 0) return empty();\n\n  return links.map(toLink).reduce((x, y) => x.concat(y));\n};\n\nexport const split = (\n  test: (op: Operation) => boolean,\n  left: ApolloLink | RequestHandler,\n  right: ApolloLink | RequestHandler = new ApolloLink(passthrough),\n): ApolloLink => {\n  const leftLink = toLink(left);\n  const rightLink = toLink(right);\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(operation => {\n      return test(operation)\n        ? leftLink.request(operation) || Observable.of()\n        : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return test(operation)\n        ? leftLink.request(operation, forward) || Observable.of()\n        : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n};\n\n// join two Links together\nexport const concat = (\n  first: ApolloLink | RequestHandler,\n  second: ApolloLink | RequestHandler,\n) => {\n  const firstLink = toLink(first);\n  if (isTerminating(firstLink)) {\n    console.warn(\n      new LinkError(\n        `You are calling concat on a terminating link, which will have no effect`,\n        firstLink,\n      ),\n    );\n    return firstLink;\n  }\n  const nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(\n      operation =>\n        firstLink.request(\n          operation,\n          op => nextLink.request(op) || Observable.of(),\n        ) || Observable.of(),\n    );\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return (\n        firstLink.request(operation, op => {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of()\n      );\n    });\n  }\n};\n\nexport class ApolloLink {\n  public static empty = empty;\n  public static from = from;\n  public static split = split;\n  public static execute = execute;\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right: ApolloLink | RequestHandler = new ApolloLink(passthrough),\n  ): ApolloLink {\n    return this.concat(split(test, left, right));\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new Error('request is not implemented');\n  }\n}\n\nexport function execute(\n  link: ApolloLink,\n  operation: GraphQLRequest,\n): Observable<FetchResult> {\n  return (\n    link.request(\n      createOperation(\n        operation.context,\n        transformOperation(validateOperation(operation)),\n      ),\n    ) || Observable.of()\n  );\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/util/Observable.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/errors/ApolloError.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/core/types.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/core/ObservableQuery.ts"},"import {\n  ApolloLink,\n  Operation,\n  NextLink,\n  FetchResult,\n  Observable,\n} from 'apollo-link';\n\n/*\n * Expects context to contain the forceFetch field if no dedup\n */\nexport class DedupLink extends ApolloLink {\n  private inFlightRequestObservables: Map<\n    string,\n    Observable<FetchResult>\n  > = new Map();\n  private subscribers: Map<string, any> = new Map();\n\n  public request(\n    operation: Operation,\n    forward: NextLink,\n  ): Observable<FetchResult> {\n    // sometimes we might not want to deduplicate a request, for example when we want to force fetch it.\n    if (operation.getContext().forceFetch) {\n      return forward(operation);\n    }\n\n    const key = operation.toKey();\n\n    const cleanup = operationKey => {\n      this.inFlightRequestObservables.delete(operationKey);\n      const prev = this.subscribers.get(operationKey);\n      return prev;\n    };\n\n    if (!this.inFlightRequestObservables.get(key)) {\n      // this is a new request, i.e. we haven't deduplicated it yet\n      // call the next link\n      const singleObserver = forward(operation);\n      let subscription;\n\n      const sharedObserver = new Observable(observer => {\n        // this will still be called by each subscriber regardless of\n        // deduplication status\n        let prev = this.subscribers.get(key);\n        if (!prev) prev = { next: [], error: [], complete: [] };\n\n        this.subscribers.set(key, {\n          next: prev.next.concat([observer.next.bind(observer)]),\n          error: prev.error.concat([observer.error.bind(observer)]),\n          complete: prev.complete.concat([observer.complete.bind(observer)]),\n        });\n\n        if (!subscription) {\n          subscription = singleObserver.subscribe({\n            next: result => {\n              const previous = cleanup(key);\n              this.subscribers.delete(key);\n              if (previous) {\n                previous.next.forEach(next => next(result));\n                previous.complete.forEach(complete => complete());\n              }\n            },\n            error: error => {\n              const previous = cleanup(key);\n              this.subscribers.delete(key);\n              if (previous) previous.error.forEach(err => err(error));\n            },\n          });\n        }\n\n        return () => {\n          if (subscription) subscription.unsubscribe();\n          this.inFlightRequestObservables.delete(key);\n        };\n      });\n\n      this.inFlightRequestObservables.set(key, sharedObserver);\n    }\n\n    // return shared Observable\n    return this.inFlightRequestObservables.get(key);\n  }\n}\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/scheduler/scheduler.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/data/mutations.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/data/queries.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/core/QueryManager.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/data/store.ts"},"exports.version = \"2.4.2\"",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/benjamin.klein/workspaces/benny/vuex-orm-graphql/node_modules/src/ApolloClient.ts"},"import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nexport function queryFromPojo(obj: any): DocumentNode {\n  const op: OperationDefinitionNode = {\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [op],\n  };\n\n  return out;\n}\n\nexport function fragmentFromPojo(obj: any, typename?: string): DocumentNode {\n  const frag: FragmentDefinitionNode = {\n    kind: 'FragmentDefinition',\n    typeCondition: {\n      kind: 'NamedType',\n      name: {\n        kind: 'Name',\n        value: typename || '__FakeType',\n      },\n    },\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [frag],\n  };\n\n  return out;\n}\n\nfunction selectionSetFromObj(obj: any): SelectionSetNode {\n  if (\n    typeof obj === 'number' ||\n    typeof obj === 'boolean' ||\n    typeof obj === 'string' ||\n    typeof obj === 'undefined' ||\n    obj === null\n  ) {\n    // No selection set here\n    return null;\n  }\n\n  if (Array.isArray(obj)) {\n    // GraphQL queries don't include arrays\n    return selectionSetFromObj(obj[0]);\n  }\n\n  // Now we know it's an object\n  const selections: FieldNode[] = [];\n\n  Object.keys(obj).forEach(key => {\n    const field: FieldNode = {\n      kind: 'Field',\n      name: {\n        kind: 'Name',\n        value: key,\n      },\n    };\n\n    // Recurse\n    const nestedSelSet: SelectionSetNode = selectionSetFromObj(obj[key]);\n\n    if (nestedSelSet) {\n      field.selectionSet = nestedSelSet;\n    }\n\n    selections.push(field);\n  });\n\n  const selectionSet: SelectionSetNode = {\n    kind: 'SelectionSet',\n    selections,\n  };\n\n  return selectionSet;\n}\n\nexport const justTypenameQuery: DocumentNode = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: null,\n      variableDefinitions: null,\n      directives: [],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            alias: null,\n            name: {\n              kind: 'Name',\n              value: '__typename',\n            },\n            arguments: [],\n            directives: [],\n            selectionSet: null,\n          },\n        ],\n      },\n    },\n  ],\n};\n","import { DocumentNode } from 'graphql';\nimport { getFragmentQueryDocument } from 'apollo-utilities';\n\nimport { DataProxy, Cache } from './types';\nimport { justTypenameQuery, queryFromPojo, fragmentFromPojo } from './utils';\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  // required to implement\n  // core API\n  public abstract read<T, TVariables = any>(\n    query: Cache.ReadOptions<TVariables>,\n  ): T | null;\n  public abstract write<TResult = any, TVariables = any>(\n    write: Cache.WriteOptions<TResult, TVariables>,\n  ): void;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch(watch: Cache.WatchOptions): () => void;\n  public abstract evict<TVariables = any>(\n    query: Cache.EvictOptions<TVariables>,\n  ): Cache.EvictionResult;\n  public abstract reset(): Promise<void>;\n\n  // intializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized,\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // optimistic API\n  public abstract removeOptimistic(id: string): void;\n\n  // transactional API\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n  ): void;\n  public abstract recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    id: string,\n  ): void;\n\n  // optional API\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n  // experimental\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // DataProxy API\n  /**\n   *\n   * @param options\n   * @param optimistic\n   */\n  public readQuery<QueryType, TVariables = any>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): QueryType | null {\n    return this.read({\n      query: options.query,\n      variables: options.variables,\n      optimistic,\n    });\n  }\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): FragmentType | null {\n    return this.read({\n      query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n      variables: options.variables,\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>(\n    options: Cache.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: 'ROOT_QUERY',\n      result: options.data,\n      query: options.query,\n      variables: options.variables,\n    });\n  }\n\n  public writeFragment<TData = any, TVariables = any>(\n    options: Cache.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: options.id,\n      result: options.data,\n      variables: options.variables,\n      query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n    });\n  }\n\n  public writeData<TData = any>({\n    id,\n    data,\n  }: Cache.WriteDataOptions<TData>): void {\n    if (typeof id !== 'undefined') {\n      let typenameResult = null;\n      // Since we can't use fragments without having a typename in the store,\n      // we need to make sure we have one.\n      // To avoid overwriting an existing typename, we need to read it out first\n      // and generate a fake one if none exists.\n      try {\n        typenameResult = this.read({\n          rootId: id,\n          optimistic: false,\n          query: justTypenameQuery,\n        });\n      } catch (e) {\n        // Do nothing, since an error just means no typename exists\n      }\n\n      // tslint:disable-next-line\n      const __typename =\n        (typenameResult && typenameResult.__typename) || '__ClientData';\n\n      // Add a type here to satisfy the inmemory cache\n      const dataToWrite = Object.assign({ __typename }, data);\n\n      this.writeFragment({\n        id,\n        fragment: fragmentFromPojo(dataToWrite, __typename),\n        data: dataToWrite,\n      });\n    } else {\n      this.writeQuery({ query: queryFromPojo(data), data });\n    }\n  }\n}\n","import { isTest, warnOnceInDevelopment, IdValue } from 'apollo-utilities';\n\nimport {\n  ReadStoreContext,\n  FragmentMatcherInterface,\n  PossibleTypesMap,\n  IntrospectionResultData,\n} from './types';\n\nlet haveWarned = false;\n\n/**\n * This fragment matcher is very basic and unable to match union or interface type conditions\n */\nexport class HeuristicFragmentMatcher implements FragmentMatcherInterface {\n  constructor() {\n    // do nothing\n  }\n\n  public ensureReady() {\n    return Promise.resolve();\n  }\n\n  public canBypassInit() {\n    return true; // we don't need to initialize this fragment matcher.\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ): boolean {\n    const obj = context.store.get(idValue.id);\n\n    if (!obj && idValue.id === 'ROOT_QUERY') {\n      return true;\n    }\n\n    if (!obj) {\n      return false;\n    }\n\n    if (!obj.__typename) {\n      if (!haveWarned) {\n        console.warn(`You're using fragments in your queries, but either don't have the addTypename:\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\n   can accurately match fragments.`);\n        console.warn(\n          'Could not find __typename on Fragment ',\n          typeCondition,\n          obj,\n        );\n        console.warn(\n          `DEPRECATION WARNING: using fragments without __typename is unsupported behavior ` +\n            `and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.`,\n        );\n\n        /* istanbul ignore if */\n        if (!isTest()) {\n          // When running tests, we want to print the warning every time\n          haveWarned = true;\n        }\n      }\n\n      context.returnPartialData = true;\n      return true;\n    }\n\n    if (obj.__typename === typeCondition) {\n      return true;\n    }\n\n    // XXX here we reach an issue - we don't know if this fragment should match or not. It's either:\n    // 1. A fragment on a non-matching concrete type or interface or union\n    // 2. A fragment on a matching interface or union\n    // If it's 1, we don't want to return anything, if it's 2 we want to match. We can't tell the\n    // difference, so we warn the user, but still try to match it (backcompat).\n    warnOnceInDevelopment(\n      'You are using the simple (heuristic) fragment matcher, but your ' +\n        'queries contain union or interface types. Apollo Client will not be ' +\n        'able to accurately map fragments. To make this error go away, use ' +\n        'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n        'https://www.apollographql.com/docs/react/recipes/fragment-matching.html',\n      'error',\n    );\n\n    context.returnPartialData = true;\n    return true;\n  }\n}\n\nexport class IntrospectionFragmentMatcher implements FragmentMatcherInterface {\n  private isReady: boolean;\n  private possibleTypesMap: PossibleTypesMap;\n\n  constructor(options?: {\n    introspectionQueryResultData?: IntrospectionResultData;\n  }) {\n    if (options && options.introspectionQueryResultData) {\n      this.possibleTypesMap = this.parseIntrospectionResult(\n        options.introspectionQueryResultData,\n      );\n      this.isReady = true;\n    } else {\n      this.isReady = false;\n    }\n\n    this.match = this.match.bind(this);\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ) {\n    if (!this.isReady) {\n      // this should basically never happen in proper use.\n      throw new Error(\n        'FragmentMatcher.match() was called before FragmentMatcher.init()',\n      );\n    }\n\n    const obj = context.store.get(idValue.id);\n\n    if (!obj) {\n      return false;\n    }\n\n    if (!obj.__typename) {\n      throw new Error(\n        `Cannot match fragment because __typename property is missing: ${JSON.stringify(\n          obj,\n        )}`,\n      );\n    }\n\n    if (obj.__typename === typeCondition) {\n      return true;\n    }\n\n    const implementingTypes = this.possibleTypesMap[typeCondition];\n    if (implementingTypes && implementingTypes.indexOf(obj.__typename) > -1) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private parseIntrospectionResult(\n    introspectionResultData: IntrospectionResultData,\n  ): PossibleTypesMap {\n    const typeMap: PossibleTypesMap = {};\n    introspectionResultData.__schema.types.forEach(type => {\n      if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n        typeMap[type.name] = type.possibleTypes.map(\n          implementingType => implementingType.name,\n        );\n      }\n    });\n    return typeMap;\n  }\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\n\nexport class ObjectCache implements NormalizedCache {\n  constructor(private data: NormalizedCacheObject = Object.create(null)) {}\n  public toObject(): NormalizedCacheObject {\n    return this.data;\n  }\n  public get(dataId: string): StoreObject {\n    return this.data[dataId];\n  }\n  public set(dataId: string, value: StoreObject) {\n    this.data[dataId] = value;\n  }\n  public delete(dataId: string): void {\n    this.data[dataId] = undefined;\n  }\n  public clear(): void {\n    this.data = Object.create(null);\n  }\n  public replace(newData: NormalizedCacheObject): void {\n    this.data = newData || Object.create(null);\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new ObjectCache(seed);\n}\n","import {\n  SelectionSetNode,\n  FieldNode,\n  DocumentNode,\n  InlineFragmentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n} from 'graphql';\nimport { print } from 'graphql/language/printer';\nimport { FragmentMatcher } from 'graphql-anywhere';\n\nimport {\n  assign,\n  createFragmentMap,\n  FragmentMap,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getOperationDefinition,\n  IdValue,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isProduction,\n  resultKeyNameFromField,\n  shouldInclude,\n  storeKeyNameFromField,\n  getQueryDefinition,\n  StoreValue,\n  toIdValue,\n} from 'apollo-utilities';\n\nimport { defaultNormalizedCacheFactory, ObjectCache } from './objectCache';\n\nimport {\n  IdGetter,\n  NormalizedCache,\n  NormalizedCacheFactory,\n  ReadStoreContext,\n  StoreObject,\n} from './types';\n\nexport class WriteError extends Error {\n  public type = 'WriteError';\n}\n\nexport function enhanceErrorWithDocument(error: Error, document: DocumentNode) {\n  // XXX A bit hacky maybe ...\n  const enhancedError = new WriteError(\n    `Error writing result to store for query:\\n ${print(document)}`,\n  );\n  enhancedError.message += '\\n' + error.message;\n  enhancedError.stack = error.stack;\n  return enhancedError;\n}\n\n/**\n * Writes the result of a query to the store.\n *\n * @param result The result object returned for the query document.\n *\n * @param query The query document whose result we are writing to the store.\n *\n * @param store The {@link NormalizedCache} used by Apollo for the `data` portion of the store.\n *\n * @param variables A map from the name of a variable to its value. These variables can be\n * referenced by the query document.\n *\n * @param dataIdFromObject A function that returns an object identifier given a particular result\n * object. See the store documentation for details and an example of this function.\n *\n * @param fragmentMap A map from the name of a fragment to its fragment definition. These fragments\n * can be referenced within the query document.\n *\n * @param fragmentMatcherFunction A function to use for matching fragment conditions in GraphQL documents\n */\nexport function writeQueryToStore({\n  result,\n  query,\n  storeFactory = defaultNormalizedCacheFactory,\n  store = storeFactory(),\n  variables,\n  dataIdFromObject,\n  fragmentMap = {} as FragmentMap,\n  fragmentMatcherFunction,\n}: {\n  result: Object;\n  query: DocumentNode;\n  store?: NormalizedCache;\n  storeFactory?: NormalizedCacheFactory;\n  variables?: Object;\n  dataIdFromObject?: IdGetter;\n  fragmentMap?: FragmentMap;\n  fragmentMatcherFunction?: FragmentMatcher;\n}): NormalizedCache {\n  const queryDefinition: OperationDefinitionNode = getQueryDefinition(query);\n\n  variables = assign({}, getDefaultValues(queryDefinition), variables);\n\n  try {\n    return writeSelectionSetToStore({\n      dataId: 'ROOT_QUERY',\n      result,\n      selectionSet: queryDefinition.selectionSet,\n      context: {\n        store,\n        storeFactory,\n        processedData: {},\n        variables,\n        dataIdFromObject,\n        fragmentMap,\n        fragmentMatcherFunction,\n      },\n    });\n  } catch (e) {\n    throw enhanceErrorWithDocument(e, query);\n  }\n}\n\nexport type WriteContext = {\n  store: NormalizedCache;\n  storeFactory: NormalizedCacheFactory;\n  processedData?: { [x: string]: FieldNode[] };\n  variables?: any;\n  dataIdFromObject?: IdGetter;\n  fragmentMap?: FragmentMap;\n  fragmentMatcherFunction?: FragmentMatcher;\n};\n\nexport function writeResultToStore({\n  dataId,\n  result,\n  document,\n  storeFactory = defaultNormalizedCacheFactory,\n  store = storeFactory(),\n  variables,\n  dataIdFromObject,\n  fragmentMatcherFunction,\n}: {\n  dataId: string;\n  result: any;\n  document: DocumentNode;\n  store?: NormalizedCache;\n  storeFactory?: NormalizedCacheFactory;\n  variables?: Object;\n  dataIdFromObject?: IdGetter;\n  fragmentMatcherFunction?: FragmentMatcher;\n}): NormalizedCache {\n  // XXX TODO REFACTOR: this is a temporary workaround until query normalization is made to work with documents.\n  const operationDefinition = getOperationDefinition(document);\n  const selectionSet = operationDefinition.selectionSet;\n  const fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n\n  variables = assign({}, getDefaultValues(operationDefinition), variables);\n\n  try {\n    return writeSelectionSetToStore({\n      result,\n      dataId,\n      selectionSet,\n      context: {\n        store,\n        storeFactory,\n        processedData: {},\n        variables,\n        dataIdFromObject,\n        fragmentMap,\n        fragmentMatcherFunction,\n      },\n    });\n  } catch (e) {\n    throw enhanceErrorWithDocument(e, document);\n  }\n}\n\nexport function writeSelectionSetToStore({\n  result,\n  dataId,\n  selectionSet,\n  context,\n}: {\n  dataId: string;\n  result: any;\n  selectionSet: SelectionSetNode;\n  context: WriteContext;\n}): NormalizedCache {\n  const { variables, store, fragmentMap } = context;\n\n  selectionSet.selections.forEach(selection => {\n    const included = shouldInclude(selection, variables);\n\n    if (isField(selection)) {\n      const resultFieldKey: string = resultKeyNameFromField(selection);\n      const value: any = result[resultFieldKey];\n\n      if (included) {\n        if (typeof value !== 'undefined') {\n          writeFieldToStore({\n            dataId,\n            value,\n            field: selection,\n            context,\n          });\n        } else {\n          // if this is a defered field we don't need to throw / warn\n          const isDefered =\n            selection.directives &&\n            selection.directives.length &&\n            selection.directives.some(\n              directive => directive.name && directive.name.value === 'defer',\n            );\n\n          if (!isDefered && context.fragmentMatcherFunction) {\n            // XXX We'd like to throw an error, but for backwards compatibility's sake\n            // we just print a warning for the time being.\n            //throw new WriteError(`Missing field ${resultFieldKey} in ${JSON.stringify(result, null, 2).substring(0, 100)}`);\n            if (!isProduction()) {\n              console.warn(\n                `Missing field ${resultFieldKey} in ${JSON.stringify(\n                  result,\n                  null,\n                  2,\n                ).substring(0, 100)}`,\n              );\n            }\n          }\n        }\n      }\n    } else {\n      // This is not a field, so it must be a fragment, either inline or named\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // Named fragment\n        fragment = (fragmentMap || {})[selection.name.value];\n\n        if (!fragment) {\n          throw new Error(`No fragment named ${selection.name.value}.`);\n        }\n      }\n\n      let matches = true;\n      if (context.fragmentMatcherFunction && fragment.typeCondition) {\n        // TODO we need to rewrite the fragment matchers for this to work properly and efficiently\n        // Right now we have to pretend that we're passing in an idValue and that there's a store\n        // on the context.\n        const idValue = toIdValue({ id: 'self', typename: undefined });\n        const fakeContext: ReadStoreContext = {\n          // NOTE: fakeContext always uses ObjectCache\n          // since this is only to ensure the return value of 'matches'\n          store: new ObjectCache({ self: result }),\n          returnPartialData: false,\n          hasMissingField: false,\n          cacheRedirects: {},\n        };\n        matches = context.fragmentMatcherFunction(\n          idValue,\n          fragment.typeCondition.name.value,\n          fakeContext,\n        );\n        if (!isProduction() && fakeContext.returnPartialData) {\n          console.error('WARNING: heuristic fragment matching going on!');\n        }\n      }\n\n      if (included && matches) {\n        writeSelectionSetToStore({\n          result,\n          selectionSet: fragment.selectionSet,\n          dataId,\n          context,\n        });\n      }\n    }\n  });\n\n  return store;\n}\n\n// Checks if the id given is an id that was generated by Apollo\n// rather than by dataIdFromObject.\nfunction isGeneratedId(id: string): boolean {\n  return id[0] === '$';\n}\n\nfunction mergeWithGenerated(\n  generatedKey: string,\n  realKey: string,\n  cache: NormalizedCache,\n) {\n  const generated = cache.get(generatedKey);\n  const real = cache.get(realKey);\n\n  Object.keys(generated).forEach(key => {\n    const value = generated[key];\n    const realValue = real[key];\n    if (isIdValue(value) && isGeneratedId(value.id) && isIdValue(realValue)) {\n      mergeWithGenerated(value.id, realValue.id, cache);\n    }\n    cache.delete(generatedKey);\n    cache.set(realKey, { ...generated, ...real } as StoreObject);\n  });\n}\n\nfunction isDataProcessed(\n  dataId: string,\n  field: FieldNode | SelectionSetNode,\n  processedData?: { [x: string]: (FieldNode | SelectionSetNode)[] },\n): boolean {\n  if (!processedData) {\n    return false;\n  }\n\n  if (processedData[dataId]) {\n    if (processedData[dataId].indexOf(field) >= 0) {\n      return true;\n    } else {\n      processedData[dataId].push(field);\n    }\n  } else {\n    processedData[dataId] = [field];\n  }\n\n  return false;\n}\n\nfunction writeFieldToStore({\n  field,\n  value,\n  dataId,\n  context,\n}: {\n  field: FieldNode;\n  value: any;\n  dataId: string;\n  context: WriteContext;\n}) {\n  const { variables, dataIdFromObject, store } = context;\n\n  let storeValue: StoreValue;\n  let storeObject: StoreObject;\n\n  const storeFieldName: string = storeKeyNameFromField(field, variables);\n  // specifies if we need to merge existing keys in the store\n  let shouldMerge = false;\n  // If we merge, this will be the generatedKey\n  let generatedKey: string = '';\n\n  // If this is a scalar value...\n  if (!field.selectionSet || value === null) {\n    storeValue =\n      value != null && typeof value === 'object'\n        ? // If the scalar value is a JSON blob, we have to \"escape\" it so it can’t pretend to be\n          // an id.\n          { type: 'json', json: value }\n        : // Otherwise, just store the scalar directly in the store.\n          value;\n  } else if (Array.isArray(value)) {\n    const generatedId = `${dataId}.${storeFieldName}`;\n\n    storeValue = processArrayValue(\n      value,\n      generatedId,\n      field.selectionSet,\n      context,\n    );\n  } else {\n    // It's an object\n    let valueDataId = `${dataId}.${storeFieldName}`;\n    let generated = true;\n\n    // We only prepend the '$' if the valueDataId isn't already a generated\n    // id.\n    if (!isGeneratedId(valueDataId)) {\n      valueDataId = '$' + valueDataId;\n    }\n\n    if (dataIdFromObject) {\n      const semanticId = dataIdFromObject(value);\n\n      // We throw an error if the first character of the id is '$. This is\n      // because we use that character to designate an Apollo-generated id\n      // and we use the distinction between user-desiginated and application-provided\n      // ids when managing overwrites.\n      if (semanticId && isGeneratedId(semanticId)) {\n        throw new Error(\n          'IDs returned by dataIdFromObject cannot begin with the \"$\" character.',\n        );\n      }\n\n      if (semanticId || (typeof semanticId === 'number' && semanticId === 0)) {\n        valueDataId = semanticId;\n        generated = false;\n      }\n    }\n\n    if (!isDataProcessed(valueDataId, field, context.processedData)) {\n      writeSelectionSetToStore({\n        dataId: valueDataId,\n        result: value,\n        selectionSet: field.selectionSet,\n        context,\n      });\n    }\n\n    // We take the id and escape it (i.e. wrap it with an enclosing object).\n    // This allows us to distinguish IDs from normal scalars.\n    const typename = value.__typename;\n    storeValue = toIdValue({ id: valueDataId, typename }, generated);\n\n    // check if there was a generated id at the location where we're\n    // about to place this new id. If there was, we have to merge the\n    // data from that id with the data we're about to write in the store.\n    storeObject = store.get(dataId);\n    const escapedId =\n      storeObject && (storeObject[storeFieldName] as IdValue | undefined);\n    if (escapedId !== storeValue && isIdValue(escapedId)) {\n      const hadTypename = escapedId.typename !== undefined;\n      const hasTypename = typename !== undefined;\n      const typenameChanged =\n        hadTypename && hasTypename && escapedId.typename !== typename;\n\n      // If there is already a real id in the store and the current id we\n      // are dealing with is generated, we throw an error.\n      // One exception we allow is when the typename has changed, which occurs\n      // when schema defines a union, both with and without an ID in the same place.\n      // checks if we \"lost\" the read id\n      if (generated && !escapedId.generated && !typenameChanged) {\n        throw new Error(\n          `Store error: the application attempted to write an object with no provided id` +\n            ` but the store already contains an id of ${\n              escapedId.id\n            } for this object. The selectionSet` +\n            ` that was trying to be written is:\\n` +\n            print(field),\n        );\n      }\n      // checks if we \"lost\" the typename\n      if (hadTypename && !hasTypename) {\n        throw new Error(\n          `Store error: the application attempted to write an object with no provided typename` +\n            ` but the store already contains an object with typename of ${\n              escapedId.typename\n            } for the object of id ${escapedId.id}. The selectionSet` +\n            ` that was trying to be written is:\\n` +\n            print(field),\n        );\n      }\n\n      if (escapedId.generated) {\n        generatedKey = escapedId.id;\n        // We should only merge if it's an object of the same type,\n        // otherwise we should delete the generated object\n        if (typenameChanged) {\n          // Only delete the generated object when the old object was\n          // inlined, and the new object is not. This is indicated by\n          // the old id being generated, and the new id being real.\n          if (!generated) {\n            store.delete(generatedKey);\n          }\n        } else {\n          shouldMerge = true;\n        }\n      }\n    }\n  }\n\n  const newStoreObj = {\n    ...store.get(dataId),\n    [storeFieldName]: storeValue,\n  } as StoreObject;\n\n  if (shouldMerge) {\n    mergeWithGenerated(generatedKey, (storeValue as IdValue).id, store);\n  }\n\n  storeObject = store.get(dataId);\n  if (!storeObject || storeValue !== storeObject[storeFieldName]) {\n    store.set(dataId, newStoreObj);\n  }\n}\n\nfunction processArrayValue(\n  value: any[],\n  generatedId: string,\n  selectionSet: SelectionSetNode,\n  context: WriteContext,\n): any[] {\n  return value.map((item: any, index: any) => {\n    if (item === null) {\n      return null;\n    }\n\n    let itemDataId = `${generatedId}.${index}`;\n\n    if (Array.isArray(item)) {\n      return processArrayValue(item, itemDataId, selectionSet, context);\n    }\n\n    let generated = true;\n\n    if (context.dataIdFromObject) {\n      const semanticId = context.dataIdFromObject(item);\n\n      if (semanticId) {\n        itemDataId = semanticId;\n        generated = false;\n      }\n    }\n\n    if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n      writeSelectionSetToStore({\n        dataId: itemDataId,\n        result: item,\n        selectionSet,\n        context,\n      });\n    }\n\n    return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n  });\n}\n","import {\n  DocumentNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n} from 'graphql';\n\nimport {\n  getMainDefinition,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n  DirectiveInfo,\n  shouldInclude,\n  getDirectiveInfoFromField,\n  isField,\n  isInlineFragment,\n  resultKeyNameFromField,\n  argumentsObjectFromField,\n} from 'apollo-utilities';\n\nexport type Resolver = (\n  fieldName: string,\n  rootValue: any,\n  args: any,\n  context: any,\n  info: ExecInfo,\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type ResultMapper = (\n  values: { [fieldName: string]: any },\n  rootValue: any,\n) => any;\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  contextValue: any;\n  variableValues: VariableMap;\n  resultMapper: ResultMapper;\n  resolver: Resolver;\n  fragmentMatcher: FragmentMatcher;\n};\n\nexport type ExecInfo = {\n  isLeaf: boolean;\n  resultKey: string;\n  directives: DirectiveInfo;\n};\n\nexport type ExecOptions = {\n  resultMapper?: ResultMapper;\n  fragmentMatcher?: FragmentMatcher;\n};\n\n/* Based on graphql function from graphql-js:\n *\n * graphql(\n *   schema: GraphQLSchema,\n *   requestString: string,\n *   rootValue?: ?any,\n *   contextValue?: ?any,\n *   variableValues?: ?{[key: string]: any},\n *   operationName?: ?string\n * ): Promise<GraphQLResult>\n *\n * The default export as of graphql-anywhere is sync as of 4.0,\n * but below is an exported alternative that is async.\n * In the 5.0 version, this will be the only export again\n * and it will be async\n */\nexport function graphql(\n  resolver: Resolver,\n  document: DocumentNode,\n  rootValue?: any,\n  contextValue?: any,\n  variableValues?: VariableMap,\n  execOptions: ExecOptions = {},\n) {\n  const mainDefinition = getMainDefinition(document);\n\n  const fragments = getFragmentDefinitions(document);\n  const fragmentMap = createFragmentMap(fragments);\n\n  const resultMapper = execOptions.resultMapper;\n\n  // Default matcher always matches all fragments\n  const fragmentMatcher = execOptions.fragmentMatcher || (() => true);\n\n  const execContext: ExecContext = {\n    fragmentMap,\n    contextValue,\n    variableValues,\n    resultMapper,\n    resolver,\n    fragmentMatcher,\n  };\n\n  return executeSelectionSet(\n    mainDefinition.selectionSet,\n    rootValue,\n    execContext,\n  );\n}\n\nfunction executeSelectionSet(\n  selectionSet: SelectionSetNode,\n  rootValue: any,\n  execContext: ExecContext,\n) {\n  const { fragmentMap, contextValue, variableValues: variables } = execContext;\n\n  const result = {};\n\n  selectionSet.selections.forEach(selection => {\n    if (!shouldInclude(selection, variables)) {\n      // Skip this entirely\n      return;\n    }\n\n    if (isField(selection)) {\n      const fieldResult = executeField(selection, rootValue, execContext);\n\n      const resultFieldKey = resultKeyNameFromField(selection);\n\n      if (fieldResult !== undefined) {\n        if (result[resultFieldKey] === undefined) {\n          result[resultFieldKey] = fieldResult;\n        } else {\n          merge(result[resultFieldKey], fieldResult);\n        }\n      }\n    } else {\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment\n        fragment = fragmentMap[selection.name.value];\n\n        if (!fragment) {\n          throw new Error(`No fragment named ${selection.name.value}`);\n        }\n      }\n\n      const typeCondition = fragment.typeCondition.name.value;\n\n      if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {\n        const fragmentResult = executeSelectionSet(\n          fragment.selectionSet,\n          rootValue,\n          execContext,\n        );\n\n        merge(result, fragmentResult);\n      }\n    }\n  });\n\n  if (execContext.resultMapper) {\n    return execContext.resultMapper(result, rootValue);\n  }\n\n  return result;\n}\n\nfunction executeField(\n  field: FieldNode,\n  rootValue: any,\n  execContext: ExecContext,\n): any {\n  const { variableValues: variables, contextValue, resolver } = execContext;\n\n  const fieldName = field.name.value;\n  const args = argumentsObjectFromField(field, variables);\n\n  const info: ExecInfo = {\n    isLeaf: !field.selectionSet,\n    resultKey: resultKeyNameFromField(field),\n    directives: getDirectiveInfoFromField(field, variables),\n  };\n\n  const result = resolver(fieldName, rootValue, args, contextValue, info);\n\n  // Handle all scalar types here\n  if (!field.selectionSet) {\n    return result;\n  }\n\n  // From here down, the field has a selection set, which means it's trying to\n  // query a GraphQLObjectType\n  if (result == null) {\n    // Basically any field in a GraphQL response can be null, or missing\n    return result;\n  }\n\n  if (Array.isArray(result)) {\n    return executeSubSelectedArray(field, result, execContext);\n  }\n\n  // Returned value is an object, and the query has a sub-selection. Recurse.\n  return executeSelectionSet(field.selectionSet, result, execContext);\n}\n\nfunction executeSubSelectedArray(field, result, execContext) {\n  return result.map(item => {\n    // null value in array\n    if (item === null) {\n      return null;\n    }\n\n    // This is a nested array, recurse\n    if (Array.isArray(item)) {\n      return executeSubSelectedArray(field, item, execContext);\n    }\n\n    // This is an object, run the selection set on it\n    return executeSelectionSet(field.selectionSet, item, execContext);\n  });\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport function merge(dest, src) {\n  if (src !== null && typeof src === 'object') {\n    Object.keys(src).forEach(key => {\n      const srcVal = src[key];\n      if (!hasOwn.call(dest, key)) {\n        dest[key] = srcVal;\n      } else {\n        merge(dest[key], srcVal);\n      }\n    });\n  }\n}\n","import graphqlAnywhere, { Resolver, ExecInfo } from 'graphql-anywhere';\n\nimport {\n  IdValue,\n  assign,\n  isEqual,\n  getDefaultValues,\n  getQueryDefinition,\n  isJsonValue,\n  isIdValue,\n  toIdValue,\n  getStoreKeyName,\n  StoreValue,\n} from 'apollo-utilities';\n\nimport { Cache } from 'apollo-cache';\n\nimport {\n  ReadQueryOptions,\n  IdValueWithPreviousResult,\n  ReadStoreContext,\n  DiffQueryAgainstStoreOptions,\n  StoreObject,\n} from './types';\n\n/**\n * The key which the cache id for a given value is stored in the result object. This key is private\n * and should not be used by Apollo client users.\n *\n * Uses a symbol if available in the environment.\n *\n * @private\n */\nexport const ID_KEY = typeof Symbol !== 'undefined' ? Symbol('id') : '@@id';\n\n/**\n * Resolves the result of a query solely from the store (i.e. never hits the server).\n *\n * @param {Store} store The {@link NormalizedCache} used by Apollo for the `data` portion of the\n * store.\n *\n * @param {DocumentNode} query The query document to resolve from the data available in the store.\n *\n * @param {Object} [variables] A map from the name of a variable to its value. These variables can\n * be referenced by the query document.\n *\n * @param {any} previousResult The previous result returned by this function for the same query.\n * If nothing in the store changed since that previous result then values from the previous result\n * will be returned to preserve referential equality.\n */\nexport function readQueryFromStore<QueryType>(\n  options: ReadQueryOptions,\n): QueryType {\n  const optsPatch = { returnPartialData: false };\n\n  return diffQueryAgainstStore<QueryType>({\n    ...options,\n    ...optsPatch,\n  }).result;\n}\n\nconst readStoreResolver: Resolver = (\n  fieldName: string,\n  idValue: IdValueWithPreviousResult,\n  args: any,\n  context: ReadStoreContext,\n  { resultKey, directives }: ExecInfo,\n) => {\n  assertIdValue(idValue);\n\n  const objId = idValue.id;\n  const obj = context.store.get(objId);\n\n  let storeKeyName = fieldName;\n  if (args || directives) {\n    // We happen to know here that getStoreKeyName returns its first\n    // argument unmodified if there are no args or directives, so we can\n    // avoid calling the function at all in that case, as a small but\n    // important optimization to this frequently executed code.\n    storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n  }\n\n  let fieldValue: StoreValue | string | void = void 0;\n\n  if (obj) {\n    fieldValue = obj[storeKeyName];\n\n    if (\n      typeof fieldValue === 'undefined' &&\n      context.cacheRedirects &&\n      (obj.__typename || objId === 'ROOT_QUERY')\n    ) {\n      const typename = obj.__typename || 'Query';\n\n      // Look for the type in the custom resolver map\n      const type = context.cacheRedirects[typename];\n      if (type) {\n        // Look for the field in the custom resolver map\n        const resolver = type[fieldName];\n        if (resolver) {\n          fieldValue = resolver(obj, args, {\n            getCacheKey(storeObj: StoreObject) {\n              return toIdValue({\n                id: context.dataIdFromObject(storeObj),\n                typename: storeObj.__typename,\n              });\n            },\n          });\n        }\n      }\n    }\n  }\n\n  if (typeof fieldValue === 'undefined') {\n    if (!context.returnPartialData) {\n      throw new Error(\n        `Can't find field ${storeKeyName} on object (${objId}) ${JSON.stringify(\n          obj,\n          null,\n          2,\n        )}.`,\n      );\n    }\n\n    context.hasMissingField = true;\n\n    return fieldValue;\n  }\n\n  // if this is an object scalar, it must be a json blob and we have to unescape it\n  if (isJsonValue(fieldValue)) {\n    // If the JSON blob is the same now as in the previous result, return the previous result to\n    // maintain referential equality.\n    //\n    // `isEqual` will first perform a referential equality check (with `===`) in case the JSON\n    // value has not changed in the store, and then a deep equality check if that fails in case a\n    // new JSON object was returned by the API but that object may still be the same.\n    if (\n      idValue.previousResult &&\n      isEqual(idValue.previousResult[resultKey], fieldValue.json)\n    ) {\n      return idValue.previousResult[resultKey];\n    }\n    return fieldValue.json;\n  }\n\n  // If we had a previous result, try adding that previous result value for this field to our field\n  // value. This will create a new value without mutating the old one.\n  if (idValue.previousResult) {\n    fieldValue = addPreviousResultToIdValues(\n      fieldValue,\n      idValue.previousResult[resultKey],\n    );\n  }\n\n  return fieldValue;\n};\n\n/**\n * Given a store and a query, return as much of the result as possible and\n * identify if any data was missing from the store.\n * @param  {DocumentNode} query A parsed GraphQL query document\n * @param  {Store} store The Apollo Client store object\n * @param  {any} previousResult The previous result returned by this function for the same query\n * @return {result: Object, complete: [boolean]}\n */\nexport function diffQueryAgainstStore<T>({\n  store,\n  query,\n  variables,\n  previousResult,\n  returnPartialData = true,\n  rootId = 'ROOT_QUERY',\n  fragmentMatcherFunction,\n  config,\n}: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n  // Throw the right validation error by trying to find a query in the document\n  const queryDefinition = getQueryDefinition(query);\n\n  variables = assign({}, getDefaultValues(queryDefinition), variables);\n\n  const context: ReadStoreContext = {\n    // Global settings\n    store,\n    returnPartialData,\n    dataIdFromObject: (config && config.dataIdFromObject) || null,\n    cacheRedirects: (config && config.cacheRedirects) || {},\n    // Flag set during execution\n    hasMissingField: false,\n  };\n\n  const rootIdValue = {\n    type: 'id',\n    id: rootId,\n    previousResult,\n  };\n\n  const result = graphqlAnywhere(\n    readStoreResolver,\n    query,\n    rootIdValue,\n    context,\n    variables,\n    {\n      fragmentMatcher: fragmentMatcherFunction,\n      resultMapper,\n    },\n  );\n\n  return {\n    result: result as T,\n    complete: !context.hasMissingField,\n  };\n}\n\nexport function assertIdValue(idValue: IdValue) {\n  if (!isIdValue(idValue)) {\n    throw new Error(`Encountered a sub-selection on the query, but the store doesn't have \\\nan object reference. This should never happen during normal use unless you have custom code \\\nthat is directly manipulating the store; please file an issue.`);\n  }\n}\n\n/**\n * Adds a previous result value to id values in a nested array. For a single id value and a single\n * previous result then the previous value is added directly.\n *\n * For arrays we put all of the ids from the previous result array in a map and add them to id\n * values with the same id.\n *\n * This function does not mutate. Instead it returns new instances of modified values.\n *\n * @private\n */\nfunction addPreviousResultToIdValues(value: any, previousResult: any): any {\n  // If the value is an `IdValue`, add the previous result to it whether or not that\n  // `previousResult` is undefined.\n  //\n  // If the value is an array, recurse over each item trying to add the `previousResult` for that\n  // item.\n  if (isIdValue(value)) {\n    return {\n      ...value,\n      previousResult,\n    };\n  } else if (Array.isArray(value)) {\n    const idToPreviousResult: Map<string, any> = new Map();\n\n    // If the previous result was an array, we want to build up our map of ids to previous results\n    // using the private `ID_KEY` property that is added in `resultMapper`.\n    if (Array.isArray(previousResult)) {\n      previousResult.forEach(item => {\n        // item can be null\n        if (item && item[ID_KEY]) {\n          idToPreviousResult.set(item[ID_KEY], item);\n          // idToPreviousResult[item[ID_KEY]] = item;\n        }\n      });\n    }\n\n    // For every value we want to add the previous result.\n    return value.map((item, i) => {\n      // By default the previous result for this item will be in the same array position as this\n      // item.\n      let itemPreviousResult = previousResult && previousResult[i];\n\n      // If the item is an id value, we should check to see if there is a previous result for this\n      // specific id. If there is, that will be the value for `itemPreviousResult`.\n      if (isIdValue(item)) {\n        itemPreviousResult =\n          idToPreviousResult.get(item.id) || itemPreviousResult;\n      }\n\n      return addPreviousResultToIdValues(item, itemPreviousResult);\n    });\n  }\n  // Return the value, nothing changed.\n  return value;\n}\n\n/**\n * Maps a result from `graphql-anywhere` to a final result value.\n *\n * If the result and the previous result from the `idValue` pass a shallow equality test, we just\n * return the `previousResult` to maintain referential equality.\n *\n * We also add a private id property to the result that we can use later on.\n *\n * @private\n */\nfunction resultMapper(resultFields: any, idValue: IdValueWithPreviousResult) {\n  // If we had a previous result, we may be able to return that and preserve referential equality\n  if (idValue.previousResult) {\n    const currentResultKeys = Object.keys(resultFields);\n\n    const sameAsPreviousResult =\n      // Confirm that we have the same keys in both the current result and the previous result.\n      Object.keys(idValue.previousResult).every(\n        key => currentResultKeys.indexOf(key) > -1,\n      ) &&\n      // Perform a shallow comparison of the result fields with the previous result. If all of\n      // the shallow fields are referentially equal to the fields of the previous result we can\n      // just return the previous result.\n      //\n      // While we do a shallow comparison of objects, but we do a deep comparison of arrays.\n      currentResultKeys.every(key =>\n        areNestedArrayItemsStrictlyEqual(\n          resultFields[key],\n          idValue.previousResult[key],\n        ),\n      );\n\n    if (sameAsPreviousResult) {\n      return idValue.previousResult;\n    }\n  }\n\n  Object.defineProperty(resultFields, ID_KEY, {\n    enumerable: false,\n    configurable: true,\n    writable: false,\n    value: idValue.id,\n  });\n\n  return resultFields;\n}\n\ntype NestedArray<T> = T | Array<T | Array<T | Array<T>>>;\n\n/**\n * Compare all the items to see if they are all referentially equal in two arrays no matter how\n * deeply nested the arrays are.\n *\n * @private\n */\nfunction areNestedArrayItemsStrictlyEqual(\n  a: NestedArray<any>,\n  b: NestedArray<any>,\n): boolean {\n  // If `a` and `b` are referentially equal, return true.\n  if (a === b) {\n    return true;\n  }\n  // If either `a` or `b` are not an array or not of the same length return false. `a` and `b` are\n  // known to not be equal here, we checked above.\n  if (!Array.isArray(a) || !Array.isArray(b) || a.length !== b.length) {\n    return false;\n  }\n  // Otherwise let us compare all of the array items (which are potentially nested arrays!) to see\n  // if they are equal.\n  return a.every((item, i) => areNestedArrayItemsStrictlyEqual(item, b[i]));\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\n\nexport class RecordingCache implements NormalizedCache {\n  private recordedData: NormalizedCacheObject = {};\n\n  constructor(private readonly data: NormalizedCacheObject = {}) {}\n\n  public record(\n    transaction: (recordingCache: RecordingCache) => void,\n  ): NormalizedCacheObject {\n    transaction(this);\n    const recordedData = this.recordedData;\n    this.recordedData = {};\n    return recordedData;\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return { ...this.data, ...this.recordedData };\n  }\n\n  public get(dataId: string): StoreObject {\n    if (this.recordedData.hasOwnProperty(dataId)) {\n      // recording always takes precedence:\n      return this.recordedData[dataId];\n    }\n    return this.data[dataId];\n  }\n\n  public set(dataId: string, value: StoreObject) {\n    if (this.get(dataId) !== value) {\n      this.recordedData[dataId] = value;\n    }\n  }\n\n  public delete(dataId: string): void {\n    this.recordedData[dataId] = undefined;\n  }\n\n  public clear(): void {\n    Object.keys(this.data).forEach(dataId => this.delete(dataId));\n    this.recordedData = {};\n  }\n\n  public replace(newData: NormalizedCacheObject): void {\n    this.clear();\n    this.recordedData = { ...newData };\n  }\n}\n\nexport function record(\n  startingState: NormalizedCacheObject,\n  transaction: (recordingCache: RecordingCache) => void,\n): NormalizedCacheObject {\n  const recordingCache = new RecordingCache(startingState);\n  return recordingCache.record(transaction);\n}\n","import { DocumentNode } from 'graphql';\n\nimport { Cache, DataProxy, ApolloCache, Transaction } from 'apollo-cache';\n\nimport {\n  getFragmentQueryDocument,\n  addTypenameToDocument,\n} from 'apollo-utilities';\n\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport {\n  OptimisticStoreItem,\n  ApolloReducerConfig,\n  NormalizedCache,\n  NormalizedCacheObject,\n} from './types';\nimport { writeResultToStore } from './writeToStore';\nimport { readQueryFromStore, diffQueryAgainstStore } from './readFromStore';\nimport { defaultNormalizedCacheFactory } from './objectCache';\nimport { record } from './recordingCache';\nconst defaultConfig: ApolloReducerConfig = {\n  fragmentMatcher: new HeuristicFragmentMatcher(),\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  storeFactory: defaultNormalizedCacheFactory,\n};\n\nexport function defaultDataIdFromObject(result: any): string | null {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return `${result.__typename}:${result.id}`;\n    }\n    if (result._id !== undefined) {\n      return `${result.__typename}:${result._id}`;\n    }\n  }\n  return null;\n}\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  protected data: NormalizedCache;\n  protected config: ApolloReducerConfig;\n  protected optimistic: OptimisticStoreItem[] = [];\n  private watches: Cache.WatchOptions[] = [];\n  private addTypename: boolean;\n  private typenameDocumentCache = new WeakMap<DocumentNode, DocumentNode>();\n\n  // Set this while in a transaction to prevent broadcasts...\n  // don't forget to turn it back on!\n  private silenceBroadcast: boolean = false;\n\n  constructor(config: ApolloReducerConfig = {}) {\n    super();\n    this.config = { ...defaultConfig, ...config };\n\n    // backwards compat\n    if ((this.config as any).customResolvers) {\n      console.warn(\n        'customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).customResolvers;\n    }\n\n    if ((this.config as any).cacheResolvers) {\n      console.warn(\n        'cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).cacheResolvers;\n    }\n\n    this.addTypename = this.config.addTypename;\n    this.data = this.config.storeFactory();\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    if (optimistic && this.optimistic.length > 0) {\n      const patches = this.optimistic.map(opt => opt.data);\n      return Object.assign({}, this.data.toObject(), ...patches);\n    }\n\n    return this.data.toObject();\n  }\n\n  public read<T>(query: Cache.ReadOptions): T | null {\n    if (query.rootId && this.data.get(query.rootId) === undefined) {\n      return null;\n    }\n\n    return readQueryFromStore({\n      store: this.config.storeFactory(this.extract(query.optimistic)),\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      rootId: query.rootId,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n      previousResult: query.previousResult,\n      config: this.config,\n    });\n  }\n\n  public write(write: Cache.WriteOptions): void {\n    writeResultToStore({\n      dataId: write.dataId,\n      result: write.result,\n      variables: write.variables,\n      document: this.transformDocument(write.query),\n      store: this.data,\n      dataIdFromObject: this.config.dataIdFromObject,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n    });\n\n    this.broadcastWatches();\n  }\n\n  public diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T> {\n    return diffQueryAgainstStore({\n      store: this.config.storeFactory(this.extract(query.optimistic)),\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      returnPartialData: query.returnPartialData,\n      previousResult: query.previousResult,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n      config: this.config,\n    });\n  }\n\n  public watch(watch: Cache.WatchOptions): () => void {\n    this.watches.push(watch);\n\n    return () => {\n      this.watches = this.watches.filter(c => c !== watch);\n    };\n  }\n\n  public evict(query: Cache.EvictOptions): Cache.EvictionResult {\n    throw new Error(`eviction is not implemented on InMemory Cache`);\n  }\n\n  public reset(): Promise<void> {\n    this.data.clear();\n    this.broadcastWatches();\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(id: string) {\n    // Throw away optimistic changes of that particular mutation\n    const toPerform = this.optimistic.filter(item => item.id !== id);\n\n    this.optimistic = [];\n\n    // Re-run all of our optimistic data actions on top of one another.\n    toPerform.forEach(change => {\n      this.recordOptimisticTransaction(change.transaction, change.id);\n    });\n\n    this.broadcastWatches();\n  }\n\n  public performTransaction(transaction: Transaction<NormalizedCacheObject>) {\n    // TODO: does this need to be different, or is this okay for an in-memory cache?\n\n    let alreadySilenced = this.silenceBroadcast;\n    this.silenceBroadcast = true;\n\n    transaction(this);\n\n    if (!alreadySilenced) {\n      // Don't un-silence since this is a nested transaction\n      // (for example, a transaction inside an optimistic record)\n      this.silenceBroadcast = false;\n    }\n\n    this.broadcastWatches();\n  }\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    id: string,\n  ) {\n    this.silenceBroadcast = true;\n\n    const patch = record(this.extract(true), recordingCache => {\n      // swapping data instance on 'this' is currently necessary\n      // because of the current architecture\n      const dataCache = this.data;\n      this.data = recordingCache;\n      this.performTransaction(transaction);\n      this.data = dataCache;\n    });\n\n    this.optimistic.push({\n      id,\n      transaction,\n      data: patch,\n    });\n\n    this.silenceBroadcast = false;\n\n    this.broadcastWatches();\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        this.typenameDocumentCache.set(\n          document,\n          (result = addTypenameToDocument(document)),\n        );\n      }\n      return result;\n    }\n    return document;\n  }\n\n  public readQuery<QueryType, TVariables = any>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): QueryType {\n    return this.read({\n      query: options.query,\n      variables: options.variables,\n      optimistic,\n    });\n  }\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): FragmentType | null {\n    return this.read({\n      query: this.transformDocument(\n        getFragmentQueryDocument(options.fragment, options.fragmentName),\n      ),\n      variables: options.variables,\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: 'ROOT_QUERY',\n      result: options.data,\n      query: this.transformDocument(options.query),\n      variables: options.variables,\n    });\n  }\n\n  public writeFragment<TData = any, TVariables = any>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: options.id,\n      result: options.data,\n      query: this.transformDocument(\n        getFragmentQueryDocument(options.fragment, options.fragmentName),\n      ),\n      variables: options.variables,\n    });\n  }\n\n  protected broadcastWatches() {\n    // Skip this when silenced (like inside a transaction)\n    if (this.silenceBroadcast) return;\n\n    // right now, we invalidate all queries whenever anything changes\n    this.watches.forEach((c: Cache.WatchOptions) => {\n      const newData = this.diff({\n        query: c.query,\n        variables: c.variables,\n\n        // TODO: previousResult isn't in the types - this will only work\n        // with ObservableQuery which is in a different package\n        previousResult: (c as any).previousResult && c.previousResult(),\n        optimistic: c.optimistic,\n      });\n\n      c.callback(newData);\n    });\n  }\n}\n","import { Operation } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\n\n/*\n * Http Utilities: shared across links that make http requests\n */\n\n// XXX replace with actual typings when available\ndeclare var AbortController: any;\n\n//Used for any Error for data from the server\n//on a request with a Status >= 300\n//response contains no data or errors\nexport type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\n//Thrown when server's resonse is cannot be parsed\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport type ClientParseError = Error & {\n  parseError: Error;\n};\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: any; //overrides headers in options\n  credentials?: any;\n}\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\n// The body of a GraphQL-over-HTTP-POST request.\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: GlobalFetch['fetch'];\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: any;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: '*/*',\n  'content-type': 'application/json',\n};\n\nconst defaultOptions = {\n  method: 'POST',\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const throwServerError = (response, result, message) => {\n  const error = new Error(message) as ServerError;\n\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n\n  throw error;\n};\n\n//TODO: when conditional types come in ts 2.8, operations should be a generic type that extends Operation | Array<Operation>\nexport const parseAndCheckHttpResponse = operations => (response: Response) => {\n  return (\n    response\n      .text()\n      .then(bodyText => {\n        try {\n          return JSON.parse(bodyText);\n        } catch (err) {\n          const parseError = err as ServerParseError;\n          parseError.response = response;\n          parseError.statusCode = response.status;\n          parseError.bodyText = bodyText;\n          return Promise.reject(parseError);\n        }\n      })\n      //TODO: when conditional types come out then result should be T extends Array ? Array<FetchResult> : FetchResult\n      .then((result: any) => {\n        if (response.status >= 300) {\n          //Network error\n          throwServerError(\n            response,\n            result,\n            `Response not successful: Received status code ${response.status}`,\n          );\n        }\n        //TODO should really error per response in a Batch based on properties\n        //    - could be done in a validation link\n        if (\n          !Array.isArray(result) &&\n          !result.hasOwnProperty('data') &&\n          !result.hasOwnProperty('errors')\n        ) {\n          //Data error\n          throwServerError(\n            response,\n            result,\n            `Server response was missing for query '${\n              Array.isArray(operations)\n                ? operations.map(op => op.operationName)\n                : operations.operationName\n            }'.`,\n          );\n        }\n        return result;\n      })\n  );\n};\n\nexport const checkFetcher = (fetcher: GlobalFetch['fetch']) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    let library: string = 'unfetch';\n    if (typeof window === 'undefined') library = 'node-fetch';\n    throw new Error(`\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\nyour environment like https://www.npmjs.com/package/${library}.\n\nFor example:\nimport fetch from '${library}';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });`);\n  }\n};\n\nexport const createSignalIfSupported = () => {\n  if (typeof AbortController === 'undefined')\n    return { controller: false, signal: false };\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n  return { controller, signal };\n};\n\nexport const selectHttpOptionsAndBody = (\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) => {\n  let options: HttpConfig & Record<string, any> = {\n    ...fallbackConfig.options,\n    headers: fallbackConfig.headers,\n    credentials: fallbackConfig.credentials,\n  };\n  let http: HttpQueryOptions = fallbackConfig.http;\n\n  /*\n   * use the rest of the configs to populate the options\n   * configs later in the list will overwrite earlier fields\n   */\n  configs.forEach(config => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...config.headers,\n      },\n    };\n    if (config.credentials) options.credentials = config.credentials;\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = print(query);\n\n  return {\n    options,\n    body,\n  };\n};\n\nexport const serializeFetchParameter = (p, label) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new Error(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n\n//selects \"/graphql\" by default\nexport const selectURI = (\n  operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n","/* tslint:disable */\n\nimport { ApolloLink, Observable, RequestHandler, fromError } from 'apollo-link';\nimport {\n  serializeFetchParameter,\n  selectURI,\n  parseAndCheckHttpResponse,\n  checkFetcher,\n  selectHttpOptionsAndBody,\n  createSignalIfSupported,\n  fallbackHttpConfig,\n  Body,\n  HttpOptions,\n  UriFunction as _UriFunction,\n} from 'apollo-link-http-common';\nimport { DefinitionNode } from 'graphql';\n\nexport namespace HttpLink {\n  //TODO Would much rather be able to export directly\n  export interface UriFunction extends _UriFunction {}\n  export interface Options extends HttpOptions {\n    /**\n     * If set to true, use the HTTP GET method for query operations. Mutations\n     * will still use the method specified in fetchOptions.method (which defaults\n     * to POST).\n     */\n    useGETForQueries?: boolean;\n  }\n}\n\n// For backwards compatibility.\nexport import FetchOptions = HttpLink.Options;\nexport import UriFunction = HttpLink.UriFunction;\n\nexport const createHttpLink = (linkOptions: HttpLink.Options = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch is nothing passed in\n    fetch: fetcher,\n    includeExtensions,\n    useGETForQueries,\n    ...requestOptions\n  } = linkOptions;\n\n  // dev warnings to ensure fetch is present\n  checkFetcher(fetcher);\n\n  //fetcher is set here rather than the destructuring to ensure fetch is\n  //declared before referencing it. Reference in the destructuring would cause\n  //a ReferenceError\n  if (!fetcher) {\n    fetcher = fetch;\n  }\n\n  const linkConfig = {\n    http: { includeExtensions },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: context.headers,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    let controller;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      fetcher(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          // we have data and can send it to back up the link chain\n          observer.next(result);\n          observer.complete();\n          return result;\n        })\n        .catch(err => {\n          // fetch was cancelled so its already been cleaned up in the unsubscribe\n          if (err.name === 'AbortError') return;\n          // if it is a network error, BUT there is graphql result info\n          // fire the next observer before calling error\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n          // to pass to UI\n          // this should only happen if we *also* have data as part of the response key per\n          // the spec\n          if (err.result && err.result.errors && err.result.data) {\n            // if we dont' call next, the UI can only show networkError because AC didn't\n            // get andy graphqlErrors\n            // this is graphql execution result info (i.e errors and possibly data)\n            // this is because there is no formal spec how errors should translate to\n            // http status codes. So an auth error (401) could have both data\n            // from a public field, errors from a private field, and a status of 401\n            // {\n            //  user { // this will have errors\n            //    firstName\n            //  }\n            //  products { // this is public so will have data\n            //    cost\n            //  }\n            // }\n            //\n            // the result of above *could* look like this:\n            // {\n            //   data: { products: [{ cost: \"$10\" }] },\n            //   errors: [{\n            //      message: 'your session has timed out',\n            //      path: []\n            //   }]\n            // }\n            // status code of above would be a 401\n            // in the UI you want to show data where you can, errors as data where you can\n            // and use correct http status codes\n            observer.next(err.result);\n          }\n          observer.error(err);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nfunction rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(opts?: HttpLink.Options) {\n    super(createHttpLink(opts).request);\n  }\n}\n","import { Data, Field } from \"../support/interfaces\";\nimport Model from \"../orm/model\";\nimport { Model as ORMModel } from \"@vuex-orm/core\";\nimport Context from \"../common/context\";\nimport {clone, downcaseFirstLetter, isPlainObject} from \"../support/utils\";\nconst inflection = require(\"inflection\");\n\n/**\n * This class provides methods to transform incoming data from GraphQL in to a format Vuex-ORM understands and\n * vice versa.\n */\nexport default class Transformer {\n  /**\n   * Transforms outgoing data. Use for variables param.\n   *\n   * Omits relations and some other fields.\n   *\n   * @param model\n   * @param {Data} data\n   * @param {Array<String>} whitelist of fields\n   * @returns {Data}\n   */\n  public static transformOutgoingData(model: Model, data: Data, whitelist?: Array<String>): Data {\n    const context = Context.getInstance();\n    const relations: Map<string, Field> = model.getRelations();\n    const returnValue: Data = {};\n\n    Object.keys(data).forEach(key => {\n      const value = data[key];\n\n      // Always add fields on the whitelist. Ignore hasMany/One connections, empty fields and internal fields ($)\n      if (\n        (whitelist && whitelist.includes(key)) ||\n        ((!relations.has(key) || relations.get(key) instanceof context.components.BelongsTo) &&\n          !key.startsWith(\"$\") &&\n          value !== null)\n      ) {\n        let relatedModel =\n          relations.get(key) && relations.get(key)!.parent\n            ? context.getModel(inflection.singularize(relations.get(key)!.parent!.entity), true)\n            : null;\n\n        if (value instanceof Array) {\n          // Iterate over all fields and transform them if value is an array\n          const arrayModel = context.getModel(inflection.singularize(key));\n          returnValue[key] = value.map(v => this.transformOutgoingData(arrayModel || model, v));\n        } else if (typeof value === \"object\" && value.$id !== undefined) {\n          if (!relatedModel) {\n            relatedModel = context.getModel((value as ORMModel).$self().entity);\n          }\n\n          // Value is a record, transform that too\n          returnValue[key] = this.transformOutgoingData(relatedModel, value);\n        } else {\n          // In any other case just let the value be what ever it is\n          returnValue[key] = value;\n        }\n      }\n    });\n\n    return returnValue;\n  }\n\n  /**\n   * Transforms a set of incoming data to the format vuex-orm requires.\n   *\n   * @param {Data | Array<Data>} data\n   * @param model\n   * @param mutation required to transform something like `disableUserAddress` to the actual model name.\n   * @param {boolean} recursiveCall\n   * @returns {Data}\n   */\n  public static transformIncomingData(\n    data: Data | Array<Data>,\n    model: Model,\n    mutation: boolean = false,\n    recursiveCall: boolean = false\n  ): Data {\n    let result: Data = {};\n    const context = Context.getInstance();\n\n    if (!recursiveCall) {\n      context.logger.group(\"Transforming incoming data\");\n      context.logger.log(\"Raw data:\", data);\n    }\n\n    if (Array.isArray(data)) {\n      result = data.map((d: any) => this.transformIncomingData(d, model, mutation, true));\n    } else {\n      Object.keys(data).forEach(key => {\n        if (data[key] !== undefined && data[key] !== null) {\n          if (isPlainObject(data[key])) {\n            const localModel: Model = context.getModel(key, true) || model;\n\n            if (data[key].nodes && context.connectionQueryMode === \"nodes\") {\n              result[inflection.pluralize(key)] = this.transformIncomingData(\n                data[key].nodes,\n                localModel,\n                mutation,\n                true\n              );\n            } else if (data[key].edges && context.connectionQueryMode === \"edges\") {\n              result[inflection.pluralize(key)] = this.transformIncomingData(\n                data[key].edges,\n                localModel,\n                mutation,\n                true\n              );\n            } else if (data[\"node\"] && context.connectionQueryMode === \"edges\") {\n              result = this.transformIncomingData(data[\"node\"], localModel, mutation, true);\n            } else {\n              let newKey = key;\n\n              if (mutation && !recursiveCall) {\n                newKey = data[key].nodes ? localModel.pluralName : localModel.singularName;\n                newKey = downcaseFirstLetter(newKey);\n              }\n\n              result[newKey] = this.transformIncomingData(data[key], localModel, mutation, true);\n            }\n          } else if (Model.isFieldNumber(model.fields.get(key))) {\n            result[key] = parseFloat(data[key]);\n          } else if (key.endsWith(\"Type\") && model.isTypeFieldOfPolymorphicRelation(key)) {\n            result[key] = inflection.pluralize(downcaseFirstLetter(data[key]));\n          } else {\n            result[key] = data[key];\n          }\n        }\n      });\n    }\n\n    if (!recursiveCall) {\n      context.logger.log(\"Transformed data:\", result);\n      context.logger.groupEnd();\n    } else {\n      result[\"$isPersisted\"] = true;\n    }\n\n    // Make sure this is really a plain JS object. We had some issues in testing here.\n    return clone(result);\n  }\n}\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","import { ApolloClient, FetchPolicy } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloLink } from 'apollo-link';\nimport Context from '../common/context';\nimport { Arguments, Data } from '../support/interfaces';\nimport Transformer from './transformer';\nimport Model from '../orm/model';\nimport gql from 'graphql-tag';\n\n/**\n * This class takes care of the communication with the graphql endpoint by leveraging the awesome apollo-client lib.\n */\nexport default class Apollo {\n  /**\n   * The http link instance to use.\n   * @type {HttpLink}\n   */\n  private readonly httpLink: ApolloLink;\n\n  /**\n   * The ApolloClient instance\n   * @type {ApolloClient}\n   */\n  private readonly apolloClient: ApolloClient<any>;\n\n  /**\n   * @constructor\n   */\n  public constructor () {\n    const context = Context.getInstance();\n\n    // This allows the test suite to pass a custom link\n    if (context.options.link) {\n      this.httpLink = context.options.link;\n    } else {\n      this.httpLink = new HttpLink({\n        uri: context.options.url ? context.options.url : '/graphql',\n        credentials: context.options.credentials ? context.options.credentials : 'same-origin',\n        useGETForQueries: Boolean(context.options.useGETForQueries)\n      });\n    }\n\n    this.apolloClient = new ApolloClient({\n      link: this.httpLink,\n      cache: new InMemoryCache(),\n      connectToDevTools: context.debugMode\n    });\n  }\n\n  /**\n   * Sends a request to the GraphQL API via apollo\n   * @param model\n   * @param {any} query The query to send (result from gql())\n   * @param {Arguments} variables Optional. The variables to send with the query\n   * @param {boolean} mutation Optional. If this is a mutation (true) or a query (false, default)\n   * @param {boolean} bypassCache If true the query will be send to the server without using the cache. For queries only\n   * @returns {Promise<Data>} The new records\n   */\n  public async request (model: Model, query: any, variables?: Arguments, mutation: boolean = false,\n                        bypassCache: boolean = false): Promise<Data> {\n\n    const fetchPolicy: FetchPolicy = bypassCache ? 'network-only' : 'cache-first';\n    Context.getInstance().logger.logQuery(query, variables, fetchPolicy);\n\n    const context = { headers: Apollo.getHeaders() };\n\n    let response;\n    if (mutation) {\n      response = await this.apolloClient.mutate({ mutation: query, variables, context });\n    } else {\n      response = await this.apolloClient.query({ query, variables, fetchPolicy, context });\n    }\n\n    // Transform incoming data into something useful\n    return Transformer.transformIncomingData(response.data as Data, model, mutation);\n  }\n\n  public async simpleQuery (query: string, variables: Arguments, bypassCache: boolean = false, context?: Data): Promise<any> {\n    const fetchPolicy: FetchPolicy = bypassCache ? 'network-only' : 'cache-first';\n    return this.apolloClient.query({ query: gql(query), variables, fetchPolicy, context: { headers: Apollo.getHeaders() } });\n  }\n\n  public async simpleMutation (query: string, variables: Arguments, context?: Data): Promise<any> {\n    return this.apolloClient.mutate({ mutation: gql(query), variables, context: { headers: Apollo.getHeaders() } });\n  }\n\n  private static getHeaders () {\n    const context = Context.getInstance();\n\n    let headers: Object | Function = context.options.headers ? context.options.headers : {};\n\n    if (headers instanceof Function) {\n      headers = headers(context);\n    }\n\n    return headers;\n  }\n}\n","import { GraphQLField, GraphQLSchema, GraphQLType, GraphQLTypeDefinition } from '../support/interfaces';\nimport { upcaseFirstLetter } from '../support/utils';\n\nexport default class Schema {\n  private schema: GraphQLSchema;\n  private types: Map<string, GraphQLType>;\n  private mutations: Map<string, GraphQLField>;\n  private queries: Map<string, GraphQLField>;\n\n  public constructor (schema: GraphQLSchema) {\n    this.schema = schema;\n    this.types = new Map<string, GraphQLType>();\n    this.mutations = new Map<string, GraphQLField>();\n    this.queries = new Map<string, GraphQLField>();\n\n    this.schema.types.forEach((t: GraphQLType) => this.types.set(t.name, t));\n\n    this.getType('Query')!.fields!.forEach(f => this.queries.set(f.name, f));\n    this.getType('Mutation')!.fields!.forEach(f => this.mutations.set(f.name, f));\n  }\n\n  public determineQueryMode (): string {\n    let connection: GraphQLType | null = null;\n\n    this.queries.forEach((query) => {\n      const typeName = Schema.getTypeNameOfField(query);\n      if (typeName.endsWith('TypeConnection')) {\n        connection = this.getType(typeName);\n        return false; // break\n      }\n      return true;\n    });\n\n    if (!connection) {\n      throw new Error(\"Can't determine the connection mode due to the fact that here are no connection types in the schema. Please set the connectionQueryMode via Vuex-ORM-GraphQL options!\");\n    }\n\n    if (connection!.fields!.find(f => f.name === 'nodes')) {\n      return 'nodes';\n    } else if (connection!.fields!.find(f => f.name === 'edges')) {\n      return 'edges';\n    } else {\n      return 'plain';\n    }\n  }\n\n  public getType (name: string, allowNull: boolean = false): GraphQLType | null {\n    name = upcaseFirstLetter(name);\n    const type = this.types.get(name);\n\n    if (!allowNull && !type) throw new Error(`Couldn't find Type of name ${name} in the GraphQL Schema.`);\n\n    return type || null;\n  }\n\n  public getMutation (name: string, allowNull: boolean = false): GraphQLField | null {\n    const mutation = this.mutations.get(name);\n\n    if (!allowNull && !mutation) throw new Error(`Couldn't find Mutation of name ${name} in the GraphQL Schema.`);\n\n    return mutation || null;\n  }\n\n  public getQuery (name: string, allowNull: boolean = false): GraphQLField | null {\n    const query = this.queries.get(name);\n\n    if (!allowNull && !query) throw new Error(`Couldn't find Query of name ${name} in the GraphQL Schema.`);\n\n    return query || null;\n  }\n\n  static returnsConnection (field: GraphQLField): boolean {\n    return (Schema.getTypeNameOfField(field).endsWith('TypeConnection'));\n  }\n\n  static getRealType (type: GraphQLTypeDefinition): GraphQLTypeDefinition {\n    if (type.kind === 'NON_NULL') {\n      return this.getRealType(type.ofType);\n    } else {\n      return type;\n    }\n  }\n\n  static getTypeNameOfField (field: GraphQLField): string {\n    const type = this.getRealType(field.type);\n\n    if (type.kind === 'LIST') {\n      return `[${type.ofType.name}]`;\n    }\n\n    const name = type.name || type.ofType.name || type.ofType.ofType.name;\n\n    if (!name) throw new Error(`Can't find type name for field ${field.name}`);\n\n    return name;\n  }\n}\n","import Logger from \"./logger\";\nimport Model from \"../orm/model\";\nimport { Model as ORMModel } from \"@vuex-orm/core\";\nimport { Components } from \"@vuex-orm/core/lib/plugins/use\";\nimport {downcaseFirstLetter, isEqual, pick} from \"../support/utils\";\nimport Apollo from \"../graphql/apollo\";\nimport Database from \"@vuex-orm/core/lib/database/Database\";\nimport { Field, GraphQLType, Options } from \"../support/interfaces\";\nimport Schema from \"../graphql/schema\";\nimport { Mock, MockOptions } from \"../test-utils\";\nconst inflection = require(\"inflection\");\n\nconst introspectionQuery = `\nquery Introspection {\n  __schema {\n    types {\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          name\n          description\n          type {\n            name\n            kind\n\n            ofType {\n              kind\n\n              name\n              ofType {\n                kind\n                name\n\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n\n        type {\n          name\n          kind\n\n          ofType {\n            kind\n\n            name\n            ofType {\n              kind\n              name\n\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n\n      inputFields {\n        name\n        description\n        type {\n          name\n          kind\n\n          ofType {\n            kind\n\n            name\n            ofType {\n              kind\n              name\n\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\n/**\n * Internal context of the plugin. This class contains all information, the models, database, logger and so on.\n *\n * It's a singleton class, so just call Context.getInstance() anywhere you need the context.\n */\nexport default class Context {\n  /**\n   * Contains the instance for the singleton pattern.\n   * @type {Context}\n   */\n  public static instance: Context;\n\n  /**\n   * Components collection of Vuex-ORM\n   * @type {Components}\n   */\n  public readonly components: Components;\n\n  /**\n   * The options which have been passed to VuexOrm.install\n   * @type {Options}\n   */\n  public readonly options: Options;\n\n  /**\n   * The Vuex-ORM database\n   * @type {Database}\n   */\n  public readonly database: Database;\n\n  /**\n   * Collection of all Vuex-ORM models wrapped in a Model instance.\n   * @type {Map<any, any>}\n   */\n  public readonly models: Map<string, Model> = new Map();\n\n  /**\n   * When true, the logging is enabled.\n   * @type {boolean}\n   */\n  public readonly debugMode: boolean = false;\n\n  /**\n   * Our nice Vuex-ORM-GraphQL logger\n   * @type {Logger}\n   */\n  public readonly logger: Logger;\n\n  /**\n   * Instance of Apollo which cares about the communication with the graphql endpoint.\n   * @type {Apollo}\n   */\n  public apollo!: Apollo;\n\n  /**\n   * The graphql schema. Is null until the first request.\n   * @type {Schema}\n   */\n  public schema: Schema | undefined;\n\n  /**\n   * Tells if the schema is already loaded or the loading is currently processed.\n   * @type {boolean}\n   */\n  private schemaWillBeLoaded: Promise<Schema> | undefined;\n\n  /**\n   * Defines how to query connections. 'auto' | 'nodes' | 'edges' | 'plain'\n   */\n  public connectionQueryMode: string = \"auto\";\n\n  /**\n   * Container for the global mocks.\n   * @type {Object}\n   */\n  private globalMocks: { [key: string]: Array<Mock> } = {};\n\n  /**\n   * Private constructor, called by the setup method\n   *\n   * @constructor\n   * @param {Components} components The Vuex-ORM Components collection\n   * @param {Options} options The options passed to VuexORM.install\n   */\n  private constructor(components: Components, options: Options) {\n    this.components = components;\n    this.options = options;\n\n    this.database = options.database;\n    this.debugMode = Boolean(options.debug);\n    this.logger = new Logger(this.debugMode);\n\n    if (!options.database) {\n      throw new Error(\"database param is required to initialize vuex-orm-graphql!\");\n    }\n  }\n\n  /**\n   * Get the singleton instance of the context.\n   * @returns {Context}\n   */\n  public static getInstance(): Context {\n    return this.instance;\n  }\n\n  /**\n   * This is called only once and creates a new instance of the Context.\n   * @param {Components} components The Vuex-ORM Components collection\n   * @param {Options} options The options passed to VuexORM.install\n   * @returns {Context}\n   */\n  public static setup(components: Components, options: Options): Context {\n    this.instance = new Context(components, options);\n\n    this.instance.apollo = new Apollo();\n    this.instance.collectModels();\n\n    this.instance.logger.group(\"Context setup\");\n    this.instance.logger.log(\"components\", this.instance.components);\n    this.instance.logger.log(\"options\", this.instance.options);\n    this.instance.logger.log(\"database\", this.instance.database);\n    this.instance.logger.log(\"models\", this.instance.models);\n    this.instance.logger.groupEnd();\n\n    return this.instance;\n  }\n\n  public async loadSchema(): Promise<Schema> {\n    if (!this.schemaWillBeLoaded) {\n      this.schemaWillBeLoaded = new Promise(async (resolve, reject) => {\n        this.logger.log(\"Fetching GraphQL Schema initially ...\");\n\n        if (this.options.connectionQueryMode) {\n          this.connectionQueryMode = this.options.connectionQueryMode;\n        } else {\n          this.connectionQueryMode = \"auto\";\n        }\n\n        // We send a custom header along with the request. This is required for our test suite to mock the schema request.\n        const context = {\n          headers: { \"X-GraphQL-Introspection-Query\": \"true\" }\n        };\n\n        const result = await this.apollo.simpleQuery(introspectionQuery, {}, true, context);\n        this.schema = new Schema(result.data.__schema);\n\n        this.logger.log(\"GraphQL Schema successful fetched\", result);\n\n        this.logger.log(\"Starting to process the schema ...\");\n        this.processSchema();\n        this.logger.log(\"Schema procession done!\");\n\n        resolve(this.schema);\n      });\n    }\n\n    return this.schemaWillBeLoaded;\n  }\n\n  public processSchema() {\n    this.models.forEach((model: Model) => {\n      let type: GraphQLType;\n\n      try {\n        type = this.schema!.getType(model.singularName)!;\n      } catch (error) {\n        this.logger.warn(`Ignoring entity ${model.singularName} because it's not in the schema.`);\n        return;\n      }\n\n      model.fields.forEach((field: Field, fieldName: string) => {\n        if (!type.fields!.find(f => f.name === fieldName)) {\n          this.logger.warn(\n            `Ignoring field ${model.singularName}.${fieldName} because it's not in the schema.`\n          );\n\n          // TODO: Move skipFields to the model\n          model.baseModel.skipFields = model.baseModel.skipFields ? model.baseModel.skipFields : [];\n          if (!model.baseModel.skipFields.includes(fieldName)) {\n            model.baseModel.skipFields.push(fieldName);\n          }\n        }\n      });\n    });\n\n    if (this.connectionQueryMode === \"auto\") {\n      this.connectionQueryMode = this.schema!.determineQueryMode();\n      this.logger.log(\n        `Connection Query Mode is ${this.connectionQueryMode} by automatic detection`\n      );\n    } else {\n      this.logger.log(`Connection Query Mode is ${this.connectionQueryMode} by config`);\n    }\n  }\n\n  /**\n   * Returns a model from the model collection by it's name\n   *\n   * @param {Model|string} model A Model instance, a singular or plural name of the model\n   * @param {boolean} allowNull When true this method returns null instead of throwing an exception when no model was\n   *                            found. Default is false\n   * @returns {Model}\n   */\n  public getModel(model: Model | string, allowNull: boolean = false): Model {\n    if (typeof model === \"string\") {\n      const name: string = inflection.singularize(downcaseFirstLetter(model));\n      model = this.models.get(name) as Model;\n      if (!allowNull && !model) throw new Error(`No such model ${name}!`);\n    }\n\n    return model;\n  }\n\n  /**\n   * Will add a mock for simple mutations or queries. These are model unrelated and have to be\n   * handled  globally.\n   *\n   * @param {Mock} mock - Mock config.\n   */\n  public addGlobalMock(mock: Mock): boolean {\n    if (this.findGlobalMock(mock.action, mock.options)) return false;\n    if (!this.globalMocks[mock.action]) this.globalMocks[mock.action] = [];\n\n    this.globalMocks[mock.action].push(mock);\n    return true;\n  }\n\n  /**\n   * Finds a global mock for the given action and options.\n   *\n   * @param {string} action - Name of the action like 'simpleQuery' or 'simpleMutation'.\n   * @param {MockOptions} options - MockOptions like { name: 'example' }.\n   * @returns {Mock | null} null when no mock was found.\n   */\n  public findGlobalMock(action: string, options: MockOptions | undefined): Mock | null {\n    if (this.globalMocks[action]) {\n      return (\n        this.globalMocks[action].find(m => {\n          if (!m.options || !options) return true;\n\n          const relevantOptions = pick(options, Object.keys(m.options));\n          return isEqual(relevantOptions, m.options || {});\n        }) || null\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Hook to be called by simpleMutation and simpleQuery actions in order to get the global mock\n   * returnValue.\n   *\n   * @param {string} action - Name of the action like 'simpleQuery' or 'simpleMutation'.\n   * @param {MockOptions} options - MockOptions.\n   * @returns {any} null when no mock was found.\n   */\n  public globalMockHook(action: string, options: MockOptions): any {\n    let returnValue: null | { [key: string]: any } = null;\n    const mock = this.findGlobalMock(action, options);\n\n    if (mock) {\n      if (mock.returnValue instanceof Function) {\n        returnValue = mock.returnValue();\n      } else {\n        returnValue = mock.returnValue || null;\n      }\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Wraps all Vuex-ORM entities in a Model object and saves them into this.models\n   */\n  private collectModels() {\n    this.database.entities.forEach((entity: any) => {\n      const model: Model = new Model(entity.model as ORMModel);\n      this.models.set(model.singularName, model);\n      Model.augment(model);\n    });\n  }\n}\n","import Model from \"../orm/model\";\nimport { Arguments, Field, GraphQLField } from \"../support/interfaces\";\nimport {clone, isPlainObject, takeWhile, upcaseFirstLetter} from \"../support/utils\";\nimport gql from \"graphql-tag\";\nimport Context from \"../common/context\";\nimport Schema from \"./schema\";\n\n/**\n * Contains all logic to build GraphQL queries/mutations.\n */\nexport default class QueryBuilder {\n  /**\n   * Builds a field for the GraphQL query and a specific model\n   *\n   * @param {Model|string} model The model to use\n   * @param {boolean} multiple Determines whether plural/nodes syntax or singular syntax is used.\n   * @param {Arguments} args The args that will be passed to the query field ( user(role: $role) )\n   * @param {Array<Model>} path The relations in this list are ignored (while traversing relations).\n   *                                    Mainly for recursion\n   * @param {string} name Optional name of the field. If not provided, this will be the model name\n   * @param filter\n   * @param {boolean} allowIdFields Optional. Determines if id fields will be ignored for the argument generation.\n   *                                See buildArguments\n   * @returns {string}\n   *\n   * @todo Do we need the allowIdFields param?\n   */\n  public static buildField(\n    model: Model | string,\n    multiple: boolean = true,\n    args?: Arguments,\n    path: Array<string> = [],\n    name?: string,\n    filter: boolean = false,\n    allowIdFields: boolean = false\n  ): string {\n    const context = Context.getInstance();\n    model = context.getModel(model);\n\n    name = name ? name : model.pluralName;\n    const field = context.schema!.getMutation(name, true) || context.schema!.getQuery(name, true);\n\n    let params: string = this.buildArguments(model, args, false, filter, allowIdFields, field);\n    path = path.length === 0 ? [model.singularName] : path;\n\n    const fields = `\n      ${model.getQueryFields().join(\" \")}\n      ${this.buildRelationsQuery(model, path)}\n    `;\n\n    if (multiple) {\n      const header: string = `${name}${params}`;\n\n      if (context.connectionQueryMode === \"nodes\") {\n        return `\n          ${header} {\n            nodes {\n              ${fields}\n            }\n          }\n        `;\n      } else if (context.connectionQueryMode === \"edges\") {\n        return `\n          ${header} {\n            edges {\n              node {\n                ${fields}\n              }\n            }\n          }\n        `;\n      } else {\n        return `\n          ${header} {\n            ${fields}\n          }\n        `;\n      }\n    } else {\n      return `\n        ${name ? name : model.singularName}${params} {\n          ${fields}\n        }\n      `;\n    }\n  }\n\n  /**\n   * Generates a query.\n   * Currently only one root field for the query is possible.\n   * @param {string} type 'mutation' or 'query'\n   * @param {Model | string} model The model this query or mutation affects. This mainly determines the query fields.\n   * @param {string} name Optional name of the query/mutation. Will overwrite the name from the model.\n   * @param {Arguments} args Arguments for the query\n   * @param {boolean} multiple Determines if the root query field is a connection or not (will be passed to buildField)\n   * @param {boolean} filter When true the query arguments are passed via a filter object.\n   * @returns {any} Whatever gql() returns\n   */\n  public static buildQuery(\n    type: string,\n    model: Model | string,\n    name?: string,\n    args?: Arguments,\n    multiple?: boolean,\n    filter?: boolean\n  ) {\n    const context = Context.getInstance();\n\n    // model\n    model = context.getModel(model);\n    if (!model) throw new Error(\"No model provided to build the query!\");\n\n    // args\n    args = args ? clone(args) : {};\n    if (!args) throw new Error(\"args is undefined\");\n\n    Object.keys(args).forEach((key: string) => {\n      if (args && args[key] && isPlainObject(args[key])) {\n        args[key] = { __type: upcaseFirstLetter(key) };\n      }\n    });\n\n    // multiple\n    multiple = multiple === undefined ? !args[\"id\"] : multiple;\n\n    // name\n    if (!name) name = multiple ? model.pluralName : model.singularName;\n\n    // field\n    const field = context.schema!.getMutation(name, true) || context.schema!.getQuery(name, true);\n\n    // build query\n    const query: string =\n      `${type} ${upcaseFirstLetter(name)}${this.buildArguments(\n        model,\n        args,\n        true,\n        filter,\n        true,\n        field\n      )} {\\n` +\n      `  ${this.buildField(model, multiple, args, [], name, filter, true)}\\n` +\n      `}`;\n\n    return gql(query);\n  }\n\n  /**\n   * Generates the arguments string for a graphql query based on a given map.\n   *\n   * There are three types of arguments:\n   *\n   * 1) Signatures with primitive types (signature = true)\n   *      => 'mutation createUser($name: String!)'\n   *\n   * 2) Signatures with object types (signature = true, args = { user: { __type: 'User' }})\n   *      => 'mutation createUser($user: UserInput!)'\n   *\n   * 3) Fields with variables (signature = false)\n   *      => 'user(id: $id)'\n   *\n   * 4) Filter fields with variables (signature = false, filter = true)\n   *      => 'users(filter: { active: $active })'\n   *\n   * @param model\n   * @param {Arguments | undefined} args\n   * @param {boolean} signature When true, then this method generates a query signature instead of key/value pairs\n   * @param filter\n   * @param {boolean} allowIdFields If true, ID fields will be included in the arguments list\n   * @param {GraphQLField} field Optional. The GraphQL mutation or query field\n   * @returns {String}\n   */\n  public static buildArguments(\n    model: Model,\n    args?: Arguments,\n    signature: boolean = false,\n    filter: boolean = false,\n    allowIdFields: boolean = true,\n    field: GraphQLField | null = null\n  ): string {\n    if (args === undefined) return \"\";\n\n    let returnValue: string = \"\";\n    let first: boolean = true;\n\n    if (args) {\n      Object.keys(args).forEach((key: string) => {\n        let value: any = args[key];\n\n        const isForeignKey = model.skipField(key);\n        const skipFieldDueId = (key === \"id\" || isForeignKey) && !allowIdFields;\n\n        let schemaField: GraphQLField | undefined = this.findSchemaFieldForArgument(\n          key,\n          field,\n          model,\n          filter\n        );\n\n        const isConnectionField =\n          schemaField && Schema.getTypeNameOfField(schemaField).endsWith(\"TypeConnection\");\n\n        // Ignore null fields, ids and connections\n        if (value && !skipFieldDueId && !isConnectionField) {\n          let typeOrValue: any = \"\";\n\n          if (signature) {\n            if (isPlainObject(value) && value.__type) {\n              // Case 2 (User!)\n              typeOrValue = value.__type + \"Input!\";\n            } else if (Array.isArray(value) && field) {\n              const arg = QueryBuilder.findSchemaFieldForArgument(key, field, model, filter);\n              if (!arg) {\n                throw new Error(\n                  `The argument ${key} is of type array but it's not possible to determine the type, because it's not in the field ${\n                    field.name\n                    }`\n                );\n              }\n\n              typeOrValue = Schema.getTypeNameOfField(arg) + \"!\";\n            } else if (schemaField && Schema.getTypeNameOfField(schemaField)) {\n              // Case 1, 3 and 4\n              typeOrValue = Schema.getTypeNameOfField(schemaField) + \"!\";\n            } else if (key === \"id\" || isForeignKey) {\n              // Case 1 (ID!)\n              typeOrValue = \"ID!\";\n            } else {\n              // Case 1 (String!)\n              typeOrValue = this.determineAttributeType(model, key, value, field || undefined);\n              typeOrValue = typeOrValue + \"!\";\n            }\n          } else {\n            // Case 3 or 4\n            typeOrValue = `$${key}`;\n          }\n\n          returnValue = `${returnValue}${first ? \"\" : \", \"}${(signature ? \"$\" : \"\") +\n            key}: ${typeOrValue}`;\n\n          first = false;\n        }\n      });\n\n      if (!first) {\n        if (!signature && filter) returnValue = `filter: { ${returnValue} }`;\n        returnValue = `(${returnValue})`;\n      }\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Determines the GraphQL primitive type of a field in the variables hash by the field type or (when\n   * the field type is generic attribute) by the variable type.\n   * @param {Model} model\n   * @param {string} key\n   * @param {string} value\n   * @param {GraphQLField} query Pass when we have to detect the type of an argument\n   * @returns {string}\n   */\n  public static determineAttributeType(\n    model: Model,\n    key: string,\n    value: any,\n    query?: GraphQLField\n  ): string {\n    const context: Context = Context.getInstance();\n    const field: undefined | Field = model.fields.get(key);\n    let schemaField: undefined | GraphQLField;\n\n    if (query) {\n      schemaField = query.args.find(f => f.name === key);\n\n      if (!schemaField) {\n        const filterField = query.args.find(f => f.name === \"filter\");\n\n        if (filterField) {\n          schemaField = this.findSchemaFieldForArgument(key, null, model, true);\n        }\n      }\n    } else {\n      schemaField = context.schema!.getType(model.singularName)!.fields!.find(f => f.name === key);\n    }\n\n    if (schemaField && Schema.getTypeNameOfField(schemaField)) {\n      return Schema.getTypeNameOfField(schemaField);\n    } else {\n      if (field instanceof context.components.String) {\n        return \"String\";\n      } else if (field && field instanceof context.components.Number) {\n        return \"Int\";\n      } else if (field && field instanceof context.components.Boolean) {\n        return \"Boolean\";\n      } else {\n        if (typeof value === \"number\") return \"Int\";\n        if (typeof value === \"string\") return \"String\";\n        if (typeof value === \"boolean\") return \"Boolean\";\n\n        throw new Error(\n          `Can't find suitable graphql type for field '${model.singularName}.${key}'.`\n        );\n      }\n    }\n  }\n\n  private static findSchemaFieldForArgument(\n    name: String,\n    field: GraphQLField | null,\n    model: Model,\n    isFilter: boolean\n  ): GraphQLField | undefined {\n    const schema = Context.getInstance().schema!;\n    let schemaField: GraphQLField | undefined;\n\n    if (field) {\n      schemaField = field.args.find(f => f.name === name);\n      if (schemaField) return schemaField;\n    }\n\n    // We try to find the FilterType or at least the Type this query belongs to.\n    const type = schema.getType(model.singularName + (isFilter ? \"Filter\" : \"\"), true);\n\n    // Next we try to find the field from the type\n    schemaField = type\n      ? (isFilter ? type.inputFields! : type.fields!).find(f => f.name === name)\n      : undefined;\n\n    // Warn before we return null\n    if (!schemaField) {\n      Context.getInstance().logger.warn(\n        `Couldn't find the argument with name ${name} for the mutation/query ${\n          field ? field.name : \"(?)\"\n        }`\n      );\n    }\n\n    return schemaField;\n  }\n\n  /**\n   * Generates the fields for all related models.\n   *\n   * @param {Model} model\n   * @param {Array<Model>} path\n   * @returns {string}\n   */\n  static buildRelationsQuery(model: null | Model, path: Array<string> = []): string {\n    if (model === null) return \"\";\n\n    const context = Context.getInstance();\n    const relationQueries: Array<string> = [];\n\n    model.getRelations().forEach((field: Field, name: string) => {\n      let relatedModel: Model;\n\n      if (field.related) {\n        relatedModel = context.getModel(field.related.entity);\n      } else if (field.parent) {\n        relatedModel = context.getModel(field.parent.entity);\n      } else {\n        relatedModel = context.getModel(name);\n        context.logger.log(\n          \"WARNING: field has neither parent nor related property. Fallback to attribute name\",\n          field\n        );\n      }\n\n      // We will ignore the field, when it's already in the path. Means: When it's already queried. However there are\n      // cases where the model will have a relationship to itself. For example a nested category strucure where the\n      // category model has a parent: belongsTo(Category). So we also check if the model references itself. If this is\n      // the case, we allow the nesting up to 5 times.\n      const referencesItSelf = takeWhile(\n        path.slice(0).reverse(),\n        (p: string) => p === relatedModel.singularName\n      ).length;\n      const ignore = referencesItSelf\n        ? referencesItSelf > 5\n        : path.includes(relatedModel.singularName);\n\n      // console.log(`-----> Will ${ignore ? '' : 'not'} ignore ${model.singularName}.${name}, path: ${path.join('.')}`);\n\n      if (model.shouldEagerLoadRelation(name, field, relatedModel) && !ignore) {\n        const newPath = path.slice(0);\n        newPath.push(relatedModel.singularName);\n\n        relationQueries.push(\n          this.buildField(relatedModel, Model.isConnection(field), undefined, newPath, name, false)\n        );\n      }\n    });\n\n    return relationQueries.join(\"\\n\");\n  }\n}\n","import { Data, DispatchFunction } from '../support/interfaces';\nimport Context from '../common/context';\n\n/**\n * Provides some helper methods to interact with the Vuex-ORM store\n */\nexport class Store {\n  /**\n   * Inserts incoming data into the store. Existing data will be updated.\n   *\n   * @param {Data} data New data to insert/update\n   * @param {Function} dispatch Vuex Dispatch method for the model\n   * @return {Promise<Data>} Inserted data as hash\n   */\n  public static async insertData (data: Data, dispatch: DispatchFunction): Promise<Data> {\n    let insertedData: Data = {};\n\n    await Promise.all(Object.keys(data).map(async (key) => {\n      const value = data[key];\n      Context.getInstance().logger.log('Inserting records', value);\n      const newData = await dispatch('insertOrUpdate', { data: value });\n\n      Object.keys(newData).forEach((dataKey) => {\n        if (!insertedData[dataKey]) insertedData[dataKey] = [];\n        insertedData[dataKey] = insertedData[dataKey].concat(newData[dataKey]);\n      });\n    }));\n\n    return insertedData;\n  }\n}\n","import Model from \"../orm/model\";\nimport { upcaseFirstLetter } from \"../support/utils\";\n\n/**\n * Generic name generator for mutations and queries. In the future these methods may be influenced by the configuration.\n */\nexport default class NameGenerator {\n  public static getNameForPersist(model: Model) {\n    return this.getCRUDName(\"create\", model);\n  }\n\n  public static getNameForPush(model: Model) {\n    return this.getCRUDName(\"update\", model);\n  }\n\n  public static getNameForDestroy(model: Model) {\n    return this.getCRUDName(\"delete\", model);\n  }\n\n  public static getNameForFetch(model: Model, plural: boolean = false) {\n    return plural ? model.pluralName : model.singularName;\n  }\n\n  /**\n   * Internal helper to keep the code DRY. Just generates a name by leveraging the models singular name.\n   * @param {string} action Name of the action like 'create'\n   * @param {Model} model\n   * @returns {string} For example 'createBlogPost'\n   */\n  private static getCRUDName(action: string, model: Model) {\n    return `${action}${upcaseFirstLetter(model.singularName)}`;\n  }\n}\n","import QueryBuilder from \"../graphql/query-builder\";\nimport Context from \"../common/context\";\nimport { Store } from \"../orm/store\";\nimport { Arguments, Data, DispatchFunction } from \"../support/interfaces\";\nimport Model from \"../orm/model\";\nimport RootState from \"@vuex-orm/core/lib/modules/contracts/RootState\";\nimport Transformer from \"../graphql/transformer\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport Schema from \"../graphql/schema\";\n\nconst inflection = require(\"inflection\");\n\n/**\n * Base class for all Vuex actions. Contains some utility and convenience methods.\n */\nexport default class Action {\n  /**\n   * Sends a mutation.\n   *\n   * @param {string} name Name of the mutation like 'createUser'\n   * @param {Data | undefined} variables Variables to send with the mutation\n   * @param {Function} dispatch Vuex Dispatch method for the model\n   * @param {Model} model The model this mutation affects.\n   * @param {boolean} multiple Tells if we're requesting a single record or multiple.\n   * @returns {Promise<any>}\n   */\n  protected static async mutation(\n    name: string,\n    variables: Data | undefined,\n    dispatch: DispatchFunction,\n    model: Model\n  ): Promise<any> {\n    if (variables) {\n      const context: Context = Context.getInstance();\n      const schema: Schema = await context.loadSchema();\n\n      const multiple: boolean = Schema.returnsConnection(schema.getMutation(name)!);\n      const query = QueryBuilder.buildQuery(\"mutation\", model, name, variables, multiple);\n\n      // Send GraphQL Mutation\n      let newData = await Context.getInstance().apollo.request(model, query, variables, true);\n\n      // When this was not a destroy action, we get new data, which we should insert in the store\n      if (name !== NameGenerator.getNameForDestroy(model)) {\n        newData = newData[Object.keys(newData)[0]];\n\n        // IDs as String cause terrible issues, so we convert them to integers.\n        newData.id = parseInt(newData.id, 10);\n\n        const insertedData: Data = await Store.insertData(\n          { [model.pluralName]: newData },\n          dispatch\n        );\n\n        // Try to find the record to return\n        const records = insertedData[model.pluralName];\n        const newRecord = records[records.length - 1];\n        if (newRecord) {\n          return newRecord;\n        } else {\n          Context.getInstance().logger.log(\n            \"Couldn't find the record of type '\",\n            model.pluralName,\n            \"' within\",\n            insertedData,\n            \". Falling back to find()\"\n          );\n          return model.baseModel.query().last();\n        }\n      }\n\n      return true;\n    }\n  }\n\n  /**\n   * Convenience method to get the model from the state.\n   * @param {RootState} state Vuex state\n   * @returns {Model}\n   */\n  static getModelFromState(state: RootState): Model {\n    return Context.getInstance().getModel(state.$name);\n  }\n\n  /**\n   * Makes sure args is a hash.\n   *\n   * @param {Arguments|undefined} args\n   * @param {any} id When not undefined, it's added to the args\n   * @returns {Arguments}\n   */\n  static prepareArgs(args?: Arguments, id?: any): Arguments {\n    args = args || {};\n    if (id) args[\"id\"] = id;\n\n    return args;\n  }\n\n  /**\n   * Adds the record itself to the args and sends it through transformOutgoingData. Key is named by the singular name\n   * of the model.\n   *\n   * @param {Arguments} args\n   * @param {Model} model\n   * @param {Data} data\n   * @returns {Arguments}\n   */\n  static addRecordToArgs(args: Arguments, model: Model, data: Data): Arguments {\n    args[model.singularName] = Transformer.transformOutgoingData(model, data);\n    return args;\n  }\n\n  /**\n   * Transforms each field of the args which contains a model.\n   * @param {Arguments} args\n   * @returns {Arguments}\n   */\n  protected static transformArgs(args: Arguments): Arguments {\n    const context = Context.getInstance();\n\n    Object.keys(args).forEach((key: string) => {\n      const value: any = args[key];\n\n      if (value instanceof context.components.Model) {\n        const model = context.getModel(inflection.singularize(value.$self().entity));\n        const transformedValue = Transformer.transformOutgoingData(model, value);\n        context.logger.log(\n          \"A\",\n          key,\n          \"model was found within the variables and will be transformed from\",\n          value,\n          \"to\",\n          transformedValue\n        );\n        args[key] = transformedValue;\n      }\n    });\n\n    return args;\n  }\n}\n","import { ActionParams } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport { Store } from \"../orm/store\";\n\n/**\n * Destroy action for sending a delete mutation. Will be used for record.$destroy().\n */\nexport default class Destroy extends Action {\n  /**\n   * @param {State} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} id ID of the record to delete\n   * @returns {Promise<any>} true\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { id, args }: ActionParams\n  ): Promise<boolean> {\n    if (id) {\n      const model = this.getModelFromState(state!);\n      const mutationName = NameGenerator.getNameForDestroy(model);\n\n      const mockReturnValue = model.$mockHook(\"destroy\", { id });\n\n      if (mockReturnValue) {\n        await Store.insertData(mockReturnValue, dispatch!);\n        return true;\n      }\n\n      args = this.prepareArgs(args, id);\n\n      await Action.mutation(mutationName, args, dispatch!, model);\n      return true;\n    } else {\n      throw new Error(\"The destroy action requires the 'id' to be set\");\n    }\n  }\n}\n","import QueryBuilder from \"../graphql/query-builder\";\nimport Context from \"../common/context\";\nimport { Store } from \"../orm/store\";\nimport Transformer from \"../graphql/transformer\";\nimport { ActionParams, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\n\n/**\n * Fetch action for sending a query. Will be used for Model.fetch().\n */\nexport default class Fetch extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {ActionParams} params Optional params to send with the query\n   * @returns {Promise<Data>} The fetched records as hash\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    params?: ActionParams\n  ): Promise<Data> {\n    const context = Context.getInstance();\n    const model = this.getModelFromState(state!);\n\n    const mockReturnValue = model.$mockHook(\"fetch\", {\n      filter: params ? params.filter || {} : {}\n    });\n\n    if (mockReturnValue) {\n      return Store.insertData(mockReturnValue, dispatch!);\n    }\n\n    await context.loadSchema();\n\n    // Filter\n    const filter =\n      params && params.filter\n        ? Transformer.transformOutgoingData(model, params.filter, Object.keys(params.filter))\n        : {};\n\n    const bypassCache = params && params.bypassCache;\n\n    // When the filter contains an id, we query in singular mode\n    const multiple: boolean = !filter[\"id\"];\n    const name: string = NameGenerator.getNameForFetch(model, multiple);\n    const query = QueryBuilder.buildQuery(\"query\", model, name, filter, multiple, multiple);\n\n    // Send the request to the GraphQL API\n    const data = await context.apollo.request(model, query, filter, false, bypassCache as boolean);\n\n    // Insert incoming data into the store\n    return Store.insertData(data, dispatch!);\n  }\n}\n","import { ActionParams, Arguments, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport Context from \"../common/context\";\nimport Schema from \"../graphql/schema\";\nimport { Store } from \"../orm/store\";\n\n/**\n * Mutate action for sending a custom mutation. Will be used for Model.mutate() and record.$mutate().\n */\nexport default class Mutate extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} name Name of the query\n   * @param {boolean} multiple Fetch one or multiple?\n   * @param {Arguments} args Arguments for the mutation. Must contain a 'mutation' field.\n   * @returns {Promise<Data>} The new record if any\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { args, name }: ActionParams\n  ): Promise<Data> {\n    if (name) {\n      const context: Context = Context.getInstance();\n      const model = this.getModelFromState(state!);\n\n      const mockReturnValue = model.$mockHook(\"mutate\", {\n        name,\n        args: args || {}\n      });\n\n      if (mockReturnValue) {\n        return Store.insertData(mockReturnValue, dispatch!);\n      }\n\n      const schema: Schema = await context.loadSchema();\n      args = this.prepareArgs(args);\n\n      // There could be anything in the args, but we have to be sure that all records are gone through\n      // transformOutgoingData()\n      this.transformArgs(args);\n\n      // Send the mutation\n      return Action.mutation(name, args, dispatch!, model);\n    } else {\n      throw new Error(\"The mutate action requires the mutation name ('mutation') to be set\");\n    }\n  }\n}\n","import Context from \"../common/context\";\nimport { ActionParams, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport Model from \"../orm/model\";\nimport { Store } from \"../orm/store\";\n\n/**\n * Persist action for sending a create mutation. Will be used for record.$persist().\n */\nexport default class Persist extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} id ID of the record to persist\n   * @returns {Promise<Data>} The saved record\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { id, args }: ActionParams\n  ): Promise<Data> {\n    if (id) {\n      const model = this.getModelFromState(state!);\n      const mutationName = NameGenerator.getNameForPersist(model);\n      const oldRecord = model.getRecordWithId(id);\n\n      const mockReturnValue = model.$mockHook(\"persist\", {\n        id,\n        args: args || {}\n      });\n\n      if (mockReturnValue) {\n        const newRecord = Store.insertData(mockReturnValue, dispatch!);\n        await this.deleteObsoleteRecord(model, newRecord, oldRecord);\n        return newRecord;\n      }\n\n      // Arguments\n      args = this.prepareArgs(args);\n      this.addRecordToArgs(args, model, oldRecord);\n\n      // Send mutation\n      const newRecord = await Action.mutation(mutationName, args, dispatch!, model);\n\n      // Delete the old record if necessary\n      await this.deleteObsoleteRecord(model, newRecord, oldRecord);\n\n      return newRecord;\n    } else {\n      throw new Error(\"The persist action requires the 'id' to be set\");\n    }\n  }\n\n  /**\n   * It's very likely that the server generated different ID for this record.\n   * In this case Action.mutation has inserted a new record instead of updating the existing one.\n   *\n   * @param {Model} model\n   * @param {Data} record\n   * @returns {Promise<void>}\n   */\n  private static async deleteObsoleteRecord(model: Model, newRecord: Data, oldRecord: Data) {\n    if (newRecord && oldRecord && newRecord.id !== oldRecord.id) {\n      Context.getInstance().logger.log(\"Dropping deprecated record\", oldRecord);\n      return oldRecord.$delete();\n    }\n  }\n}\n","import { ActionParams, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport { Store } from \"../orm/store\";\n\n/**\n * Push action for sending a update mutation. Will be used for record.$push().\n */\nexport default class Push extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {Arguments} data New data to save\n   * @param {Arguments} args Additional arguments\n   * @returns {Promise<Data>} The updated record\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { data, args }: ActionParams\n  ): Promise<Data> {\n    if (data) {\n      const model = this.getModelFromState(state!);\n      const mutationName = NameGenerator.getNameForPush(model);\n\n      const mockReturnValue = model.$mockHook(\"push\", {\n        data,\n        args: args || {}\n      });\n\n      if (mockReturnValue) {\n        return Store.insertData(mockReturnValue, dispatch!);\n      }\n\n      // Arguments\n      args = this.prepareArgs(args, data.id);\n      this.addRecordToArgs(args, model, data);\n\n      // Send the mutation\n      return Action.mutation(mutationName, args, dispatch!, model);\n    } else {\n      throw new Error(\"The persist action requires the 'data' to be set\");\n    }\n  }\n}\n","import QueryBuilder from \"../graphql/query-builder\";\nimport Context from \"../common/context\";\nimport { Store } from \"../orm/store\";\nimport Transformer from \"../graphql/transformer\";\nimport { ActionParams, Data } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport NameGenerator from \"../graphql/name-generator\";\nimport Schema from \"../graphql/schema\";\n\n/**\n * Query action for sending a custom query. Will be used for Model.customQuery() and record.$customQuery.\n */\nexport default class Query extends Action {\n  /**\n   * @param {any} state The Vuex state\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} name Name of the query\n   * @param {boolean} multiple Fetch one or multiple?\n   * @param {object} filter Filter object (arguments)\n   * @param {boolean} bypassCache Whether to bypass the cache\n   * @returns {Promise<Data>} The fetched records as hash\n   */\n  public static async call(\n    { state, dispatch }: ActionParams,\n    { name, filter, bypassCache }: ActionParams\n  ): Promise<Data> {\n    if (name) {\n      const context: Context = Context.getInstance();\n      const model = this.getModelFromState(state!);\n\n      const mockReturnValue = model.$mockHook(\"query\", {\n        name,\n        filter: filter || {}\n      });\n\n      if (mockReturnValue) {\n        return Store.insertData(mockReturnValue, dispatch!);\n      }\n\n      const schema: Schema = await context.loadSchema();\n\n      // Filter\n      filter = filter ? Transformer.transformOutgoingData(model, filter) : {};\n\n      // Multiple?\n      const multiple: boolean = Schema.returnsConnection(schema.getQuery(name)!);\n\n      // Build query\n      const query = QueryBuilder.buildQuery(\"query\", model, name, filter, multiple, false);\n\n      // Send the request to the GraphQL API\n      const data = await context.apollo.request(\n        model,\n        query,\n        filter,\n        false,\n        bypassCache as boolean\n      );\n\n      // Insert incoming data into the store\n      return Store.insertData(data, dispatch!);\n    } else {\n      throw new Error(\"The customQuery action requires the query name ('name') to be set\");\n    }\n  }\n}\n","import { ActionParams } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport Context from \"../common/context\";\nimport { parse } from \"graphql/language/parser\";\nimport {clone} from \"../support/utils\";\n\n/**\n * SimpleQuery action for sending a model unrelated simple query.\n */\nexport default class SimpleQuery extends Action {\n  /**\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} query The query to send\n   * @param {Arguments} variables\n   * @param {boolean} bypassCache Whether to bypass the cache\n   * @returns {Promise<any>} The result\n   */\n  public static async call(\n    { dispatch }: ActionParams,\n    { query, bypassCache, variables }: ActionParams\n  ): Promise<any> {\n    const context: Context = Context.getInstance();\n\n    if (query) {\n      const parsedQuery = parse(query);\n      const mockReturnValue = context.globalMockHook(\"simpleQuery\", {\n        name: parsedQuery.definitions[0][\"name\"].value,\n        variables\n      });\n\n      if (mockReturnValue) {\n        return mockReturnValue;\n      }\n\n      variables = this.prepareArgs(variables);\n\n      const result = await context.apollo.simpleQuery(query, variables, bypassCache);\n\n      // remove the symbols\n      return clone(result.data);\n    } else {\n      throw new Error(\"The simpleQuery action requires the 'query' to be set\");\n    }\n  }\n}\n","import { ActionParams } from \"../support/interfaces\";\nimport Action from \"./action\";\nimport Context from \"../common/context\";\nimport { parse } from \"graphql/language/parser\";\nimport {clone} from \"../support/utils\";\n\n/**\n * SimpleMutation action for sending a model unrelated simple mutation.\n */\nexport default class SimpleMutation extends Action {\n  /**\n   * @param {DispatchFunction} dispatch Vuex Dispatch method for the model\n   * @param {string} query The query to send\n   * @param {Arguments} variables\n   * @returns {Promise<any>} The result\n   */\n  public static async call(\n    { dispatch }: ActionParams,\n    { query, variables }: ActionParams\n  ): Promise<any> {\n    const context: Context = Context.getInstance();\n\n    if (query) {\n      const parsedQuery = parse(query);\n      const mockReturnValue = context.globalMockHook(\"simpleMutation\", {\n        name: parsedQuery.definitions[0][\"name\"].value,\n        variables\n      });\n\n      if (mockReturnValue) {\n        return mockReturnValue;\n      }\n\n      variables = this.prepareArgs(variables);\n      const result = await context.apollo.simpleMutation(query, variables);\n\n      // remove the symbols\n      return clone(result.data);\n    } else {\n      throw new Error(\"The simpleMutation action requires the 'query' to be set\");\n    }\n  }\n}\n","import { PatchedModel, Options, ActionParams } from \"./support/interfaces\";\nimport Context from \"./common/context\";\nimport { Components } from \"@vuex-orm/core/lib/plugins/use\";\nimport { Destroy, Fetch, Mutate, Persist, Push } from \"./actions\";\nimport Query from \"./actions/query\";\nimport SimpleQuery from \"./actions/simple-query\";\nimport SimpleMutation from \"./actions/simple-mutation\";\nimport { isPlainObject } from './support/utils';\n\n/**\n * Main class of the plugin. Setups the internal context, Vuex actions and model methods\n */\nexport default class VuexORMGraphQL {\n  /**\n   * @constructor\n   * @param {Components} components The Vuex-ORM Components collection\n   * @param {Options} options The options passed to VuexORM.install\n   */\n  public constructor(components: Components, options: Options) {\n    Context.setup(components, options);\n    VuexORMGraphQL.setupActions();\n    VuexORMGraphQL.setupModelMethods();\n  }\n\n  /**\n   * Allow everything to read the context.\n   */\n  public getContext(): Context {\n    return Context.getInstance();\n  }\n\n  /**\n   * This method will setup following Vuex actions: fetch, persist, push, destroy, mutate\n   */\n  private static setupActions() {\n    const context = Context.getInstance();\n\n    context.components.RootActions.simpleQuery = SimpleQuery.call.bind(SimpleQuery);\n    context.components.RootActions.simpleMutation = SimpleMutation.call.bind(SimpleMutation);\n\n    context.components.Actions.fetch = Fetch.call.bind(Fetch);\n    context.components.Actions.persist = Persist.call.bind(Persist);\n    context.components.Actions.push = Push.call.bind(Push);\n    context.components.Actions.destroy = Destroy.call.bind(Destroy);\n    context.components.Actions.mutate = Mutate.call.bind(Mutate);\n    context.components.Actions.query = Query.call.bind(Query);\n  }\n\n  /**\n   * This method will setup following model methods: Model.fetch, Model.mutate, Model.customQuery, record.$mutate,\n   * record.$persist, record.$push, record.$destroy and record.$deleteAndDestroy, record.$customQuery\n   */\n  private static setupModelMethods() {\n    const context = Context.getInstance();\n\n    // Register static model convenience methods\n    (context.components.Model as typeof PatchedModel).fetch = async function(\n      filter: any,\n      bypassCache = false\n    ) {\n      let filterObj = filter;\n      if (!isPlainObject(filterObj)) filterObj = { id: filter };\n      return this.dispatch(\"fetch\", { filter: filterObj, bypassCache });\n    };\n\n    (context.components.Model as typeof PatchedModel).mutate = async function(\n      params: ActionParams\n    ) {\n      return this.dispatch(\"mutate\", params);\n    };\n\n    (context.components.Model as typeof PatchedModel).customQuery = async function({\n      name,\n      filter,\n      multiple,\n      bypassCache\n    }: ActionParams) {\n      return this.dispatch(\"query\", { name, filter, multiple, bypassCache });\n    };\n\n    // Register model convenience methods\n    const model = context.components.Model.prototype;\n\n    model.$mutate = async function({ name, args, multiple }: ActionParams) {\n      args = args || {};\n      if (!args[\"id\"]) args[\"id\"] = this.id;\n      return this.$dispatch(\"mutate\", { name, args, multiple });\n    };\n\n    model.$customQuery = async function({ name, filter, multiple, bypassCache }: ActionParams) {\n      filter = filter || {};\n      if (!filter[\"id\"]) filter[\"id\"] = this.id;\n      return this.$dispatch(\"query\", { name, filter, multiple, bypassCache });\n    };\n\n    model.$persist = async function(args: any) {\n      return this.$dispatch(\"persist\", { id: this.id, args });\n    };\n\n    model.$push = async function(args: any) {\n      return this.$dispatch(\"push\", { data: this, args });\n    };\n\n    model.$destroy = async function() {\n      return this.$dispatch(\"destroy\", { id: this.id });\n    };\n\n    model.$deleteAndDestroy = async function() {\n      await this.$delete();\n      return this.$destroy();\n    };\n  }\n}\n"],"names":["_invariant","_location","_printError","_GraphQLError","_syntaxError","_locatedError","_formatError","_blockStringValue","_error","source","_source","lexer","_lexer","_kinds","_directiveLocation","_visitor","print","parse","stringify","this","isEqual","require$$0","Observable","__extends","ponyfill","$$observable","LinkObservable","__assign","Deduplicator","version","haveWarned","graphqlAnywhere","inflection","gql","tslib_1.__extends"],"mappings":"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"}